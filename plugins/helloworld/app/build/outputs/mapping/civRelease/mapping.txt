androidx.annotation.AnimRes -> atakplugin.helloworld.a:
androidx.annotation.AnimatorRes -> atakplugin.helloworld.b:
androidx.annotation.AnyRes -> atakplugin.helloworld.c:
androidx.annotation.AnyThread -> atakplugin.helloworld.d:
androidx.annotation.ArrayRes -> atakplugin.helloworld.e:
androidx.annotation.AttrRes -> atakplugin.helloworld.f:
androidx.annotation.BinderThread -> atakplugin.helloworld.g:
androidx.annotation.BoolRes -> atakplugin.helloworld.h:
androidx.annotation.CallSuper -> atakplugin.helloworld.i:
androidx.annotation.CheckResult -> atakplugin.helloworld.j:
    java.lang.String suggest() -> a
androidx.annotation.ColorInt -> atakplugin.helloworld.k:
androidx.annotation.ColorLong -> atakplugin.helloworld.l:
androidx.annotation.ColorRes -> atakplugin.helloworld.m:
androidx.annotation.ContentView -> atakplugin.helloworld.n:
androidx.annotation.DimenRes -> atakplugin.helloworld.o:
androidx.annotation.Dimension -> atakplugin.helloworld.p:
    int DP -> a
    int PX -> b
    int SP -> c
    int unit() -> a
androidx.annotation.DrawableRes -> atakplugin.helloworld.q:
androidx.annotation.FloatRange -> atakplugin.helloworld.r:
    double from() -> a
    double to() -> b
    boolean fromInclusive() -> c
    boolean toInclusive() -> d
androidx.annotation.FontRes -> atakplugin.helloworld.s:
androidx.annotation.FractionRes -> atakplugin.helloworld.t:
androidx.annotation.GuardedBy -> atakplugin.helloworld.u:
    java.lang.String value() -> a
androidx.annotation.HalfFloat -> atakplugin.helloworld.v:
androidx.annotation.IdRes -> atakplugin.helloworld.w:
androidx.annotation.InspectableProperty -> atakplugin.helloworld.x:
    java.lang.String name() -> a
    int attributeId() -> b
    boolean hasAttributeId() -> c
    androidx.annotation.InspectableProperty$ValueType valueType() -> d
    androidx.annotation.InspectableProperty$EnumEntry[] enumMapping() -> e
    androidx.annotation.InspectableProperty$FlagEntry[] flagMapping() -> f
androidx.annotation.InspectableProperty$EnumEntry -> atakplugin.helloworld.x$a:
    java.lang.String name() -> a
    int value() -> b
androidx.annotation.InspectableProperty$FlagEntry -> atakplugin.helloworld.x$b:
    java.lang.String name() -> a
    int target() -> b
    int mask() -> c
androidx.annotation.InspectableProperty$ValueType -> atakplugin.helloworld.x$c:
    androidx.annotation.InspectableProperty$ValueType NONE -> a
    androidx.annotation.InspectableProperty$ValueType INFERRED -> b
    androidx.annotation.InspectableProperty$ValueType INT_ENUM -> c
    androidx.annotation.InspectableProperty$ValueType INT_FLAG -> d
    androidx.annotation.InspectableProperty$ValueType COLOR -> e
    androidx.annotation.InspectableProperty$ValueType GRAVITY -> f
    androidx.annotation.InspectableProperty$ValueType RESOURCE_ID -> g
    androidx.annotation.InspectableProperty$ValueType[] $VALUES -> h
    148:148:androidx.annotation.InspectableProperty$ValueType[] values() -> values
    148:148:androidx.annotation.InspectableProperty$ValueType valueOf(java.lang.String) -> valueOf
    148:148:void <init>(java.lang.String,int) -> <init>
    148:197:void <clinit>() -> <clinit>
androidx.annotation.IntDef -> atakplugin.helloworld.y:
    int[] value() -> a
    boolean flag() -> b
    boolean open() -> c
androidx.annotation.IntRange -> atakplugin.helloworld.z:
    long from() -> a
    long to() -> b
androidx.annotation.IntegerRes -> atakplugin.helloworld.aa:
androidx.annotation.InterpolatorRes -> atakplugin.helloworld.ab:
androidx.annotation.Keep -> atakplugin.helloworld.ac:
androidx.annotation.LayoutRes -> atakplugin.helloworld.ad:
androidx.annotation.LongDef -> atakplugin.helloworld.ae:
    long[] value() -> a
    boolean flag() -> b
    boolean open() -> c
androidx.annotation.MainThread -> atakplugin.helloworld.af:
androidx.annotation.MenuRes -> atakplugin.helloworld.ag:
androidx.annotation.NavigationRes -> atakplugin.helloworld.ah:
androidx.annotation.NonNull -> atakplugin.helloworld.ai:
androidx.annotation.Nullable -> atakplugin.helloworld.aj:
androidx.annotation.PluralsRes -> atakplugin.helloworld.ak:
androidx.annotation.Px -> atakplugin.helloworld.al:
androidx.annotation.RawRes -> atakplugin.helloworld.am:
androidx.annotation.RequiresApi -> atakplugin.helloworld.an:
    int value() -> a
    int api() -> b
androidx.annotation.RequiresFeature -> atakplugin.helloworld.ao:
    java.lang.String name() -> a
    java.lang.String enforcement() -> b
androidx.annotation.RequiresPermission -> atakplugin.helloworld.ap:
    java.lang.String value() -> a
    java.lang.String[] allOf() -> b
    java.lang.String[] anyOf() -> c
    boolean conditional() -> d
androidx.annotation.RequiresPermission$Read -> atakplugin.helloworld.ap$a:
    androidx.annotation.RequiresPermission value() -> a
androidx.annotation.RequiresPermission$Write -> atakplugin.helloworld.ap$b:
    androidx.annotation.RequiresPermission value() -> a
androidx.annotation.RestrictTo -> atakplugin.helloworld.aq:
    androidx.annotation.RestrictTo$Scope[] value() -> a
androidx.annotation.RestrictTo$Scope -> atakplugin.helloworld.aq$a:
    androidx.annotation.RestrictTo$Scope LIBRARY -> a
    androidx.annotation.RestrictTo$Scope LIBRARY_GROUP -> b
    androidx.annotation.RestrictTo$Scope LIBRARY_GROUP_PREFIX -> c
    androidx.annotation.RestrictTo$Scope GROUP_ID -> d
    androidx.annotation.RestrictTo$Scope TESTS -> e
    androidx.annotation.RestrictTo$Scope SUBCLASSES -> f
    androidx.annotation.RestrictTo$Scope[] $VALUES -> g
    58:58:androidx.annotation.RestrictTo$Scope[] values() -> values
    58:58:androidx.annotation.RestrictTo$Scope valueOf(java.lang.String) -> valueOf
    58:58:void <init>(java.lang.String,int) -> <init>
    58:105:void <clinit>() -> <clinit>
androidx.annotation.Size -> atakplugin.helloworld.ar:
    long value() -> a
    long min() -> b
    long max() -> c
    long multiple() -> d
androidx.annotation.StringDef -> atakplugin.helloworld.as:
    java.lang.String[] value() -> a
    boolean open() -> b
androidx.annotation.StringRes -> atakplugin.helloworld.at:
androidx.annotation.StyleRes -> atakplugin.helloworld.au:
androidx.annotation.StyleableRes -> atakplugin.helloworld.av:
androidx.annotation.TransitionRes -> atakplugin.helloworld.aw:
androidx.annotation.UiThread -> atakplugin.helloworld.ax:
androidx.annotation.VisibleForTesting -> atakplugin.helloworld.ay:
    int PRIVATE -> a
    int PACKAGE_PRIVATE -> b
    int PROTECTED -> c
    int NONE -> d
    int otherwise() -> a
androidx.annotation.WorkerThread -> atakplugin.helloworld.az:
androidx.annotation.XmlRes -> atakplugin.helloworld.ba:
androidx.recyclerview.R -> atakplugin.helloworld.bb:
    void <init>() -> <init>
androidx.recyclerview.R$attr -> atakplugin.helloworld.bb$a:
    int fastScrollEnabled -> fastScrollEnabled
    int fastScrollHorizontalThumbDrawable -> fastScrollHorizontalThumbDrawable
    int fastScrollHorizontalTrackDrawable -> fastScrollHorizontalTrackDrawable
    int fastScrollVerticalThumbDrawable -> fastScrollVerticalThumbDrawable
    int fastScrollVerticalTrackDrawable -> fastScrollVerticalTrackDrawable
    int layoutManager -> layoutManager
    int recyclerViewStyle -> recyclerViewStyle
    int reverseLayout -> reverseLayout
    int spanCount -> spanCount
    int stackFromEnd -> stackFromEnd
    void <init>() -> <init>
androidx.recyclerview.R$dimen -> atakplugin.helloworld.bb$b:
    int fastscroll_default_thickness -> fastscroll_default_thickness
    int fastscroll_margin -> fastscroll_margin
    int fastscroll_minimum_range -> fastscroll_minimum_range
    int item_touch_helper_max_drag_scroll_per_frame -> item_touch_helper_max_drag_scroll_per_frame
    int item_touch_helper_swipe_escape_max_velocity -> item_touch_helper_swipe_escape_max_velocity
    int item_touch_helper_swipe_escape_velocity -> item_touch_helper_swipe_escape_velocity
    void <init>() -> <init>
androidx.recyclerview.R$id -> atakplugin.helloworld.bb$c:
    int icon -> icon
    int item_touch_helper_previous_elevation -> item_touch_helper_previous_elevation
    void <init>() -> <init>
androidx.recyclerview.R$styleable -> atakplugin.helloworld.bb$d:
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_orientation -> RecyclerView_android_orientation
    int RecyclerView_android_clipToPadding -> RecyclerView_android_clipToPadding
    int RecyclerView_android_descendantFocusability -> RecyclerView_android_descendantFocusability
    int RecyclerView_fastScrollEnabled -> RecyclerView_fastScrollEnabled
    int RecyclerView_fastScrollHorizontalThumbDrawable -> RecyclerView_fastScrollHorizontalThumbDrawable
    int RecyclerView_fastScrollHorizontalTrackDrawable -> RecyclerView_fastScrollHorizontalTrackDrawable
    int RecyclerView_fastScrollVerticalThumbDrawable -> RecyclerView_fastScrollVerticalThumbDrawable
    int RecyclerView_fastScrollVerticalTrackDrawable -> RecyclerView_fastScrollVerticalTrackDrawable
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int RecyclerView_reverseLayout -> RecyclerView_reverseLayout
    int RecyclerView_spanCount -> RecyclerView_spanCount
    int RecyclerView_stackFromEnd -> RecyclerView_stackFromEnd
    void <init>() -> <init>
    void <clinit>() -> <clinit>
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.a:
    int POSITION_TYPE_INVISIBLE -> a
    int POSITION_TYPE_NEW_OR_LAID_OUT -> b
    boolean DEBUG -> i
    java.lang.String TAG -> j
    androidx.core.util.Pools$Pool mUpdateOpPool -> k
    java.util.ArrayList mPendingUpdates -> c
    java.util.ArrayList mPostponedList -> d
    androidx.recyclerview.widget.AdapterHelper$Callback mCallback -> e
    java.lang.Runnable mOnItemProcessedCallback -> f
    boolean mDisableRecycler -> g
    androidx.recyclerview.widget.OpReorderer mOpReorderer -> h
    int mExistingUpdateTypes -> l
    72:73:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    55:79:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    82:83:androidx.recyclerview.widget.AdapterHelper addUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp[]) -> a
    87:90:void reset() -> a
    93:116:void preProcess() -> b
    119:125:void consumePostponedUpdates() -> c
    130:131:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> b
    134:185:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> c
    188:225:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> d
    231:312:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> e
    315:327:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> a
    330:407:int updatePositionWithPostponed(int,int) -> d
    411:428:boolean canFindInPreLayout(int) -> d
    432:433:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> f
    439:457:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> g
    460:460:boolean hasPendingUpdates() -> d
    464:464:boolean hasAnyUpdateTypes(int) -> a
    468:468:int findPositionOffset(int) -> b
    472:497:int findPositionOffset(int,int) -> a
    504:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> a
    516:521:boolean onItemRangeInserted(int,int) -> b
    528:533:boolean onItemRangeRemoved(int,int) -> c
    540:548:boolean onItemRangeMoved(int,int,int) -> a
    557:585:void consumeUpdatesInOnePass() -> e
    588:620:int applyPendingUpdatesToPosition(int) -> c
    624:624:boolean hasUpdates() -> f
    727:736:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> a
    741:745:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    748:753:void recycleUpdateOpsAndClearList(java.util.List) -> a
androidx.recyclerview.widget.AdapterHelper$Callback -> androidx.recyclerview.widget.a$a:
    androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> a
    void offsetPositionsForRemovingInvisible(int,int) -> a
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> b
    void markViewHoldersUpdated(int,int,java.lang.Object) -> a
    void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> b
    void offsetPositionsForAdd(int,int) -> c
    void offsetPositionsForMove(int,int) -> d
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.a$b:
    int ADD -> a
    int REMOVE -> b
    int UPDATE -> c
    int MOVE -> d
    int POOL_SIZE -> e
    int cmd -> f
    int positionStart -> g
    java.lang.Object payload -> h
    int itemCount -> i
    651:656:void <init>(int,int,int,java.lang.Object) -> <init>
    659:669:java.lang.String cmdToString() -> a
    674:675:java.lang.String toString() -> toString
    681:713:boolean equals(java.lang.Object) -> equals
    718:721:int hashCode() -> hashCode
androidx.recyclerview.widget.AdapterListUpdateCallback -> androidx.recyclerview.widget.b:
    androidx.recyclerview.widget.RecyclerView$Adapter mAdapter -> a
    35:37:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    42:43:void onInserted(int,int) -> a
    48:49:void onRemoved(int,int) -> b
    54:55:void onMoved(int,int) -> c
    60:61:void onChanged(int,int,java.lang.Object) -> a
androidx.recyclerview.widget.AsyncDifferConfig -> androidx.recyclerview.widget.c:
    java.util.concurrent.Executor mMainThreadExecutor -> a
    java.util.concurrent.Executor mBackgroundThreadExecutor -> b
    androidx.recyclerview.widget.DiffUtil$ItemCallback mDiffCallback -> c
    47:51:void <init>(java.util.concurrent.Executor,java.util.concurrent.Executor,androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    58:58:java.util.concurrent.Executor getMainThreadExecutor() -> a
    64:64:java.util.concurrent.Executor getBackgroundThreadExecutor() -> b
    70:70:androidx.recyclerview.widget.DiffUtil$ItemCallback getDiffCallback() -> c
androidx.recyclerview.widget.AsyncDifferConfig$Builder -> androidx.recyclerview.widget.c$a:
    java.util.concurrent.Executor mMainThreadExecutor -> a
    java.util.concurrent.Executor mBackgroundThreadExecutor -> b
    androidx.recyclerview.widget.DiffUtil$ItemCallback mDiffCallback -> c
    java.lang.Object sExecutorLock -> d
    java.util.concurrent.Executor sDiffExecutor -> e
    84:86:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    102:103:androidx.recyclerview.widget.AsyncDifferConfig$Builder setMainThreadExecutor(java.util.concurrent.Executor) -> a
    118:119:androidx.recyclerview.widget.AsyncDifferConfig$Builder setBackgroundThreadExecutor(java.util.concurrent.Executor) -> b
    129:137:androidx.recyclerview.widget.AsyncDifferConfig build() -> a
    144:145:void <clinit>() -> <clinit>
androidx.recyclerview.widget.AsyncListDiffer -> androidx.recyclerview.widget.d:
    androidx.recyclerview.widget.ListUpdateCallback mUpdateCallback -> d
    androidx.recyclerview.widget.AsyncDifferConfig mConfig -> a
    java.util.concurrent.Executor mMainThreadExecutor -> b
    java.util.concurrent.Executor sMainThreadExecutor -> e
    java.util.List mListeners -> f
    java.util.List mList -> g
    java.util.List mReadOnlyList -> h
    int mMaxScheduledGeneration -> c
    162:164:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    148:197:void <init>(androidx.recyclerview.widget.ListUpdateCallback,androidx.recyclerview.widget.AsyncDifferConfig) -> <init>
    216:216:java.util.List getCurrentList() -> a
    231:232:void submitList(java.util.List) -> a
    254:357:void submitList(java.util.List,java.lang.Runnable) -> a
    364:370:void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable) -> a
    375:381:void onCurrentListChanged(java.util.List,java.lang.Runnable) -> b
    392:393:void addListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener) -> a
    403:404:void removeListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener) -> b
    131:131:void <clinit>() -> <clinit>
androidx.recyclerview.widget.AsyncListDiffer$1 -> androidx.recyclerview.widget.e:
    java.util.List val$oldList -> a
    java.util.List val$newList -> b
    int val$runGeneration -> c
    java.lang.Runnable val$commitCallback -> d
    androidx.recyclerview.widget.AsyncListDiffer this$0 -> e
    289:289:void <init>(androidx.recyclerview.widget.AsyncListDiffer,java.util.List,java.util.List,int,java.lang.Runnable) -> <init>
    292:355:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$1$1 -> androidx.recyclerview.widget.f:
    androidx.recyclerview.widget.AsyncListDiffer$1 this$1 -> a
    292:292:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1) -> <init>
    295:295:int getOldListSize() -> a
    300:300:int getNewListSize() -> b
    305:311:boolean areItemsTheSame(int,int) -> a
    316:328:boolean areContentsTheSame(int,int) -> b
    334:343:java.lang.Object getChangePayload(int,int) -> c
androidx.recyclerview.widget.AsyncListDiffer$1$2 -> androidx.recyclerview.widget.g:
    androidx.recyclerview.widget.DiffUtil$DiffResult val$result -> a
    androidx.recyclerview.widget.AsyncListDiffer$1 this$1 -> b
    347:347:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1,androidx.recyclerview.widget.DiffUtil$DiffResult) -> <init>
    350:353:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$ListListener -> androidx.recyclerview.widget.d$a:
    void onCurrentListChanged(java.util.List,java.util.List) -> a
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor -> androidx.recyclerview.widget.d$b:
    android.os.Handler mHandler -> a
    122:123:void <init>() -> <init>
    126:127:void execute(java.lang.Runnable) -> execute
androidx.recyclerview.widget.AsyncListUtil -> androidx.recyclerview.widget.h:
    java.lang.String TAG -> a
    boolean DEBUG -> b
    java.lang.Class mTClass -> c
    int mTileSize -> d
    androidx.recyclerview.widget.AsyncListUtil$DataCallback mDataCallback -> e
    androidx.recyclerview.widget.AsyncListUtil$ViewCallback mViewCallback -> f
    androidx.recyclerview.widget.TileList mTileList -> g
    androidx.recyclerview.widget.ThreadUtil$MainThreadCallback mMainThreadProxy -> h
    androidx.recyclerview.widget.ThreadUtil$BackgroundCallback mBackgroundProxy -> i
    int[] mTmpRange -> j
    int[] mPrevRange -> k
    int[] mTmpRangeExtended -> l
    boolean mAllowScrollHints -> m
    int mScrollHint -> r
    int mItemCount -> n
    int mDisplayedGeneration -> o
    int mRequestedGeneration -> p
    android.util.SparseIntArray mMissingPositions -> q
    androidx.recyclerview.widget.ThreadUtil$MainThreadCallback mMainThreadCallback -> s
    androidx.recyclerview.widget.ThreadUtil$BackgroundCallback mBackgroundCallback -> t
    79:80:void log(java.lang.String,java.lang.Object[]) -> a
    64:293:void <init>(java.lang.Class,int,androidx.recyclerview.widget.AsyncListUtil$DataCallback,androidx.recyclerview.widget.AsyncListUtil$ViewCallback) -> <init>
    107:107:boolean isRefreshPending() -> e
    119:124:void onRangeChanged() -> a
    133:135:void refresh() -> b
    155:162:java.lang.Object getItem(int) -> a
    175:175:int getItemCount() -> c
    179:209:void updateRange() -> d
androidx.recyclerview.widget.AsyncListUtil$1 -> androidx.recyclerview.widget.i:
    androidx.recyclerview.widget.AsyncListUtil this$0 -> a
    212:212:void <init>(androidx.recyclerview.widget.AsyncListUtil) -> <init>
    218:229:void updateItemCount(int,int) -> a
    233:260:void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> a
    264:276:void removeTile(int,int) -> b
    282:286:void recycleAllTiles() -> a
    289:289:boolean isRequestedGeneration(int) -> a
androidx.recyclerview.widget.AsyncListUtil$2 -> androidx.recyclerview.widget.j:
    androidx.recyclerview.widget.TileList$Tile mRecycledRoot -> c
    android.util.SparseBooleanArray mLoadedTiles -> a
    int mGeneration -> d
    int mItemCount -> e
    int mFirstRequiredTileStart -> f
    int mLastRequiredTileStart -> g
    androidx.recyclerview.widget.AsyncListUtil this$0 -> b
    294:298:void <init>(androidx.recyclerview.widget.AsyncListUtil) -> <init>
    308:312:void refresh(int) -> a
    322:347:void updateRange(int,int,int,int,int) -> a
    350:350:int getTileStart(int) -> b
    355:362:void requestTiles(int,int,int,boolean) -> a
    366:378:void loadTile(int,int) -> a
    385:389:void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> a
    392:397:androidx.recyclerview.widget.TileList$Tile acquireTile() -> a
    401:401:boolean isTileLoaded(int) -> c
    405:410:void addTile(androidx.recyclerview.widget.TileList$Tile) -> b
    413:418:void removeTile(int) -> d
    421:438:void flushTileCache(int) -> e
    441:442:void log(java.lang.String,java.lang.Object[]) -> a
androidx.recyclerview.widget.AsyncListUtil$DataCallback -> androidx.recyclerview.widget.h$a:
    451:451:void <init>() -> <init>
    int refreshData() -> a
    void fillData(java.lang.Object[],int,int) -> a
    489:489:void recycleData(java.lang.Object[],int) -> a
    511:511:int getMaxCachedTiles() -> b
androidx.recyclerview.widget.AsyncListUtil$ViewCallback -> androidx.recyclerview.widget.h$b:
    int HINT_SCROLL_NONE -> a
    int HINT_SCROLL_DESC -> b
    int HINT_SCROLL_ASC -> c
    521:521:void <init>() -> <init>
    void getItemRangeInto(int[]) -> a
    577:581:void extendRangeInto(int[],int[],int) -> a
    void onDataRefresh() -> a
    void onItemLoaded(int) -> a
androidx.recyclerview.widget.BatchingListUpdateCallback -> androidx.recyclerview.widget.k:
    int TYPE_NONE -> f
    int TYPE_ADD -> g
    int TYPE_REMOVE -> h
    int TYPE_CHANGE -> i
    androidx.recyclerview.widget.ListUpdateCallback mWrapped -> a
    int mLastEventType -> b
    int mLastEventPosition -> c
    int mLastEventCount -> d
    java.lang.Object mLastEventPayload -> e
    41:48:void <init>(androidx.recyclerview.widget.ListUpdateCallback) -> <init>
    56:72:void dispatchLastEvent() -> a
    76:86:void onInserted(int,int) -> a
    90:100:void onRemoved(int,int) -> b
    104:106:void onMoved(int,int) -> c
    110:124:void onChanged(int,int,java.lang.Object) -> a
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.l:
    boolean DEBUG -> d
    java.lang.String TAG -> e
    androidx.recyclerview.widget.ChildHelper$Callback mCallback -> a
    androidx.recyclerview.widget.ChildHelper$Bucket mBucket -> b
    java.util.List mHiddenViews -> c
    48:52:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    60:62:void hideViewInternal(android.view.View) -> g
    70:74:boolean unhideViewInternal(android.view.View) -> h
    85:86:void addView(android.view.View,boolean) -> a
    98:111:void addView(android.view.View,int,boolean) -> a
    114:131:int getOffset(int) -> f
    140:151:void removeView(android.view.View) -> a
    160:172:void removeViewAt(int) -> a
    180:181:android.view.View getChildAt(int) -> b
    188:197:void removeAllViewsUnfiltered() -> a
    206:216:android.view.View findHiddenNonRemovedView(int) -> c
    230:244:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> a
    253:253:int getChildCount() -> b
    263:263:int getUnfilteredChildCount() -> c
    273:273:android.view.View getUnfilteredChildAt(int) -> d
    282:288:void detachViewFromParent(int) -> e
    297:309:int indexOfChild(android.view.View) -> b
    319:319:boolean isHidden(android.view.View) -> c
    328:340:void hide(android.view.View) -> d
    350:359:void unhide(android.view.View) -> e
    363:363:java.lang.String toString() -> toString
    373:389:boolean removeViewIfHidden(android.view.View) -> f
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.l$a:
    int BITS_PER_WORD -> a
    long LAST_BIT -> b
    long mData -> c
    androidx.recyclerview.widget.ChildHelper$Bucket mNext -> d
    395:401:void <init>() -> <init>
    406:412:void set(int) -> a
    415:418:void ensureNext() -> b
    421:429:void clear(int) -> b
    432:436:boolean get(int) -> c
    441:445:void reset() -> a
    448:467:void insert(int,boolean) -> a
    470:488:boolean remove(int) -> d
    493:502:int countOnesBefore(int) -> e
    508:509:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper$Callback -> androidx.recyclerview.widget.l$b:
    int getChildCount() -> a
    void addView(android.view.View,int) -> a
    int indexOfChild(android.view.View) -> a
    void removeViewAt(int) -> a
    android.view.View getChildAt(int) -> b
    void removeAllViews() -> b
    androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> b
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    void detachViewFromParent(int) -> c
    void onEnteredHiddenState(android.view.View) -> c
    void onLeftHiddenState(android.view.View) -> d
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.m:
    boolean DEBUG -> n
    android.animation.TimeInterpolator sDefaultInterpolator -> o
    java.util.ArrayList mPendingRemovals -> p
    java.util.ArrayList mPendingAdditions -> q
    java.util.ArrayList mPendingMoves -> r
    java.util.ArrayList mPendingChanges -> s
    java.util.ArrayList mAdditionsList -> a
    java.util.ArrayList mMovesList -> b
    java.util.ArrayList mChangesList -> c
    java.util.ArrayList mAddAnimations -> d
    java.util.ArrayList mMoveAnimations -> e
    java.util.ArrayList mRemoveAnimations -> f
    java.util.ArrayList mChangeAnimations -> g
    38:55:void <init>() -> <init>
    102:189:void runPendingAnimations() -> a
    193:195:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    199:218:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> w
    222:225:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    229:252:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    257:274:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    278:316:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> b
    321:344:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    348:397:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> a
    400:408:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    411:417:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> b
    419:432:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    437:519:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    522:527:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> x
    531:541:boolean isRunning() -> b
    550:553:void dispatchFinishedWhenDone() -> c
    557:638:void endAnimations() -> d
    641:644:void cancelAll(java.util.List) -> a
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> a
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.n:
    java.util.ArrayList val$moves -> a
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> b
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:130:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.o:
    java.util.ArrayList val$changes -> a
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> b
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:153:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.p:
    java.util.ArrayList val$additions -> a
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> b
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:176:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.q:
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder -> a
    android.view.ViewPropertyAnimator val$animation -> b
    android.view.View val$view -> c
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    206:207:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    211:216:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.r:
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder -> a
    android.view.View val$view -> b
    android.view.ViewPropertyAnimator val$animation -> c
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    236:237:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    241:242:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:250:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.s:
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder -> a
    int val$deltaX -> b
    android.view.View val$view -> c
    int val$deltaY -> d
    android.view.ViewPropertyAnimator val$animation -> e
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> f
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    295:296:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    300:306:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:314:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.t:
    androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.view.ViewPropertyAnimator val$oldViewAnim -> b
    android.view.View val$view -> c
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    361:362:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    366:373:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.u:
    androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.view.ViewPropertyAnimator val$newViewAnimation -> b
    android.view.View val$newView -> c
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    383:384:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    387:394:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.m$a:
    androidx.recyclerview.widget.RecyclerView$ViewHolder oldHolder -> a
    androidx.recyclerview.widget.RecyclerView$ViewHolder newHolder -> b
    int fromX -> c
    int fromY -> d
    int toX -> e
    int toY -> f
    73:76:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    80:85:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.m$b:
    androidx.recyclerview.widget.RecyclerView$ViewHolder holder -> a
    int fromX -> b
    int fromY -> c
    int toX -> d
    int toY -> e
    61:67:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil -> androidx.recyclerview.widget.v:
    java.util.Comparator SNAKE_COMPARATOR -> a
    80:82:void <init>() -> <init>
    105:105:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback) -> a
    123:198:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean) -> a
    204:287:androidx.recyclerview.widget.DiffUtil$Snake diffPartial(androidx.recyclerview.widget.DiffUtil$Callback,int,int,int,int,int[],int[],int) -> a
    84:84:void <clinit>() -> <clinit>
androidx.recyclerview.widget.DiffUtil$1 -> androidx.recyclerview.widget.w:
    84:84:void <init>() -> <init>
    87:88:int compare(androidx.recyclerview.widget.DiffUtil$Snake,androidx.recyclerview.widget.DiffUtil$Snake) -> a
    84:84:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.recyclerview.widget.DiffUtil$Callback -> androidx.recyclerview.widget.v$a:
    295:295:void <init>() -> <init>
    int getOldListSize() -> a
    int getNewListSize() -> b
    boolean areItemsTheSame(int,int) -> a
    boolean areContentsTheSame(int,int) -> b
    360:360:java.lang.Object getChangePayload(int,int) -> c
androidx.recyclerview.widget.DiffUtil$DiffResult -> androidx.recyclerview.widget.v$b:
    int NO_POSITION -> a
    int FLAG_NOT_CHANGED -> b
    int FLAG_CHANGED -> c
    int FLAG_MOVED_CHANGED -> d
    int FLAG_MOVED_NOT_CHANGED -> e
    int FLAG_IGNORE -> f
    int FLAG_OFFSET -> g
    int FLAG_MASK -> h
    java.util.List mSnakes -> i
    int[] mOldItemStatuses -> j
    int[] mNewItemStatuses -> k
    androidx.recyclerview.widget.DiffUtil$Callback mCallback -> l
    int mOldListSize -> m
    int mNewListSize -> n
    boolean mDetectMoves -> o
    567:579:void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean) -> <init>
    586:596:void addRootSnake() -> b
    610:643:void findMatchingItems() -> c
    646:650:void findAddition(int,int,int) -> a
    653:657:void findRemoval(int,int,int) -> b
    671:679:int convertOldPositionToNew(int) -> a
    695:703:int convertNewPositionToOld(int) -> b
    723:766:boolean findMatchingItem(int,int,int,boolean) -> a
    802:803:void dispatchUpdatesTo(androidx.recyclerview.widget.RecyclerView$Adapter) -> a
    816:853:void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback) -> a
    857:868:androidx.recyclerview.widget.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean) -> a
    873:909:void dispatchAdditions(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int) -> a
    913:950:void dispatchRemovals(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int) -> b
    954:954:java.util.List getSnakes() -> a
androidx.recyclerview.widget.DiffUtil$ItemCallback -> androidx.recyclerview.widget.v$c:
    373:373:void <init>() -> <init>
    boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> a
    boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> b
    434:434:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> c
androidx.recyclerview.widget.DiffUtil$PostponedUpdate -> androidx.recyclerview.widget.v$d:
    int posInOwnerList -> a
    int currentPos -> b
    boolean removal -> c
    973:977:void <init>(int,int,boolean) -> <init>
androidx.recyclerview.widget.DiffUtil$Range -> androidx.recyclerview.widget.v$e:
    int oldListStart -> a
    int oldListEnd -> b
    int newListStart -> c
    int newListEnd -> d
    482:483:void <init>() -> <init>
    485:490:void <init>(int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil$Snake -> androidx.recyclerview.widget.v$f:
    int x -> a
    int y -> b
    int size -> c
    boolean removal -> d
    boolean reverse -> e
    442:442:void <init>() -> <init>
androidx.recyclerview.widget.DividerItemDecoration -> androidx.recyclerview.widget.x:
    int HORIZONTAL -> a
    int VERTICAL -> b
    java.lang.String TAG -> c
    int[] ATTRS -> d
    android.graphics.drawable.Drawable mDivider -> e
    int mOrientation -> f
    android.graphics.Rect mBounds -> g
    57:75:void <init>(android.content.Context,int) -> <init>
    84:89:void setOrientation(int) -> a
    97:101:void setDrawable(android.graphics.drawable.Drawable) -> a
    108:108:android.graphics.drawable.Drawable getDrawable() -> a
    113:121:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> a
    124:148:void drawVertical(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> c
    151:175:void drawHorizontal(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> d
    180:189:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> a
    48:48:void <clinit>() -> <clinit>
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.y:
    int STATE_HIDDEN -> k
    int STATE_VISIBLE -> l
    int STATE_DRAGGING -> m
    int DRAG_NONE -> n
    int DRAG_X -> o
    int DRAG_Y -> p
    int ANIMATION_STATE_OUT -> q
    int ANIMATION_STATE_FADING_IN -> r
    int ANIMATION_STATE_IN -> s
    int ANIMATION_STATE_FADING_OUT -> t
    int SHOW_DURATION_MS -> u
    int HIDE_DELAY_AFTER_VISIBLE_MS -> v
    int HIDE_DELAY_AFTER_DRAGGING_MS -> w
    int HIDE_DURATION_MS -> x
    int SCROLLBAR_FULL_OPAQUE -> y
    int[] PRESSED_STATE_SET -> z
    int[] EMPTY_STATE_SET -> A
    int mScrollbarMinimumRange -> B
    int mMargin -> C
    android.graphics.drawable.StateListDrawable mVerticalThumbDrawable -> a
    android.graphics.drawable.Drawable mVerticalTrackDrawable -> b
    int mVerticalThumbWidth -> D
    int mVerticalTrackWidth -> E
    android.graphics.drawable.StateListDrawable mHorizontalThumbDrawable -> F
    android.graphics.drawable.Drawable mHorizontalTrackDrawable -> G
    int mHorizontalThumbHeight -> H
    int mHorizontalTrackHeight -> I
    int mVerticalThumbHeight -> c
    int mVerticalThumbCenterY -> d
    float mVerticalDragY -> e
    int mHorizontalThumbWidth -> f
    int mHorizontalThumbCenterX -> g
    float mHorizontalDragX -> h
    int mRecyclerViewWidth -> J
    int mRecyclerViewHeight -> K
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> L
    boolean mNeedVerticalScrollbar -> M
    boolean mNeedHorizontalScrollbar -> N
    int mState -> O
    int mDragState -> P
    int[] mVerticalRange -> Q
    int[] mHorizontalRange -> R
    android.animation.ValueAnimator mShowHideAnimator -> i
    int mAnimationState -> j
    java.lang.Runnable mHideRunnable -> S
    androidx.recyclerview.widget.RecyclerView$OnScrollListener mOnScrollListener -> T
    104:161:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:174:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> a
    177:180:void setupCallbacks() -> i
    183:187:void destroyCallbacks() -> j
    191:192:void requestRedraw() -> a
    195:213:void setState(int) -> a
    216:216:boolean isLayoutRTL() -> k
    220:220:boolean isDragging() -> b
    224:224:boolean isVisible() -> c
    228:240:void show() -> d
    244:255:void hide(int) -> b
    258:259:void cancelHide() -> l
    262:264:void resetHideDelay(int) -> c
    268:288:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> b
    291:313:void drawVerticalScrollbar(android.graphics.Canvas) -> a
    316:329:void drawHorizontalScrollbar(android.graphics.Canvas) -> b
    339:375:void updateScrollPosition(int,int) -> a
    381:404:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> a
    409:440:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> b
    443:443:void onRequestDisallowInterceptTouchEvent(boolean) -> a
    446:458:void verticalScrollTo(float) -> a
    461:475:void horizontalScrollTo(float) -> b
    479:490:int scrollTo(float,float,int[],int,int,int) -> a
    496:496:boolean isPointInsideVerticalThumb(float,float) -> a
    504:504:boolean isPointInsideHorizontalThumb(float,float) -> b
    511:511:android.graphics.drawable.Drawable getHorizontalTrackDrawable() -> e
    516:516:android.graphics.drawable.Drawable getHorizontalThumbDrawable() -> f
    521:521:android.graphics.drawable.Drawable getVerticalTrackDrawable() -> g
    526:526:android.graphics.drawable.Drawable getVerticalThumbDrawable() -> h
    533:535:int[] getVerticalRange() -> m
    542:544:int[] getHorizontalRange() -> n
    74:75:void <clinit>() -> <clinit>
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.z:
    androidx.recyclerview.widget.FastScroller this$0 -> a
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:127:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.aa:
    androidx.recyclerview.widget.FastScroller this$0 -> a
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:135:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> a
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.y$a:
    boolean mCanceled -> b
    androidx.recyclerview.widget.FastScroller this$0 -> a
    549:552:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    557:568:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    572:573:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.y$b:
    androidx.recyclerview.widget.FastScroller this$0 -> a
    577:578:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    582:586:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.ab:
    java.lang.ThreadLocal sGapWorker -> a
    java.util.ArrayList mRecyclerViews -> b
    long mPostTimeNs -> c
    long mFrameIntervalNs -> d
    java.util.ArrayList mTasks -> f
    java.util.Comparator sTaskComparator -> e
    30:59:void <init>() -> <init>
    163:164:void add(androidx.recyclerview.widget.RecyclerView) -> a
    167:171:void remove(androidx.recyclerview.widget.RecyclerView) -> b
    177:188:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    217:262:void buildTaskList() -> a
    265:274:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> a
    279:307:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> a
    312:341:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> a
    344:353:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> a
    356:364:void flushTasksWithDeadline(long) -> b
    367:369:void prefetch(long) -> a
    374:406:void run() -> run
    32:190:void <clinit>() -> <clinit>
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.ac:
    190:190:void <init>() -> <init>
    194:211:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> a
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.ab$a:
    int mPrefetchDx -> a
    int mPrefetchDy -> b
    int[] mPrefetchArray -> c
    int mCount -> d
    65:65:void <init>() -> <init>
    74:76:void setPrefetchVector(int,int) -> a
    79:108:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> a
    112:136:void addPosition(int,int) -> b
    139:145:boolean lastPrefetchIncludedPosition(int) -> a
    152:156:void clearPrefetchPositions() -> a
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.ab$b:
    boolean immediate -> a
    int viewVelocity -> b
    int distanceToItem -> c
    androidx.recyclerview.widget.RecyclerView view -> d
    int position -> e
    38:38:void <init>() -> <init>
    46:51:void clear() -> a
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    boolean DEBUG -> E
    java.lang.String TAG -> F
    int DEFAULT_SPAN_COUNT -> a
    boolean mPendingSpanCountChange -> b
    int mSpanCount -> c
    int[] mCachedBorders -> d
    android.view.View[] mSet -> e
    android.util.SparseIntArray mPreLayoutSpanSizeCache -> f
    android.util.SparseIntArray mPreLayoutSpanIndexCache -> g
    androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup -> h
    android.graphics.Rect mDecorInsets -> i
    boolean mUsingSpansToEstimateScrollBarDimensions -> G
    44:76:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    44:87:void <init>(android.content.Context,int) -> <init>
    44:100:void <init>(android.content.Context,int,int,boolean) -> <init>
    108:114:void setStackFromEnd(boolean) -> a
    119:127:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    133:141:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> b
    147:163:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    167:175:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> c
    179:181:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> a
    184:186:void clearPreLayoutSpanMappingCache() -> ac
    189:196:void cachePreLayoutSpanMapping() -> ad
    200:202:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    206:208:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> a
    212:214:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> b
    219:221:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> a
    225:227:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> a
    231:235:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> a
    242:242:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> a
    247:250:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    256:256:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> a
    266:267:void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) -> a
    275:275:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup() -> b
    280:286:void updateMeasurements() -> ae
    290:308:void setMeasuredDimension(android.graphics.Rect,int,int) -> a
    314:315:void calculateItemBorders(int) -> n
    325:344:int[] calculateItemBorders(int[],int,int) -> a
    348:352:int getSpaceForSpanRange(int,int) -> a
    359:365:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> a
    368:371:void ensureViewSet() -> af
    376:378:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    384:386:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> b
    391:416:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> b
    421:450:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> a
    455:467:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> a
    471:488:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> b
    492:509:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> c
    515:525:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    530:704:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> a
    716:737:void measureChild(android.view.View,int,boolean) -> a
    750:753:void guessMeasurement(float,int) -> a
    757:767:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> a
    775:792:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean) -> a
    801:801:int getSpanCount() -> c
    814:825:void setSpanCount(int) -> a
    1068:1185:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    1190:1190:boolean supportsPredictiveItemAnimations() -> d
    1195:1198:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> b
    1204:1207:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> c
    1213:1216:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> d
    1222:1225:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> e
    1255:1256:void setUsingSpansToEstimateScrollbarDimensions(boolean) -> b
    1267:1267:boolean isUsingSpansToEstimateScrollbarDimensions() -> e
    1271:1300:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> i
    1304:1342:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> j
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$a:
    1348:1348:void <init>() -> <init>
    1352:1352:int getSpanSize(int) -> a
    1357:1357:int getSpanIndex(int,int) -> a
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$b:
    int INVALID_SPAN_ID -> a
    int mSpanIndex -> b
    int mSpanSize -> c
    1375:1381:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1375:1385:void <init>(int,int) -> <init>
    1375:1389:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1375:1393:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1375:1397:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    1414:1414:int getSpanIndex() -> a
    1424:1424:int getSpanSize() -> b
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$c:
    android.util.SparseIntArray mSpanIndexCache -> a
    android.util.SparseIntArray mSpanGroupIndexCache -> b
    boolean mCacheSpanIndices -> c
    boolean mCacheSpanGroupIndices -> d
    834:840:void <init>() -> <init>
    int getSpanSize(int) -> a
    859:863:void setSpanIndexCacheEnabled(boolean) -> a
    876:880:void setSpanGroupIndexCacheEnabled(boolean) -> b
    887:888:void invalidateSpanIndexCache() -> a
    895:896:void invalidateSpanGroupIndexCache() -> b
    904:904:boolean isSpanIndexCacheEnabled() -> c
    913:913:boolean isSpanGroupIndexCacheEnabled() -> d
    917:926:int getCachedSpanIndex(int,int) -> b
    930:939:int getCachedSpanGroupIndex(int,int) -> c
    966:993:int getSpanIndex(int,int) -> a
    997:1015:int findFirstKeyLessThan(android.util.SparseIntArray,int) -> a
    1029:1061:int getSpanGroupIndex(int,int) -> d
androidx.recyclerview.widget.ItemTouchHelper -> androidx.recyclerview.widget.ad:
    int UP -> a
    int DOWN -> b
    int LEFT -> c
    int RIGHT -> d
    int START -> e
    int END -> f
    int ACTION_STATE_IDLE -> g
    int ACTION_STATE_SWIPE -> h
    int ACTION_STATE_DRAG -> i
    int ANIMATION_TYPE_SWIPE_SUCCESS -> j
    int ANIMATION_TYPE_SWIPE_CANCEL -> k
    int ANIMATION_TYPE_DRAG -> l
    java.lang.String TAG -> F
    boolean DEBUG -> G
    int ACTIVE_POINTER_ID_NONE -> H
    int DIRECTION_FLAG_COUNT -> m
    int ACTION_MODE_IDLE_MASK -> I
    int ACTION_MODE_SWIPE_MASK -> n
    int ACTION_MODE_DRAG_MASK -> o
    int PIXELS_PER_SECOND -> J
    java.util.List mPendingCleanup -> p
    float[] mTmpPosition -> K
    androidx.recyclerview.widget.RecyclerView$ViewHolder mSelected -> q
    float mInitialTouchX -> r
    float mInitialTouchY -> s
    float mSwipeEscapeVelocity -> L
    float mMaxSwipeVelocity -> M
    float mDx -> t
    float mDy -> u
    float mSelectedStartX -> N
    float mSelectedStartY -> O
    int mActivePointerId -> v
    androidx.recyclerview.widget.ItemTouchHelper$Callback mCallback -> w
    int mActionState -> P
    int mSelectedFlags -> x
    java.util.List mRecoverAnimations -> y
    int mSlop -> Q
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> z
    java.lang.Runnable mScrollRunnable -> A
    android.view.VelocityTracker mVelocityTracker -> B
    java.util.List mSwapTargets -> R
    java.util.List mDistances -> S
    androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> T
    android.view.View mOverdrawChild -> C
    int mOverdrawChildPosition -> D
    androidx.core.view.GestureDetectorCompat mGestureDetector -> E
    androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener mItemTouchHelperGestureListener -> U
    androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mOnItemTouchListener -> V
    android.graphics.Rect mTmpRect -> W
    long mDragScrollStartTimeInMs -> X
    167:448:void <init>(androidx.recyclerview.widget.ItemTouchHelper$Callback) -> <init>
    451:454:boolean hitTest(android.view.View,float,float,float,float) -> a
    467:482:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> a
    485:491:void setupCallbacks() -> d
    494:508:void destroyCallbacks() -> e
    511:514:void startGestureDetection() -> f
    517:524:void stopGestureDetection() -> g
    527:537:void getSelectedDxDy(float[]) -> a
    541:549:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> b
    554:563:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> a
    574:695:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    700:719:void postDispatchSwipe(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> a
    723:729:boolean hasRunningRecoverAnim() -> a
    737:796:boolean scrollIfNecessary() -> b
    800:845:java.util.List findSwapTargets(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    853:886:void moveIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    890:890:void onChildViewAttachedToWindow(android.view.View) -> a
    894:907:void onChildViewDetachedFromWindow(android.view.View) -> b
    914:926:void endRecoverAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> a
    931:932:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> a
    936:940:void obtainVelocityTracker() -> c
    943:947:void releaseVelocityTracker() -> h
    950:972:androidx.recyclerview.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent) -> c
    980:1034:void checkSelectForSwipe(int,android.view.MotionEvent,int) -> a
    1039:1054:android.view.View findChildView(android.view.MotionEvent) -> a
    1092:1104:void startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    1139:1151:void startSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    1155:1165:androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent) -> b
    1170:1188:void updateDxDy(android.view.MotionEvent,int,int) -> a
    1191:1233:int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    1237:1260:int checkHorizontalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> b
    1264:1286:int checkVerticalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> c
    1290:1313:void addChildDrawingOrderCallback() -> i
    1317:1324:void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> c
androidx.recyclerview.widget.ItemTouchHelper$1 -> androidx.recyclerview.widget.ae:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> a
    257:257:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    260:267:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$2 -> androidx.recyclerview.widget.af:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> a
    313:313:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    317:357:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> a
    362:416:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> b
    420:424:void onRequestDisallowInterceptTouchEvent(boolean) -> a
androidx.recyclerview.widget.ItemTouchHelper$3 -> androidx.recyclerview.widget.ag:
    int val$swipeDir -> a
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$prevSelected -> b
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> c
    635:635:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float,int,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    638:660:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.ItemTouchHelper$4 -> androidx.recyclerview.widget.ah:
    androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation val$anim -> a
    int val$swipeDir -> b
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> c
    700:700:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> <init>
    703:717:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$5 -> androidx.recyclerview.widget.ai:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> a
    1294:1294:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    1297:1308:int onGetChildDrawingOrder(int,int) -> a
androidx.recyclerview.widget.ItemTouchHelper$Callback -> androidx.recyclerview.widget.ad$a:
    int DEFAULT_DRAG_ANIMATION_DURATION -> a
    int DEFAULT_SWIPE_ANIMATION_DURATION -> b
    int RELATIVE_DIR_FLAGS -> c
    int ABS_HORIZONTAL_DIR_FLAGS -> d
    android.view.animation.Interpolator sDragScrollInterpolator -> e
    android.view.animation.Interpolator sDragViewScrollCapInterpolator -> f
    long DRAG_SCROLL_ACCELERATION_LIMIT_TIME_MS -> g
    int mCachedMaxScrollSpeed -> h
    1385:1421:void <init>() -> <init>
    1466:1466:androidx.recyclerview.widget.ItemTouchUIUtil getDefaultUIUtil() -> a
    1482:1497:int convertToRelativeDirection(int,int) -> a
    1512:1514:int makeMovementFlags(int,int) -> b
    1529:1529:int makeFlag(int,int) -> c
    int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    1573:1588:int convertToAbsoluteDirection(int,int) -> d
    1593:1594:int getAbsoluteMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    1598:1599:boolean hasDragFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    1604:1605:boolean hasSwipeFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    1626:1626:boolean canDropOver(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    boolean onMove(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    1663:1663:boolean isLongPressDragEnabled() -> b
    1678:1678:boolean isItemViewSwipeEnabled() -> c
    1690:1690:int getBoundingBoxMargin() -> d
    1706:1706:float getSwipeThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    1720:1720:float getMoveThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    1746:1746:float getSwipeEscapeVelocity(float) -> a
    1770:1770:float getSwipeVelocityThreshold(float) -> b
    1802:1853:androidx.recyclerview.widget.RecyclerView$ViewHolder chooseDropTarget(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,int) -> a
    void onSwiped(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    1895:1898:void onSelectedChanged(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> b
    1901:1905:int getMaxDragScroll(androidx.recyclerview.widget.RecyclerView) -> a
    1944:1973:void onMoved(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int) -> a
    1978:1992:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> a
    1997:2022:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> b
    2038:2039:void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    2071:2073:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> a
    2105:2107:void onChildDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> b
    2132:2138:long getAnimationDuration(androidx.recyclerview.widget.RecyclerView,int,float,float) -> a
    2166:2184:int interpolateOutOfBoundsScroll(androidx.recyclerview.widget.RecyclerView,int,int,int,long) -> a
    1401:1408:void <clinit>() -> <clinit>
androidx.recyclerview.widget.ItemTouchHelper$Callback$1 -> androidx.recyclerview.widget.aj:
    1401:1401:void <init>() -> <init>
    1404:1404:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$Callback$2 -> androidx.recyclerview.widget.ak:
    1408:1408:void <init>() -> <init>
    1411:1412:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener -> androidx.recyclerview.widget.ad$b:
    boolean mShouldReactToLongPress -> b
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> a
    2314:2317:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    2324:2325:void doNotReactToLongPress() -> a
    2329:2329:boolean onDown(android.view.MotionEvent) -> onDown
    2334:2365:void onLongPress(android.view.MotionEvent) -> onLongPress
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation -> androidx.recyclerview.widget.ad$c:
    float mStartDx -> d
    float mStartDy -> e
    float mTargetX -> f
    float mTargetY -> g
    androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder -> h
    int mActionState -> i
    android.animation.ValueAnimator mValueAnimator -> a
    int mAnimationType -> j
    boolean mIsPendingCleanup -> k
    float mX -> l
    float mY -> m
    boolean mOverridden -> n
    boolean mEnded -> o
    float mFraction -> b
    2394:2420:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float) -> <init>
    2423:2424:void setDuration(long) -> a
    2427:2429:void start() -> a
    2432:2433:void cancel() -> b
    2436:2437:void setFraction(float) -> a
    2444:2454:void update() -> c
    2459:2459:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    2463:2467:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2471:2472:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    2477:2477:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1 -> androidx.recyclerview.widget.al:
    androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation this$0 -> a
    2411:2411:void <init>(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation) -> <init>
    2414:2415:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback -> androidx.recyclerview.widget.ad$d:
    int mDefaultSwipeDirs -> d
    int mDefaultDragDirs -> e
    2233:2236:void <init>(int,int) -> <init>
    2246:2247:void setDefaultSwipeDirs(int) -> a
    2257:2258:void setDefaultDragDirs(int) -> b
    2272:2272:int getSwipeDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> f
    2287:2287:int getDragDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> g
    2293:2294:int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler -> androidx.recyclerview.widget.ad$e:
    void prepareForDrop(android.view.View,android.view.View,int,int) -> a
androidx.recyclerview.widget.ItemTouchUIUtil -> androidx.recyclerview.widget.am:
    void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> a
    void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> b
    void clearView(android.view.View) -> a
    void onSelected(android.view.View) -> b
androidx.recyclerview.widget.ItemTouchUIUtilImpl -> androidx.recyclerview.widget.an:
    androidx.recyclerview.widget.ItemTouchUIUtil INSTANCE -> a
    30:30:void <init>() -> <init>
    36:50:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> a
    53:65:float findMaxElevation(androidx.recyclerview.widget.RecyclerView,android.view.View) -> a
    71:71:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> b
    75:85:void clearView(android.view.View) -> a
    89:89:void onSelected(android.view.View) -> b
    31:31:void <clinit>() -> <clinit>
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.ao:
    int LAYOUT_START -> a
    int LAYOUT_END -> b
    int INVALID_LAYOUT -> c
    int ITEM_DIRECTION_HEAD -> d
    int ITEM_DIRECTION_TAIL -> e
    boolean mRecycle -> f
    int mAvailable -> g
    int mCurrentPosition -> h
    int mItemDirection -> i
    int mLayoutDirection -> j
    int mStartLine -> k
    int mEndLine -> l
    boolean mStopInFocusable -> m
    boolean mInfinite -> n
    25:72:void <init>() -> <init>
    88:88:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> a
    98:100:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    105:105:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    java.lang.String TAG -> a
    boolean DEBUG -> j
    int HORIZONTAL -> k
    int VERTICAL -> l
    int INVALID_OFFSET -> m
    float MAX_SCROLL_FACTOR -> b
    int mOrientation -> n
    androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState -> c
    androidx.recyclerview.widget.OrientationHelper mOrientationHelper -> o
    boolean mLastStackFromEnd -> d
    boolean mReverseLayout -> e
    boolean mShouldReverseLayout -> p
    boolean mStackFromEnd -> f
    boolean mSmoothScrollbarEnabled -> g
    int mPendingScrollPosition -> q
    int mPendingScrollPositionOffset -> r
    boolean mRecycleChildrenOnDetach -> h
    androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState -> s
    androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo -> t
    androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult -> i
    int mInitialPrefetchItemCount -> E
    int[] mReusableIntPair -> F
    159:160:void <init>(android.content.Context) -> <init>
    67:172:void <init>(android.content.Context,int,boolean) -> <init>
    67:188:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    192:192:boolean isAutoMeasureEnabled() -> f
    200:200:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> a
    212:212:boolean getRecycleChildrenOnDetach() -> g
    229:230:void setRecycleChildrenOnDetach(boolean) -> c
    234:239:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    243:248:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    252:274:android.os.Parcelable onSaveInstanceState() -> h
    279:288:void onRestoreInstanceState(android.os.Parcelable) -> a
    295:295:boolean canScrollHorizontally() -> i
    303:303:boolean canScrollVertically() -> j
    310:316:void setStackFromEnd(boolean) -> a
    319:319:boolean getStackFromEnd() -> k
    330:330:int getOrientation() -> l
    340:353:void setOrientation(int) -> b
    362:367:void resolveShouldLayoutReverse() -> b
    376:376:boolean getReverseLayout() -> m
    394:400:void setReverseLayout(boolean) -> d
    407:420:android.view.View findViewByPosition(int) -> c
    447:450:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> f
    482:497:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> a
    502:506:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> a
    510:518:android.graphics.PointF computeScrollVectorForPosition(int) -> d
    537:721:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> c
    725:730:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> a
    743:743:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> a
    755:802:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> b
    806:824:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> a
    834:867:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> b
    875:953:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> a
    961:978:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> a
    986:1003:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> b
    1007:1008:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> a
    1011:1018:void updateLayoutStateToFillEnd(int,int) -> a
    1021:1022:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> b
    1025:1033:void updateLayoutStateToFillStart(int,int) -> h
    1036:1036:boolean isLayoutRTL() -> n
    1040:1043:void ensureLayoutState() -> o
    1051:1051:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> p
    1070:1076:void scrollToPosition(int) -> e
    1098:1104:void scrollToPositionWithOffset(int,int) -> b
    1113:1116:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    1125:1128:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> b
    1133:1133:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> d
    1138:1138:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> e
    1143:1143:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> g
    1148:1148:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> h
    1153:1153:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> b
    1158:1158:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> c
    1162:1168:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> i
    1173:1179:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> j
    1184:1190:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> k
    1212:1213:void setSmoothScrollbarEnabled(boolean) -> e
    1223:1223:boolean isSmoothScrollbarEnabled() -> q
    1229:1268:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> a
    1271:1272:boolean resolveIsInfinite() -> r
    1277:1281:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    1288:1314:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    1346:1347:void setInitialPrefetchItemCount(int) -> f
    1362:1362:int getInitialPrefetchItemCount() -> s
    1368:1379:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    1382:1404:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> c
    1409:1412:void assertNotInLayoutOrScroll(java.lang.String) -> a
    1421:1436:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> a
    1453:1484:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> b
    1502:1532:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> c
    1546:1556:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> a
    1572:1622:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> a
    1627:1696:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> a
    1700:1702:boolean shouldMeasureTwice() -> t
    1716:1749:int convertFocusDirectionToLayoutDirection(int) -> g
    1761:1761:android.view.View getChildClosestToStart() -> c
    1771:1771:android.view.View getChildClosestToEnd() -> e
    1783:1787:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> a
    1801:1805:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> b
    1823:1824:android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> f
    1840:1841:android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> g
    1845:1845:android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> h
    1849:1849:android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> i
    1855:1879:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> a
    1885:1886:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd() -> ac
    1892:1893:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart() -> ad
    1897:1897:android.view.View findFirstPartiallyOrCompletelyInvisibleChild() -> ae
    1901:1901:android.view.View findLastPartiallyOrCompletelyInvisibleChild() -> af
    1923:1924:int findFirstVisibleItemPosition() -> u
    1940:1941:int findFirstCompletelyVisibleItemPosition() -> v
    1963:1964:int findLastVisibleItemPosition() -> w
    1980:1981:int findLastCompletelyVisibleItemPosition() -> x
    1990:2007:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> a
    2012:2034:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> c
    2041:2081:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    2089:2096:void logChildren() -> ag
    2109:2146:void validateChildOrder() -> y
    2150:2150:boolean supportsPredictiveItemAnimations() -> d
    2160:2187:void prepareForDrop(android.view.View,android.view.View,int,int) -> a
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$a:
    androidx.recyclerview.widget.OrientationHelper mOrientationHelper -> a
    int mPosition -> b
    int mCoordinate -> c
    boolean mLayoutFromEnd -> d
    boolean mValid -> e
    2453:2455:void <init>() -> <init>
    2458:2462:void reset() -> a
    2469:2472:void assignCoordinateFromPadding() -> b
    2476:2476:java.lang.String toString() -> toString
    2485:2487:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> a
    2491:2535:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> a
    2538:2546:void assignFromView(android.view.View,int) -> b
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$b:
    int mConsumed -> a
    boolean mFinished -> b
    boolean mIgnoreConsumed -> c
    boolean mFocusable -> d
    2549:2549:void <init>() -> <init>
    2556:2560:void resetInternal() -> a
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$c:
    java.lang.String TAG -> a
    int LAYOUT_START -> b
    int LAYOUT_END -> c
    int INVALID_LAYOUT -> d
    int ITEM_DIRECTION_HEAD -> e
    int ITEM_DIRECTION_TAIL -> f
    int SCROLLING_OFFSET_NaN -> g
    boolean mRecycle -> h
    int mOffset -> i
    int mAvailable -> j
    int mCurrentPosition -> k
    int mItemDirection -> l
    int mLayoutDirection -> m
    int mScrollingOffset -> n
    int mExtraFillSpace -> o
    int mNoRecycleSpace -> p
    boolean mIsPreLayout -> q
    int mLastScrollDelta -> r
    java.util.List mScrapList -> s
    boolean mInfinite -> t
    2193:2279:void <init>() -> <init>
    2290:2290:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> a
    2300:2305:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    2316:2328:android.view.View nextViewFromScrapList() -> c
    2332:2333:void assignPositionFromScrapList() -> a
    2336:2343:void assignPositionFromScrapList(android.view.View) -> a
    2346:2371:android.view.View nextViewInLimitedList(android.view.View) -> b
    2375:2377:void log() -> b
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    int mAnchorPosition -> a
    int mAnchorOffset -> b
    boolean mAnchorLayoutFromEnd -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    2393:2395:void <init>() -> <init>
    2397:2401:void <init>(android.os.Parcel) -> <init>
    2403:2407:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2410:2410:boolean hasValidAnchor() -> a
    2414:2415:void invalidateAnchor() -> b
    2419:2419:int describeContents() -> describeContents
    2424:2427:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    2429:2429:void <clinit>() -> <clinit>
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.ap:
    2430:2430:void <init>() -> <init>
    2433:2433:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> a
    2438:2438:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> a
    2430:2430:java.lang.Object[] newArray(int) -> newArray
    2430:2430:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
androidx.recyclerview.widget.LinearSmoothScroller -> androidx.recyclerview.widget.aq:
    boolean DEBUG -> i
    float MILLISECONDS_PER_INCH -> j
    int TARGET_SEEK_SCROLL_DISTANCE_PX -> k
    int SNAP_TO_START -> a
    int SNAP_TO_END -> b
    int SNAP_TO_ANY -> c
    float TARGET_SEEK_EXTRA_SCROLL_RATIO -> l
    android.view.animation.LinearInterpolator mLinearInterpolator -> d
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> e
    android.graphics.PointF mTargetVector -> f
    android.util.DisplayMetrics mDisplayMetrics -> m
    boolean mHasCalculatedMillisPerPixel -> n
    float mMillisPerPixel -> o
    int mInterimTargetDx -> g
    int mInterimTargetDy -> h
    79:95:void <init>(android.content.Context) -> <init>
    103:103:void onStart() -> a
    110:117:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> a
    127:144:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> a
    151:153:void onStop() -> b
    166:166:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> a
    170:174:float getSpeedPerPixel() -> k
    191:191:int calculateTimeForDeceleration(int) -> a
    205:205:int calculateTimeForScrolling(int) -> b
    218:218:int getHorizontalSnapPreference() -> c
    232:232:int getVerticalSnapPreference() -> d
    244:263:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> a
    266:271:int clampApplyScroll(int,int) -> b
    280:299:int calculateDtToFit(int,int,int,int,int) -> a
    314:324:int calculateDyToMakeVisible(android.view.View,int) -> a
    339:349:int calculateDxToMakeVisible(android.view.View,int) -> b
androidx.recyclerview.widget.LinearSnapHelper -> androidx.recyclerview.widget.ar:
    float INVALID_DISTANCE -> c
    androidx.recyclerview.widget.OrientationHelper mVerticalHelper -> d
    androidx.recyclerview.widget.OrientationHelper mHorizontalHelper -> e
    33:33:void <init>() -> <init>
    46:60:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> a
    66:128:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> a
    133:138:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> a
    143:146:int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper) -> a
    162:169:int estimateNextPositionDiffForFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper,int,int) -> a
    184:205:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> a
    223:258:float computeDistancePerChild(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> b
    263:266:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> d
    272:275:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> e
androidx.recyclerview.widget.ListAdapter -> androidx.recyclerview.widget.as:
    androidx.recyclerview.widget.AsyncListDiffer mDiffer -> a
    androidx.recyclerview.widget.AsyncListDiffer$ListListener mListener -> b
    97:111:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    97:117:void <init>(androidx.recyclerview.widget.AsyncDifferConfig) -> <init>
    128:129:void submitList(java.util.List) -> a
    146:147:void submitList(java.util.List,java.lang.Runnable) -> a
    150:150:java.lang.Object getItem(int) -> a
    155:155:int getItemCount() -> a
    173:173:java.util.List getCurrentList() -> b
    189:189:void onCurrentListChanged(java.util.List,java.util.List) -> a
androidx.recyclerview.widget.ListAdapter$1 -> androidx.recyclerview.widget.at:
    androidx.recyclerview.widget.ListAdapter this$0 -> a
    98:98:void <init>(androidx.recyclerview.widget.ListAdapter) -> <init>
    102:103:void onCurrentListChanged(java.util.List,java.util.List) -> a
androidx.recyclerview.widget.ListUpdateCallback -> androidx.recyclerview.widget.au:
    void onInserted(int,int) -> a
    void onRemoved(int,int) -> b
    void onMoved(int,int) -> c
    void onChanged(int,int,java.lang.Object) -> a
androidx.recyclerview.widget.MessageThreadUtil -> androidx.recyclerview.widget.av:
    27:27:void <init>() -> <init>
    31:31:androidx.recyclerview.widget.ThreadUtil$MainThreadCallback getMainThreadProxy(androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> a
    88:88:androidx.recyclerview.widget.ThreadUtil$BackgroundCallback getBackgroundProxy(androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> a
androidx.recyclerview.widget.MessageThreadUtil$1 -> androidx.recyclerview.widget.aw:
    androidx.recyclerview.widget.MessageThreadUtil$MessageQueue mQueue -> a
    android.os.Handler mMainThreadHandler -> g
    int UPDATE_ITEM_COUNT -> b
    int ADD_TILE -> c
    int REMOVE_TILE -> d
    java.lang.Runnable mMainThreadRunnable -> h
    androidx.recyclerview.widget.ThreadUtil$MainThreadCallback val$callback -> e
    androidx.recyclerview.widget.MessageThreadUtil this$0 -> f
    31:59:void <init>(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> <init>
    41:42:void updateItemCount(int,int) -> a
    46:47:void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> a
    51:52:void removeTile(int,int) -> b
    55:57:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> a
androidx.recyclerview.widget.MessageThreadUtil$1$1 -> androidx.recyclerview.widget.ax:
    androidx.recyclerview.widget.MessageThreadUtil$1 this$1 -> a
    59:59:void <init>(androidx.recyclerview.widget.MessageThreadUtil$1) -> <init>
    62:81:void run() -> run
androidx.recyclerview.widget.MessageThreadUtil$2 -> androidx.recyclerview.widget.ay:
    androidx.recyclerview.widget.MessageThreadUtil$MessageQueue mQueue -> a
    java.util.concurrent.Executor mExecutor -> i
    java.util.concurrent.atomic.AtomicBoolean mBackgroundRunning -> b
    int REFRESH -> c
    int UPDATE_RANGE -> d
    int LOAD_TILE -> e
    int RECYCLE_TILE -> f
    java.lang.Runnable mBackgroundRunnable -> j
    androidx.recyclerview.widget.ThreadUtil$BackgroundCallback val$callback -> g
    androidx.recyclerview.widget.MessageThreadUtil this$0 -> h
    88:136:void <init>(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> <init>
    100:101:void refresh(int) -> a
    106:108:void updateRange(int,int,int,int,int) -> a
    112:113:void loadTile(int,int) -> a
    117:118:void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> a
    121:123:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> a
    126:128:void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> b
    131:134:void maybeExecuteBackgroundRunnable() -> a
androidx.recyclerview.widget.MessageThreadUtil$2$1 -> androidx.recyclerview.widget.az:
    androidx.recyclerview.widget.MessageThreadUtil$2 this$1 -> a
    136:136:void <init>(androidx.recyclerview.widget.MessageThreadUtil$2) -> <init>
    140:168:void run() -> run
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue -> androidx.recyclerview.widget.av$a:
    androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem mRoot -> a
    233:233:void <init>() -> <init>
    238:243:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem next() -> a
    247:249:void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> a
    252:261:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> b
    264:283:void removeMessages(int) -> a
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem -> androidx.recyclerview.widget.av$b:
    androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem sPool -> i
    java.lang.Object sPoolLock -> j
    androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem next -> a
    int what -> b
    int arg1 -> c
    int arg2 -> d
    int arg3 -> e
    int arg4 -> f
    int arg5 -> g
    java.lang.Object data -> h
    177:177:void <init>() -> <init>
    191:200:void recycle() -> a
    204:221:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int,int,int,int,java.lang.Object) -> a
    225:225:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int) -> a
    229:229:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,java.lang.Object) -> a
    180:180:void <clinit>() -> <clinit>
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.ba:
    androidx.recyclerview.widget.OpReorderer$Callback mCallback -> a
    25:27:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    33:36:void reorderOps(java.util.List) -> a
    39:52:void swapMoveOp(java.util.List,int,int) -> a
    56:151:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    155:172:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> c
    176:210:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> b
    213:224:int getLastMoveOutOfOrder(java.util.List) -> b
androidx.recyclerview.widget.OpReorderer$Callback -> androidx.recyclerview.widget.ba$a:
    androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> a
    void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.bb:
    int INVALID_SIZE -> e
    androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager -> a
    int HORIZONTAL -> b
    int VERTICAL -> c
    int mLastTotalSpace -> f
    android.graphics.Rect mTmpRect -> d
    42:48:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    55:55:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> a
    64:65:void onLayoutComplete() -> b
    78:78:int getTotalSpaceChange() -> c
    int getDecoratedStart(android.view.View) -> a
    int getDecoratedEnd(android.view.View) -> b
    int getTransformedEndWithDecoration(android.view.View) -> c
    int getTransformedStartWithDecoration(android.view.View) -> d
    int getDecoratedMeasurement(android.view.View) -> e
    int getDecoratedMeasurementInOther(android.view.View) -> f
    int getStartAfterPadding() -> d
    int getEndAfterPadding() -> e
    int getEnd() -> f
    void offsetChildren(int) -> a
    int getTotalSpace() -> g
    void offsetChild(android.view.View,int) -> a
    int getEndPadding() -> h
    int getMode() -> i
    int getModeInOther() -> j
    241:247:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> a
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> a
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> b
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.bc:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    261:261:int getEndAfterPadding() -> e
    266:266:int getEnd() -> f
    271:272:void offsetChildren(int) -> a
    276:276:int getStartAfterPadding() -> d
    281:283:int getDecoratedMeasurement(android.view.View) -> e
    289:291:int getDecoratedMeasurementInOther(android.view.View) -> f
    297:299:int getDecoratedEnd(android.view.View) -> b
    304:306:int getDecoratedStart(android.view.View) -> a
    311:312:int getTransformedEndWithDecoration(android.view.View) -> c
    317:318:int getTransformedStartWithDecoration(android.view.View) -> d
    323:324:int getTotalSpace() -> g
    329:330:void offsetChild(android.view.View,int) -> a
    334:334:int getEndPadding() -> h
    339:339:int getMode() -> i
    344:344:int getModeInOther() -> j
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.bd:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    359:359:int getEndAfterPadding() -> e
    364:364:int getEnd() -> f
    369:370:void offsetChildren(int) -> a
    374:374:int getStartAfterPadding() -> d
    379:381:int getDecoratedMeasurement(android.view.View) -> e
    387:389:int getDecoratedMeasurementInOther(android.view.View) -> f
    395:397:int getDecoratedEnd(android.view.View) -> b
    402:404:int getDecoratedStart(android.view.View) -> a
    409:410:int getTransformedEndWithDecoration(android.view.View) -> c
    415:416:int getTransformedStartWithDecoration(android.view.View) -> d
    421:422:int getTotalSpace() -> g
    427:428:void offsetChild(android.view.View,int) -> a
    432:432:int getEndPadding() -> h
    437:437:int getMode() -> i
    442:442:int getModeInOther() -> j
androidx.recyclerview.widget.PagerSnapHelper -> androidx.recyclerview.widget.be:
    int MAX_SCROLL_ON_FLING_DURATION -> c
    androidx.recyclerview.widget.OrientationHelper mVerticalHelper -> d
    androidx.recyclerview.widget.OrientationHelper mHorizontalHelper -> e
    38:38:void <init>() -> <init>
    51:65:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> a
    71:76:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> a
    82:142:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> a
    147:150:boolean isForwardFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> b
    155:164:boolean isReverseLayout(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> d
    169:172:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> b
    199:202:int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper) -> a
    217:238:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> a
    243:248:androidx.recyclerview.widget.OrientationHelper getOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> e
    254:257:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> f
    263:266:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> g
androidx.recyclerview.widget.PagerSnapHelper$1 -> androidx.recyclerview.widget.bf:
    androidx.recyclerview.widget.PagerSnapHelper this$0 -> i
    172:172:void <init>(androidx.recyclerview.widget.PagerSnapHelper,android.content.Context) -> <init>
    175:183:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> a
    187:187:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> a
    192:192:int calculateTimeForScrolling(int) -> b
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    java.lang.String TAG -> a
    boolean DEBUG -> b
    boolean VERBOSE_TRACING -> c
    int[] NESTED_SCROLLING_ATTRS -> al
    boolean FORCE_INVALIDATE_DISPLAY_LIST -> d
    boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC -> e
    boolean POST_UPDATES_ON_ANIMATION -> f
    boolean ALLOW_THREAD_GAP_WORK -> g
    boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION -> am
    boolean IGNORE_DETACHED_FOCUSED_CHILD -> an
    boolean DISPATCH_TEMP_DETACH -> h
    int HORIZONTAL -> i
    int VERTICAL -> j
    int DEFAULT_ORIENTATION -> k
    int NO_POSITION -> l
    long NO_ID -> m
    int INVALID_TYPE -> n
    int TOUCH_SLOP_DEFAULT -> o
    int TOUCH_SLOP_PAGING -> p
    int UNDEFINED_DURATION -> q
    int MAX_SCROLL_DURATION -> r
    java.lang.String TRACE_SCROLL_TAG -> s
    java.lang.String TRACE_ON_LAYOUT_TAG -> ao
    java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG -> ap
    java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG -> aq
    java.lang.String TRACE_BIND_VIEW_TAG -> t
    java.lang.String TRACE_PREFETCH_TAG -> u
    java.lang.String TRACE_NESTED_PREFETCH_TAG -> v
    java.lang.String TRACE_CREATE_VIEW_TAG -> w
    java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE -> ar
    androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver -> as
    androidx.recyclerview.widget.RecyclerView$Recycler mRecycler -> x
    androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState -> at
    androidx.recyclerview.widget.AdapterHelper mAdapterHelper -> y
    androidx.recyclerview.widget.ChildHelper mChildHelper -> z
    androidx.recyclerview.widget.ViewInfoStore mViewInfoStore -> A
    boolean mClipToPadding -> B
    java.lang.Runnable mUpdateChildViewsRunnable -> C
    android.graphics.Rect mTempRect -> D
    android.graphics.Rect mTempRect2 -> au
    android.graphics.RectF mTempRectF -> E
    androidx.recyclerview.widget.RecyclerView$Adapter mAdapter -> F
    androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout -> G
    androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener -> H
    java.util.ArrayList mItemDecorations -> I
    java.util.ArrayList mOnItemTouchListeners -> av
    androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener -> aw
    boolean mIsAttached -> J
    boolean mHasFixedSize -> K
    boolean mEnableFastScroller -> L
    boolean mFirstLayoutComplete -> M
    int mInterceptRequestLayoutDepth -> ax
    boolean mLayoutWasDefered -> N
    boolean mLayoutSuppressed -> O
    boolean mIgnoreMotionEventTillDown -> ay
    int mEatenAccessibilityChangeFlags -> az
    boolean mAdapterUpdateDuringMeasure -> P
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> aA
    java.util.List mOnChildAttachStateListeners -> aB
    boolean mDataSetHasChangedAfterLayout -> Q
    boolean mDispatchItemsChangedEvent -> R
    int mLayoutOrScrollCounter -> aC
    int mDispatchScrollCounter -> aD
    androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory -> aE
    android.widget.EdgeEffect mLeftGlow -> aF
    android.widget.EdgeEffect mTopGlow -> aG
    android.widget.EdgeEffect mRightGlow -> aH
    android.widget.EdgeEffect mBottomGlow -> aI
    androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator -> S
    int INVALID_POINTER -> aJ
    int SCROLL_STATE_IDLE -> T
    int SCROLL_STATE_DRAGGING -> U
    int SCROLL_STATE_SETTLING -> V
    long FOREVER_NS -> W
    int mScrollState -> aK
    int mScrollPointerId -> aL
    android.view.VelocityTracker mVelocityTracker -> aM
    int mInitialTouchX -> aN
    int mInitialTouchY -> aO
    int mLastTouchX -> aP
    int mLastTouchY -> aQ
    int mTouchSlop -> aR
    androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener -> aS
    int mMinFlingVelocity -> aT
    int mMaxFlingVelocity -> aU
    float mScaledHorizontalScrollFactor -> aV
    float mScaledVerticalScrollFactor -> aW
    boolean mPreserveFocusAfterLayout -> aX
    androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger -> aa
    androidx.recyclerview.widget.GapWorker mGapWorker -> ab
    androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry -> ac
    androidx.recyclerview.widget.RecyclerView$State mState -> ad
    androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener -> aY
    java.util.List mScrollListeners -> aZ
    boolean mItemsAddedOrRemoved -> ae
    boolean mItemsChanged -> af
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener -> ba
    boolean mPostedAnimatorRunner -> ag
    androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate -> ah
    androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> bb
    int[] mMinMaxLayoutPositions -> bc
    androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper -> bd
    int[] mScrollOffset -> be
    int[] mNestedOffsets -> bf
    int[] mReusableIntPair -> ai
    java.util.List mPendingAccessibilityImportanceChange -> aj
    java.lang.Runnable mItemAnimatorRunner -> bg
    android.view.animation.Interpolator sQuinticInterpolator -> ak
    androidx.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback -> bh
    646:647:void <init>(android.content.Context) -> <init>
    650:651:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    365:726:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    733:736:java.lang.String exceptionLabel() -> a
    747:751:void initAutofill() -> R
    759:759:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> b
    768:770:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> a
    774:774:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    782:832:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> a
    835:841:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> a
    845:965:void initChildrenHelper() -> S
    968:1048:void initAdapterManager() -> c
    1062:1063:void setHasFixedSize(boolean) -> a
    1070:1070:boolean hasFixedSize() -> d
    1075:1083:void setClipToPadding(boolean) -> setClipToPadding
    1099:1099:boolean getClipToPadding() -> getClipToPadding
    1112:1126:void setScrollingTouchSlop(int) -> a
    1144:1148:void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> a
    1160:1164:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> a
    1171:1184:void removeAndRecycleViews() -> e
    1197:1216:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> a
    1226:1226:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> f
    1240:1241:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> a
    1253:1256:int getBaseline() -> getBaseline
    1273:1277:void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> a
    1286:1290:void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> b
    1297:1300:void clearOnChildAttachStateChangeListeners() -> g
    1315:1354:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> a
    1365:1366:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> a
    1375:1375:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> h
    1380:1389:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1394:1404:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1411:1412:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    1419:1420:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1431:1442:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    1451:1463:boolean removeAnimatingView(android.view.View) -> a
    1474:1474:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> i
    1487:1487:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> j
    1499:1500:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> a
    1510:1511:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> a
    1525:1526:void setItemViewCacheSize(int) -> b
    1535:1535:int getScrollState() -> k
    1539:1551:void setScrollState(int) -> c
    1568:1582:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> a
    1597:1598:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> a
    1609:1614:androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int) -> d
    1623:1623:int getItemDecorationCount() -> l
    1632:1638:void removeItemDecorationAt(int) -> e
    1650:1660:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> b
    1676:1681:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> a
    1693:1694:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> a
    1706:1710:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> b
    1718:1721:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> c
    1727:1730:void clearOnScrollListeners() -> m
    1741:1752:void scrollToPosition(int) -> f
    1755:1764:void jumpToPositionForSmoothScroller(int) -> g
    1782:1791:void smoothScrollToPosition(int) -> h
    1795:1797:void scrollTo(int,int) -> scrollTo
    1801:1814:void scrollBy(int,int) -> scrollBy
    1829:1854:void scrollStep(int,int,int[]) -> a
    1865:1900:void consumePendingUpdateOperations() -> n
    1906:1916:boolean hasUpdatedView() -> T
    1931:1976:boolean scrollByInternal(int,int,android.view.MotionEvent) -> a
    1999:2002:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2024:2027:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    2047:2050:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2072:2075:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2096:2099:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2119:2122:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2137:2141:void startInterceptRequestLayout() -> o
    2154:2185:void stopInterceptRequestLayout(boolean) -> b
    2214:2232:void suppressLayout(boolean) -> suppressLayout
    2242:2242:boolean isLayoutSuppressed() -> isLayoutSuppressed
    2271:2272:void setLayoutFrozen(boolean) -> c
    2281:2281:boolean isLayoutFrozen() -> p
    2290:2317:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    2326:2327:void smoothScrollBy(int,int) -> a
    2338:2339:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> a
    2356:2357:void smoothScrollBy(int,int,android.view.animation.Interpolator,int) -> a
    2390:2422:void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean) -> a
    2438:2485:boolean fling(int,int) -> b
    2493:2495:void stopScroll() -> q
    2501:2505:void stopScrollersInternal() -> U
    2513:2513:int getMinFlingVelocity() -> r
    2523:2523:int getMaxFlingVelocity() -> s
    2530:2554:void pullGlows(float,float,float,float) -> a
    2557:2577:void releaseGlows() -> V
    2580:2600:void considerReleasingGlowsOnScroll(int,int) -> c
    2603:2630:void absorbGlows(int,int) -> d
    2633:2643:void ensureLeftGlow() -> t
    2646:2656:void ensureRightGlow() -> u
    2659:2670:void ensureTopGlow() -> v
    2673:2683:void ensureBottomGlow() -> w
    2686:2687:void invalidateGlows() -> x
    2699:2702:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> a
    2713:2713:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> y
    2748:2822:android.view.View focusSearch(android.view.View,int) -> focusSearch
    2834:2888:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> a
    2893:2897:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2909:2934:void requestChildOnScreen(android.view.View,android.view.View) -> a
    2938:2938:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    2943:2946:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2950:2955:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2960:2990:void onAttachedToWindow() -> onAttachedToWindow
    2994:3012:void onDetachedFromWindow() -> onDetachedFromWindow
    3019:3019:boolean isAttachedToWindow() -> isAttachedToWindow
    3030:3038:void assertInLayoutOrScroll(java.lang.String) -> a
    3048:3063:void assertNotInLayoutOrScroll(java.lang.String) -> b
    3079:3080:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> a
    3088:3092:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> b
    3118:3129:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent) -> a
    3147:3156:boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> b
    3161:3265:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    3270:3276:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    3280:3431:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3435:3440:void resetScroll() -> W
    3443:3445:void cancelScroll() -> X
    3448:3456:void onPointerUp(android.view.MotionEvent) -> c
    3460:3505:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    3510:3597:void onMeasure(int,int) -> onMeasure
    3606:3614:void defaultOnMeasure(int,int) -> e
    3618:3623:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3637:3645:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> a
    3648:3649:void onEnterLayoutOrScroll() -> z
    3652:3653:void onExitLayoutOrScroll() -> A
    3656:3668:void onExitLayoutOrScroll(boolean) -> d
    3671:3671:boolean isAccessibilityEnabled() -> B
    3675:3683:void dispatchContentChangedIfNecessary() -> Y
    3705:3705:boolean isComputingLayout() -> C
    3717:3728:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    3733:3737:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    3741:3742:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    3756:3756:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> D
    3764:3768:void postAnimationRunner() -> E
    3771:3771:boolean predictiveItemAnimationsEnabled() -> Z
    3781:3809:void processAdapterUpdatesAndSetAnimationFlags() -> aa
    3837:3863:void dispatchLayout() -> F
    3866:3884:void saveFocusInfo() -> ab
    3887:3890:void resetFocusInfo() -> ac
    3902:3925:android.view.View findNextViewToFocus() -> ad
    3929:4000:void recoverFocusFromState() -> ae
    4003:4011:int getDeepestFocusedViewWithId(android.view.View) -> p
    4015:4023:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> a
    4033:4118:void dispatchLayoutStep1() -> af
    4125:4144:void dispatchLayoutStep2() -> ag
    4151:4235:void dispatchLayoutStep3() -> ah
    4255:4282:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    4291:4298:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    4301:4324:void findMinMaxChildLayoutPositions(int[]) -> a
    4327:4328:boolean didChildRangeChange(int,int) -> j
    4334:4351:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    4358:4358:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    4363:4367:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    4371:4376:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    4381:4399:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> a
    4403:4407:void onLayout(boolean,int,int,int,int) -> onLayout
    4411:4416:void requestLayout() -> requestLayout
    4419:4425:void markItemDecorInsetsDirty() -> G
    4429:4486:void draw(android.graphics.Canvas) -> draw
    4490:4496:void onDraw(android.graphics.Canvas) -> onDraw
    4500:4500:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    4505:4508:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4513:4516:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4521:4524:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    4536:4536:boolean isAnimating() -> H
    4540:4551:void saveOldPositions() -> I
    4554:4562:void clearOldPositions() -> J
    4565:4596:void offsetPositionRecordsForMove(int,int) -> f
    4599:4613:void offsetPositionRecordsForInsert(int,int) -> g
    4617:4643:void offsetPositionRecordsForRemove(int,int,boolean) -> a
    4652:4671:void viewRangeUpdate(int,int,java.lang.Object) -> a
    4674:4675:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    4692:4695:void processDataSetCompletelyChanged(boolean) -> e
    4702:4711:void markKnownViewsInvalid() -> K
    4718:4727:void invalidateItemDecorations() -> L
    4741:4741:boolean getPreserveFocusAfterLayout() -> M
    4759:4760:void setPreserveFocusAfterLayout(boolean) -> f
    4769:4774:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> b
    4792:4797:android.view.View findContainingItemView(android.view.View) -> c
    4810:4811:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> d
    4816:4819:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> e
    4828:4828:int getChildPosition(android.view.View) -> f
    4838:4839:int getChildAdapterPosition(android.view.View) -> g
    4853:4854:int getChildLayoutPosition(android.view.View) -> h
    4864:4868:long getChildItemId(android.view.View) -> i
    4878:4878:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int) -> i
    4902:4902:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int) -> j
    4924:4941:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> k
    4946:4968:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> a
    4986:5001:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> a
    5013:5025:android.view.View findChildViewUnder(float,float) -> a
    5030:5030:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    5040:5044:void offsetChildrenVertical(int) -> l
    5057:5057:void onChildAttachedToWindow(android.view.View) -> j
    5069:5069:void onChildDetachedFromWindow(android.view.View) -> k
    5078:5082:void offsetChildrenHorizontal(int) -> m
    5092:5093:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> a
    5096:5102:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> b
    5105:5126:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> l
    5151:5151:void onScrolled(int,int) -> h
    5154:5177:void dispatchOnScrolled(int,int) -> i
    5191:5191:void onScrollStateChanged(int) -> n
    5196:5213:void dispatchOnScrollStateChanged(int) -> o
    5229:5230:boolean hasPendingAdapterUpdates() -> N
    5513:5528:void repositionShadowingViews() -> O
    5829:5844:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> m
    5851:5867:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    5876:5879:long getNanoTime() -> P
    7538:7549:void dispatchChildDetached(android.view.View) -> n
    7553:7564:void dispatchChildAttached(android.view.View) -> o
    11470:11476:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    11480:11494:void dispatchPendingImportantForAccessibilityChanges() -> Q
    11497:11502:int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    11509:11522:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> a
    11528:11529:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    11533:11533:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    11538:11538:boolean startNestedScroll(int) -> startNestedScroll
    11543:11543:boolean startNestedScroll(int,int) -> startNestedScroll
    11548:11549:void stopNestedScroll() -> stopNestedScroll
    11553:11554:void stopNestedScroll(int) -> stopNestedScroll
    11558:11558:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    11563:11563:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    11569:11569:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    11576:11576:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    11583:11585:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    11589:11589:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    11595:11595:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    11601:11601:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    11606:11606:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    13465:13468:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    13495:13498:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> ai
    210:210:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    210:210:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> a
    210:210:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> a
    210:210:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    219:598:void <clinit>() -> <clinit>
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.bg:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    398:398:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    401:415:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.bh:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    588:588:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    591:595:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.bi:
    598:598:void <init>() -> <init>
    601:602:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.bj:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    610:610:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    614:616:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    620:621:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    626:638:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
    641:642:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.bk:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    845:845:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    848:848:int getChildCount() -> a
    856:861:void addView(android.view.View,int) -> a
    865:865:int indexOfChild(android.view.View) -> a
    870:886:void removeViewAt(int) -> a
    890:890:android.view.View getChildAt(int) -> b
    895:906:void removeAllViews() -> b
    910:910:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> b
    916:928:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    932:947:void detachViewFromParent(int) -> c
    951:955:void onEnteredHiddenState(android.view.View) -> c
    959:963:void onLeftHiddenState(android.view.View) -> d
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.bl:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    968:968:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    971:983:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> a
    988:991:void offsetPositionsForRemovingInvisible(int,int) -> a
    996:998:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> b
    1003:1005:void markViewHoldersUpdated(int,int,java.lang.Object) -> a
    1009:1010:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    1013:1028:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> c
    1032:1033:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> b
    1037:1039:void offsetPositionsForAdd(int,int) -> c
    1043:1046:void offsetPositionsForMove(int,int) -> d
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$a:
    androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable -> a
    boolean mHasStableIds -> b
    6984:6986:void <init>() -> <init>
    androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> a
    void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    7065:7066:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> a
    7077:7088:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> b
    7099:7114:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> b
    7129:7129:int getItemViewType(int) -> b
    7141:7146:void setHasStableIds(boolean) -> a
    7157:7157:long getItemId(int) -> c
    int getItemCount() -> a
    7175:7175:boolean hasStableIds() -> c
    7196:7196:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    7233:7233:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    7247:7247:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    7259:7259:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    7267:7267:boolean hasObservers() -> d
    7287:7288:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> a
    7301:7302:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> b
    7313:7313:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> a
    7322:7322:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> b
    7354:7355:void notifyDataSetChanged() -> e
    7370:7371:void notifyItemChanged(int) -> d
    7398:7399:void notifyItemChanged(int,java.lang.Object) -> a
    7416:7417:void notifyItemRangeChanged(int,int) -> a
    7447:7448:void notifyItemRangeChanged(int,int,java.lang.Object) -> a
    7464:7465:void notifyItemInserted(int) -> e
    7479:7480:void notifyItemMoved(int,int) -> b
    7498:7499:void notifyItemRangeInserted(int,int) -> c
    7515:7516:void notifyItemRemoved(int) -> f
    7532:7533:void notifyItemRangeRemoved(int,int) -> d
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$b:
    12242:12242:void <init>() -> <init>
    12244:12244:boolean hasObservers() -> a
    12252:12255:void notifyChanged() -> b
    12258:12259:void notifyItemRangeChanged(int,int) -> a
    12267:12270:void notifyItemRangeChanged(int,int,java.lang.Object) -> a
    12277:12280:void notifyItemRangeInserted(int,int) -> b
    12287:12290:void notifyItemRangeRemoved(int,int) -> c
    12293:12296:void notifyItemMoved(int,int) -> d
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$c:
    11721:11721:void <init>() -> <init>
    11724:11724:void onChanged() -> a
    11728:11728:void onItemRangeChanged(int,int) -> a
    11733:11734:void onItemRangeChanged(int,int,java.lang.Object) -> a
    11738:11738:void onItemRangeInserted(int,int) -> b
    11742:11742:void onItemRangeRemoved(int,int) -> c
    11746:11746:void onItemRangeMoved(int,int,int) -> a
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback -> androidx.recyclerview.widget.RecyclerView$d:
    int onGetChildDrawingOrder(int,int) -> a
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$e:
    int DIRECTION_LEFT -> a
    int DIRECTION_TOP -> b
    int DIRECTION_RIGHT -> c
    int DIRECTION_BOTTOM -> d
    5592:5592:void <init>() -> <init>
    5623:5623:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> a
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory$EdgeDirection -> androidx.recyclerview.widget.RecyclerView$e$a:
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$f:
    int FLAG_CHANGED -> h
    int FLAG_REMOVED -> i
    int FLAG_INVALIDATED -> j
    int FLAG_MOVED -> k
    int FLAG_APPEARED_IN_PRE_LAYOUT -> l
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener -> a
    java.util.ArrayList mFinishedListeners -> b
    long mAddDuration -> c
    long mRemoveDuration -> d
    long mMoveDuration -> e
    long mChangeDuration -> f
    12728:12791:void <init>() -> <init>
    12799:12799:long getMoveDuration() -> e
    12808:12809:void setMoveDuration(long) -> a
    12817:12817:long getAddDuration() -> f
    12826:12827:void setAddDuration(long) -> b
    12835:12835:long getRemoveDuration() -> g
    12844:12845:void setRemoveDuration(long) -> c
    12853:12853:long getChangeDuration() -> h
    12862:12863:void setChangeDuration(long) -> d
    12874:12875:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> a
    12913:12913:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> a
    12942:12942:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
    boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    13113:13124:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    void runPendingAnimations() -> a
    void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    void endAnimations() -> d
    boolean isRunning() -> b
    13197:13201:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> f
    13212:13212:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> g
    13238:13239:void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> h
    13250:13250:void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> i
    13269:13277:boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) -> a
    13302:13302:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> j
    13332:13332:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> a
    13340:13345:void dispatchAnimationsFinished() -> i
    13358:13358:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> j
androidx.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges -> androidx.recyclerview.widget.RecyclerView$f$a:
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener -> androidx.recyclerview.widget.RecyclerView$f$b:
    void onAnimationsFinished() -> a
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> androidx.recyclerview.widget.RecyclerView$f$c:
    void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$f$d:
    int left -> a
    int top -> b
    int right -> c
    int bottom -> d
    int changeFlags -> e
    13425:13426:void <init>() -> <init>
    13437:13437:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    13453:13458:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$g:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    12686:12687:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    12691:12703:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$h:
    10705:10705:void <init>() -> <init>
    10716:10717:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> a
    10725:10725:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> a
    10738:10739:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> b
    10747:10747:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> b
    10757:10758:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> a
    10782:10784:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> a
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$i:
    androidx.recyclerview.widget.ChildHelper mChildHelper -> u
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> v
    androidx.recyclerview.widget.ViewBoundsCheck$Callback mHorizontalBoundCheckCallback -> a
    androidx.recyclerview.widget.ViewBoundsCheck$Callback mVerticalBoundCheckCallback -> b
    androidx.recyclerview.widget.ViewBoundsCheck mHorizontalBoundCheck -> w
    androidx.recyclerview.widget.ViewBoundsCheck mVerticalBoundCheck -> x
    androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller -> y
    boolean mRequestedSimpleAnimations -> z
    boolean mIsAttachedToWindow -> A
    boolean mAutoMeasure -> B
    boolean mMeasurementCacheEnabled -> c
    boolean mItemPrefetchEnabled -> d
    int mPrefetchMaxCountObserved -> C
    boolean mPrefetchMaxObservedInInitialPrefetch -> D
    int mWidthMode -> e
    int mHeightMode -> f
    int mWidth -> g
    int mHeight -> h
    7582:7688:void <init>() -> <init>
    7741:7754:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> b
    7757:7768:void setMeasureSpecs(int,int) -> d
    7784:7813:void setMeasuredDimensionFromChildren(int,int) -> e
    7836:7841:void setMeasuredDimension(android.graphics.Rect,int,int) -> a
    7847:7850:void requestLayout() -> z
    7860:7863:void assertInLayoutOrScroll(java.lang.String) -> b
    7876:7885:int chooseSize(int,int,int) -> a
    7897:7900:void assertNotInLayoutOrScroll(java.lang.String) -> a
    7918:7919:void setAutoMeasureEnabled(boolean) -> f
    7991:7991:boolean isAutoMeasureEnabled() -> f
    8017:8017:boolean supportsPredictiveItemAnimations() -> d
    8040:8047:void setItemPrefetchEnabled(boolean) -> g
    8058:8058:boolean isItemPrefetchEnabled() -> A
    8082:8082:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    8110:8110:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    8113:8115:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> c
    8118:8120:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> b
    8130:8130:boolean isAttachedToWindow() -> B
    8144:8147:void postOnAnimation(java.lang.Runnable) -> a
    8164:8167:boolean removeCallbacks(java.lang.Runnable) -> b
    8185:8185:void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> d
    8194:8194:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView) -> e
    8221:8222:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    8230:8230:boolean getClipToPadding() -> C
    8285:8286:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> c
    8300:8300:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> a
    androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> a
    8330:8330:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> a
    8347:8352:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    8371:8371:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> a
    8388:8388:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    8405:8405:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> b
    8415:8415:boolean canScrollHorizontally() -> i
    8425:8425:boolean canScrollVertically() -> j
    8438:8438:void scrollToPosition(int) -> e
    8451:8452:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> a
    8465:8471:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> a
    8477:8477:boolean isSmoothScrolling() -> D
    8489:8489:int getLayoutDirection() -> E
    8499:8502:void endAnimation(android.view.View) -> a
    8518:8519:void addDisappearingView(android.view.View) -> b
    8536:8537:void addDisappearingView(android.view.View,int) -> a
    8547:8548:void addView(android.view.View) -> c
    8559:8560:void addView(android.view.View,int) -> b
    8563:8614:void addViewInt(android.view.View,int,boolean) -> a
    8625:8626:void removeView(android.view.View) -> d
    8637:8641:void removeViewAt(int) -> h
    8649:8653:void removeAllViews() -> F
    8662:8662:int getBaseline() -> G
    8673:8673:int getPosition(android.view.View) -> e
    8683:8683:int getItemViewType(android.view.View) -> f
    8703:8713:android.view.View findContainingItemView(android.view.View) -> g
    8731:8743:android.view.View findViewByPosition(int) -> c
    8762:8766:void detachView(android.view.View) -> h
    8784:8785:void detachViewAt(int) -> i
    8791:8792:void detachViewInternal(int,android.view.View) -> a
    8804:8814:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> a
    8825:8826:void attachView(android.view.View,int) -> c
    8836:8837:void attachView(android.view.View) -> i
    8846:8847:void removeDetachedView(android.view.View) -> j
    8856:8863:void moveView(int,int) -> f
    8875:8877:void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    8889:8891:void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    8900:8902:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> b
    8911:8914:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> b
    8923:8923:int getChildCount() -> H
    8933:8933:android.view.View getChildAt(int) -> j
    8950:8950:int getWidthMode() -> I
    8967:8967:int getHeightMode() -> J
    8983:8983:int getWidth() -> K
    8999:8999:int getHeight() -> L
    9009:9009:int getPaddingLeft() -> M
    9019:9019:int getPaddingTop() -> N
    9029:9029:int getPaddingRight() -> O
    9039:9039:int getPaddingBottom() -> P
    9049:9049:int getPaddingStart() -> Q
    9059:9059:int getPaddingEnd() -> R
    9069:9069:boolean isFocused() -> S
    9079:9079:boolean hasFocus() -> T
    9089:9096:android.view.View getFocusedChild() -> U
    9112:9113:int getItemCount() -> V
    9123:9126:void offsetChildrenHorizontal(int) -> k
    9135:9138:void offsetChildrenVertical(int) -> l
    9157:9166:void ignoreView(android.view.View) -> k
    9178:9182:void stopIgnoringView(android.view.View) -> l
    9192:9197:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    9200:9216:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> a
    9228:9255:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> b
    9270:9284:void measureChild(android.view.View,int,int) -> a
    9293:9295:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> a
    9307:9310:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> b
    9324:9324:boolean isMeasurementCacheEnabled() -> W
    9336:9337:void setMeasurementCacheEnabled(boolean) -> h
    9340:9353:boolean isMeasurementUpToDate(int,int,int) -> b
    9369:9386:void measureChildWithMargins(android.view.View,int,int) -> b
    9403:9429:int getChildMeasureSpec(int,int,int,boolean) -> a
    9446:9487:int getChildMeasureSpec(int,int,int,int,boolean) -> a
    9500:9501:int getDecoratedMeasuredWidth(android.view.View) -> m
    9514:9515:int getDecoratedMeasuredHeight(android.view.View) -> n
    9549:9552:void layoutDecorated(android.view.View,int,int,int,int) -> a
    9585:9590:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> b
    9605:9628:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> a
    9638:9639:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> a
    9650:9650:int getDecoratedLeft(android.view.View) -> o
    9662:9662:int getDecoratedTop(android.view.View) -> p
    9674:9674:int getDecoratedRight(android.view.View) -> q
    9686:9686:int getDecoratedBottom(android.view.View) -> r
    9707:9713:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> b
    9727:9727:int getTopDecorationHeight(android.view.View) -> s
    9742:9742:int getBottomDecorationHeight(android.view.View) -> t
    9757:9757:int getLeftDecorationWidth(android.view.View) -> u
    9772:9772:int getRightDecorationWidth(android.view.View) -> v
    9800:9800:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    9821:9821:android.view.View onInterceptFocusSearch(android.view.View,int) -> d
    9834:9867:int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect) -> c
    9886:9886:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> a
    9906:9920:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> a
    9944:9952:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> a
    9966:9981:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> d
    9991:9991:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> a
    10013:10013:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> a
    10031:10031:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> a
    10059:10059:boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int) -> a
    10070:10070:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> a
    10083:10083:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    10094:10094:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> b
    10107:10107:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int) -> c
    10120:10121:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> a
    10138:10138:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> a
    10153:10153:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> g
    10168:10168:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> d
    10183:10183:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> b
    10198:10198:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> h
    10213:10213:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> e
    10228:10228:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> c
    10256:10257:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> a
    10267:10268:void setMeasuredDimension(int,int) -> g
    10275:10275:int getMinimumWidth() -> X
    10283:10283:int getMinimumHeight() -> Y
    10297:10297:android.os.Parcelable onSaveInstanceState() -> h
    10303:10303:void onRestoreInstanceState(android.os.Parcelable) -> a
    10306:10309:void stopSmoothScroller() -> Z
    10312:10315:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> b
    10323:10323:void onScrollStateChanged(int) -> m
    10338:10344:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> c
    10348:10349:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    10378:10393:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    10397:10398:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    10413:10424:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> a
    10428:10434:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    10453:10459:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    10472:10473:void requestSimpleAnimationsInNextLayout() -> aa
    10492:10492:int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> d
    10508:10511:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    10528:10531:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> b
    10545:10545:boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> e
    10550:10550:boolean performAccessibilityAction(int,android.os.Bundle) -> a
    10566:10592:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> a
    10598:10598:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> a
    10619:10619:boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> a
    10635:10644:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> a
    10648:10652:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> f
    10665:10665:boolean shouldMeasureTwice() -> t
    10669:10677:boolean hasFlexibleChildInBothOrientations() -> ab
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.bm:
    androidx.recyclerview.widget.RecyclerView$LayoutManager this$0 -> a
    7591:7591:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7594:7594:android.view.View getChildAt(int) -> a
    7599:7599:int getParentStart() -> a
    7604:7604:int getParentEnd() -> b
    7609:7611:int getChildStart(android.view.View) -> a
    7616:7618:int getChildEnd(android.view.View) -> b
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.bn:
    androidx.recyclerview.widget.RecyclerView$LayoutManager this$0 -> a
    7627:7627:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7630:7630:android.view.View getChildAt(int) -> a
    7635:7635:int getParentStart() -> a
    7640:7641:int getParentEnd() -> b
    7646:7648:int getChildStart(android.view.View) -> a
    7653:7655:int getChildEnd(android.view.View) -> b
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry -> androidx.recyclerview.widget.RecyclerView$i$a:
    void addPosition(int,int) -> b
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$i$b:
    int orientation -> a
    int spanCount -> b
    boolean reverseLayout -> c
    boolean stackFromEnd -> d
    10683:10683:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$j:
    androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder -> d
    android.graphics.Rect mDecorInsets -> e
    boolean mInsetsDirty -> f
    boolean mPendingInvalidate -> g
    11617:11626:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    11617:11630:void <init>(int,int) -> <init>
    11617:11634:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    11617:11638:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    11617:11642:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    11651:11651:boolean viewNeedsUpdate() -> c
    11661:11661:boolean isViewInvalid() -> d
    11672:11672:boolean isItemRemoved() -> e
    11683:11683:boolean isItemChanged() -> f
    11691:11691:int getViewPosition() -> g
    11701:11701:int getViewLayoutPosition() -> h
    11713:11713:int getViewAdapterPosition() -> i
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener -> androidx.recyclerview.widget.RecyclerView$k:
    void onChildViewAttachedToWindow(android.view.View) -> a
    void onChildViewDetachedFromWindow(android.view.View) -> b
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$l:
    12663:12663:void <init>() -> <init>
    boolean onFling(int,int) -> a
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener -> androidx.recyclerview.widget.RecyclerView$m:
    boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> a
    void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> b
    void onRequestDisallowInterceptTouchEvent(boolean) -> a
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$n:
    10870:10870:void <init>() -> <init>
    10878:10878:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> a
    10891:10891:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> a
androidx.recyclerview.widget.RecyclerView$Orientation -> androidx.recyclerview.widget.RecyclerView$o:
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$p:
    int DEFAULT_MAX_SCRAP -> b
    android.util.SparseArray mScrap -> a
    int mAttachCount -> c
    5635:5660:void <init>() -> <init>
    5666:5670:void clear() -> a
    5679:5685:void setMaxRecycledViews(int,int) -> a
    5691:5691:int getRecycledViewCount(int) -> a
    5704:5713:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> b
    5722:5729:int size() -> b
    5740:5750:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    5753:5756:long runningAverage(long,long) -> a
    5760:5763:void factorInCreateTime(int,long) -> a
    5766:5769:void factorInBindTime(int,long) -> b
    5772:5773:boolean willCreateInTime(int,long,long) -> a
    5777:5778:boolean willBindInTime(int,long,long) -> b
    5782:5783:void attach() -> c
    5786:5787:void detach() -> d
    5803:5812:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> a
    5815:5820:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> c
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$p$a:
    java.util.ArrayList mScrapHeap -> a
    int mMaxScrap -> b
    long mCreateRunningAverageNs -> c
    long mBindRunningAverageNs -> d
    5652:5656:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$q:
    java.util.ArrayList mAttachedScrap -> a
    java.util.ArrayList mChangedScrap -> b
    java.util.ArrayList mCachedViews -> c
    java.util.List mUnmodifiableAttachedScrap -> h
    int mRequestedCacheMax -> i
    int mViewCacheMax -> d
    androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool -> e
    androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension -> j
    int DEFAULT_CACHE_SIZE -> f
    androidx.recyclerview.widget.RecyclerView this$0 -> g
    5896:5906:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5919:5921:void clear() -> a
    5929:5931:void setViewCacheSize(int) -> a
    5934:5942:void updateViewCacheSize() -> b
    5951:5951:java.util.List getScrapList() -> c
    5965:5986:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    6004:6019:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> a
    6038:6067:void bindViewToPosition(android.view.View,int) -> a
    6088:6095:int convertPreLayoutPositionToPostLayout(int) -> b
    6114:6114:android.view.View getViewForPosition(int) -> c
    6118:6118:android.view.View getViewForPosition(int,boolean) -> a
    6142:6295:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> a
    6299:6318:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    6321:6324:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> f
    6327:6345:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> a
    6360:6387:void recycleView(android.view.View) -> a
    6390:6398:void recycleAndClearCachedViews() -> d
    6415:6421:void recycleCachedViewAt(int) -> d
    6429:6513:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    6524:6542:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> a
    6550:6555:void quickRecycleScrapView(android.view.View) -> b
    6567:6584:void scrapView(android.view.View) -> c
    6593:6601:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    6604:6604:int getScrapCount() -> e
    6608:6608:android.view.View getScrapViewAt(int) -> e
    6612:6616:void clearScrap() -> f
    6621:6646:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> f
    6657:6707:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> b
    6712:6760:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> a
    6765:6775:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    6779:6781:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> a
    6785:6810:void offsetPositionRecordsForMove(int,int) -> a
    6813:6824:void offsetPositionRecordsForInsert(int,int) -> b
    6833:6852:void offsetPositionRecordsForRemove(int,int,boolean) -> a
    6855:6856:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> a
    6859:6866:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> a
    6869:6872:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> g
    6876:6892:void viewRangeUpdate(int,int) -> c
    6895:6908:void markKnownViewsInvalid() -> h
    6911:6926:void clearOldPositions() -> i
    6929:6937:void markItemDecorInsetsDirty() -> j
androidx.recyclerview.widget.RecyclerView$RecyclerListener -> androidx.recyclerview.widget.RecyclerView$r:
    void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$s:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    5531:5532:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5536:5543:void onChanged() -> a
    5547:5551:void onItemRangeChanged(int,int,java.lang.Object) -> a
    5555:5559:void onItemRangeInserted(int,int) -> b
    5563:5567:void onItemRangeRemoved(int,int) -> c
    5571:5575:void onItemRangeMoved(int,int,int) -> a
    5578:5584:void triggerUpdateProcessor() -> b
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    android.os.Parcelable mLayoutState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    12312:12315:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12321:12322:void <init>(android.os.Parcelable) -> <init>
    12326:12328:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    12331:12332:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> a
    12334:12334:void <clinit>() -> <clinit>
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.bo:
    12334:12334:void <init>() -> <init>
    12337:12337:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    12342:12342:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> a
    12347:12347:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> a
    12334:12334:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12334:12334:java.lang.Object[] newArray(int) -> newArray
    12334:12334:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener -> androidx.recyclerview.widget.RecyclerView$t:
    10846:10846:void <init>() -> <init>
    10849:10849:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> a
    10854:10854:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> b
    10858:10858:void onRequestDisallowInterceptTouchEvent(boolean) -> a
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$u:
    int mTargetPosition -> a
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> b
    androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager -> c
    boolean mPendingInitialRun -> d
    boolean mRunning -> e
    android.view.View mTargetView -> f
    androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction -> g
    boolean mStarted -> h
    11760:11778:void <init>() -> <init>
    11795:11817:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> a
    11820:11821:void setTargetPosition(int) -> c
    11835:11842:android.graphics.PointF computeScrollVectorForPosition(int) -> d
    11851:11851:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> e
    11861:11875:void stop() -> f
    11885:11885:boolean isPendingInitialRun() -> g
    11893:11893:boolean isRunning() -> h
    11903:11903:int getTargetPosition() -> i
    11907:11952:void onAnimation(int,int) -> a
    11958:11958:int getChildPosition(android.view.View) -> a
    11965:11965:int getChildCount() -> j
    11972:11972:android.view.View findViewByPosition(int) -> e
    11981:11982:void instantScrollToPosition(int) -> f
    11985:11991:void onChildAttachedToWindow(android.view.View) -> b
    11998:12002:void normalize(android.graphics.PointF) -> a
    void onStart() -> a
    void onStop() -> b
    void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> a
    void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> a
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$u$a:
    int UNDEFINED_DURATION -> a
    int mDx -> b
    int mDy -> c
    int mDuration -> d
    int mJumpToPosition -> e
    android.view.animation.Interpolator mInterpolator -> f
    boolean mChanged -> g
    int mConsecutiveUpdates -> h
    12070:12071:void <init>(int,int) -> <init>
    12079:12080:void <init>(int,int,int) -> <init>
    12055:12095:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    12113:12114:void jumpTo(int) -> a
    12117:12117:boolean hasJumpTarget() -> a
    12121:12142:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> a
    12145:12151:void validate() -> f
    12155:12155:int getDx() -> b
    12159:12161:void setDx(int) -> b
    12165:12165:int getDy() -> c
    12169:12171:void setDy(int) -> c
    12174:12174:int getDuration() -> d
    12178:12180:void setDuration(int) -> d
    12184:12184:android.view.animation.Interpolator getInterpolator() -> e
    12194:12196:void setInterpolator(android.view.animation.Interpolator) -> a
    12208:12213:void update(int,int,int,android.view.animation.Interpolator) -> a
androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider -> androidx.recyclerview.widget.RecyclerView$u$b:
    android.graphics.PointF computeScrollVectorForPosition(int) -> d
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$v:
    int STEP_START -> a
    int STEP_LAYOUT -> b
    int STEP_ANIMATIONS -> c
    int mTargetPosition -> d
    android.util.SparseArray mData -> t
    int mPreviousLayoutItemCount -> e
    int mDeletedInvisibleItemCountSincePreviousLayout -> f
    int mLayoutStep -> g
    int mItemCount -> h
    boolean mStructureChanged -> i
    boolean mInPreLayout -> j
    boolean mTrackOldChangeHolders -> k
    boolean mIsMeasuring -> l
    boolean mRunSimpleAnimations -> m
    boolean mRunPredictiveAnimations -> n
    int mFocusedItemPosition -> o
    long mFocusedItemId -> p
    int mFocusedSubChildId -> q
    int mRemainingScrollHorizontal -> r
    int mRemainingScrollVertical -> s
    12362:12433:void <init>() -> <init>
    12368:12373:void assertLayoutStep(int) -> a
    12459:12464:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> a
    12481:12481:boolean isMeasuring() -> a
    12490:12490:boolean isPreLayout() -> b
    12501:12501:boolean willRunPredictiveAnimations() -> c
    12512:12512:boolean willRunSimpleAnimations() -> d
    12521:12525:void remove(int) -> b
    12537:12540:java.lang.Object get(int) -> c
    12552:12556:void put(int,java.lang.Object) -> a
    12566:12566:int getTargetScrollPosition() -> e
    12575:12575:boolean hasTargetScrollPosition() -> f
    12583:12583:boolean didStructureChange() -> g
    12611:12611:int getItemCount() -> h
    12624:12624:int getRemainingScrollHorizontal() -> i
    12635:12635:int getRemainingScrollVertical() -> j
    12640:12640:java.lang.String toString() -> toString
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension -> androidx.recyclerview.widget.RecyclerView$w:
    6953:6953:void <init>() -> <init>
    android.view.View getViewForPositionAndType(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> a
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$x:
    int mLastFlingX -> d
    int mLastFlingY -> e
    android.widget.OverScroller mOverScroller -> a
    android.view.animation.Interpolator mInterpolator -> b
    boolean mEatRunOnAnimationRequest -> f
    boolean mReSchedulePostAnimationCallback -> g
    androidx.recyclerview.widget.RecyclerView this$0 -> c
    5238:5248:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5252:5400:void run() -> run
    5403:5408:void postOnAnimation() -> a
    5411:5413:void internalPostOnAnimation() -> c
    5416:5428:void fling(int,int) -> a
    5445:5474:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> a
    5477:5479:float distanceInfluenceForSnapDuration(float) -> a
    5483:5501:int computeScrollDuration(int,int,int,int) -> a
    5505:5507:void stop() -> b
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$y:
    android.view.View itemView -> a
    java.lang.ref.WeakReference mNestedRecyclerView -> b
    int mPosition -> c
    int mOldPosition -> d
    long mItemId -> e
    int mItemViewType -> f
    int mPreLayoutPosition -> g
    androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowedHolder -> h
    androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder -> i
    int FLAG_BOUND -> j
    int FLAG_UPDATE -> k
    int FLAG_INVALID -> l
    int FLAG_REMOVED -> m
    int FLAG_NOT_RECYCLABLE -> n
    int FLAG_RETURNED_FROM_SCRAP -> o
    int FLAG_IGNORE -> p
    int FLAG_TMP_DETACHED -> q
    int FLAG_ADAPTER_POSITION_UNKNOWN -> r
    int FLAG_ADAPTER_FULLUPDATE -> s
    int FLAG_MOVED -> t
    int FLAG_APPEARED_IN_PRE_LAYOUT -> u
    int PENDING_ACCESSIBILITY_STATE_NOT_SET -> v
    int FLAG_BOUNCED_FROM_HIDDEN_LIST -> w
    int mFlags -> x
    java.util.List FULLUPDATE_PAYLOADS -> E
    java.util.List mPayloads -> y
    java.util.List mUnmodifiedPayloads -> z
    int mIsRecyclableCount -> F
    androidx.recyclerview.widget.RecyclerView$Recycler mScrapContainer -> A
    boolean mInChangeScrap -> B
    int mWasImportantForAccessibilityBeforeHidden -> G
    int mPendingAccessibilityState -> C
    androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView -> D
    10953:11091:void <init>(android.view.View) -> <init>
    11094:11097:void flagRemovedAndOffsetPosition(int,int,boolean) -> a
    11100:11113:void offsetPosition(int,boolean) -> a
    11116:11118:void clearOldPosition() -> a
    11121:11124:void saveOldPosition() -> b
    11127:11127:boolean shouldIgnore() -> c
    11140:11140:int getPosition() -> d
    11166:11166:int getLayoutPosition() -> e
    11192:11195:int getAdapterPosition() -> f
    11210:11210:int getOldPosition() -> g
    11220:11220:long getItemId() -> h
    11227:11227:int getItemViewType() -> i
    11231:11231:boolean isScrap() -> j
    11235:11236:void unScrap() -> k
    11239:11239:boolean wasReturnedFromScrap() -> l
    11243:11244:void clearReturnedFromScrapFlag() -> m
    11247:11248:void clearTmpDetachFlag() -> n
    11251:11252:void stopIgnoring() -> o
    11255:11257:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> a
    11260:11260:boolean isInvalid() -> p
    11264:11264:boolean needsUpdate() -> q
    11268:11268:boolean isBound() -> r
    11272:11272:boolean isRemoved() -> s
    11276:11276:boolean hasAnyOfTheFlags(int) -> a
    11280:11280:boolean isTmpDetached() -> t
    11284:11284:boolean isAttachedToTransitionOverlay() -> u
    11288:11288:boolean isAdapterPositionUnknown() -> v
    11292:11293:void setFlags(int,int) -> a
    11296:11297:void addFlags(int) -> b
    11300:11306:void addChangePayload(java.lang.Object) -> a
    11309:11313:void createPayloadsIfNeeded() -> D
    11316:11320:void clearPayload() -> w
    11323:11332:java.util.List getUnmodifiedPayloads() -> x
    11337:11349:void resetInternal() -> y
    11356:11364:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> a
    11370:11373:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> b
    11377:11397:java.lang.String toString() -> toString
    11414:11431:void setIsRecyclable(boolean) -> a
    11439:11440:boolean isRecyclable() -> z
    11448:11448:boolean shouldBeKeptAsChild() -> A
    11456:11456:boolean doesTransientStatePreventRecycling() -> B
    11460:11460:boolean isUpdated() -> C
    11059:11059:void <clinit>() -> <clinit>
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.bp:
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> a
    androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate mItemDelegate -> b
    44:52:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    55:55:boolean shouldIgnore() -> a
    60:67:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    72:76:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    80:87:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    99:99:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> b
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.bp$a:
    androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mRecyclerViewDelegate -> a
    java.util.Map mOriginalItemDelegates -> b
    112:121:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    128:132:void saveOriginalDelegate(android.view.View) -> a
    138:138:androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View) -> b
    143:156:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    160:173:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    179:185:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    190:196:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    201:205:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    212:218:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    223:229:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    234:238:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    245:249:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.bq:
    32:53:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> a
    63:72:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> a
    82:96:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> b
    99:100:void <init>() -> <init>
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.br:
    boolean DEBUG -> a
    java.lang.String TAG -> b
    boolean mSupportsChangeAnimations -> m
    35:41:void <init>() -> <init>
    50:50:boolean getSupportsChangeAnimations() -> k
    71:72:void setSupportsChangeAnimations(boolean) -> a
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> j
    90:107:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    114:126:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    133:142:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
    151:161:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    276:278:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> k
    291:293:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> l
    301:303:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> m
    316:318:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> a
    326:327:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> n
    335:336:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> o
    344:345:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> p
    357:358:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> b
    370:370:void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> q
    381:381:void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> r
    393:393:void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> s
    404:404:void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> t
    416:416:void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> u
    427:427:void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> v
    441:441:void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> c
    454:454:void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> d
androidx.recyclerview.widget.SnapHelper -> androidx.recyclerview.widget.bs:
    float MILLISECONDS_PER_INCH -> a
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> b
    android.widget.Scroller mGravityScroller -> c
    androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener -> d
    34:42:void <init>() -> <init>
    65:75:boolean onFling(int,int) -> a
    93:106:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> a
    112:117:void setupCallbacks() -> b
    123:125:void destroyCallbacks() -> c
    137:142:int[] calculateScrollDistance(int,int) -> b
    157:173:boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> b
    182:197:void snapToTargetExistingView() -> a
    209:209:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> c
    224:227:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> b
    int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> a
    android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> a
    int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> a
androidx.recyclerview.widget.SnapHelper$1 -> androidx.recyclerview.widget.bt:
    boolean mScrolled -> a
    androidx.recyclerview.widget.SnapHelper this$0 -> b
    43:44:void <init>(androidx.recyclerview.widget.SnapHelper) -> <init>
    48:53:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> a
    57:60:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> a
androidx.recyclerview.widget.SnapHelper$2 -> androidx.recyclerview.widget.bu:
    androidx.recyclerview.widget.SnapHelper this$0 -> i
    227:227:void <init>(androidx.recyclerview.widget.SnapHelper,android.content.Context) -> <init>
    230:242:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> a
    246:246:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> a
androidx.recyclerview.widget.SortedList -> androidx.recyclerview.widget.bv:
    int INVALID_POSITION -> a
    int MIN_CAPACITY -> c
    int CAPACITY_GROWTH -> d
    int INSERTION -> e
    int DELETION -> f
    int LOOKUP -> g
    java.lang.Object[] mData -> b
    java.lang.Object[] mOldData -> h
    int mOldDataStart -> i
    int mOldDataSize -> j
    int mNewDataStart -> k
    androidx.recyclerview.widget.SortedList$Callback mCallback -> l
    androidx.recyclerview.widget.SortedList$BatchedCallback mBatchedCallback -> m
    int mSize -> n
    java.lang.Class mTClass -> o
    91:92:void <init>(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback) -> <init>
    101:106:void <init>(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback,int) -> <init>
    114:114:int size() -> a
    143:144:int add(java.lang.Object) -> a
    162:172:void addAll(java.lang.Object[],boolean) -> a
    182:183:void addAll(java.lang.Object[]) -> a
    193:195:void addAll(java.util.Collection) -> a
    217:224:void replaceAll(java.lang.Object[],boolean) -> b
    235:236:void replaceAll(java.lang.Object[]) -> b
    247:249:void replaceAll(java.util.Collection) -> b
    252:265:void addAllInternal(java.lang.Object[]) -> c
    268:331:void replaceAllInternal(java.lang.Object[]) -> d
    334:338:void replaceAllInsert(java.lang.Object) -> d
    341:344:void replaceAllRemove() -> e
    353:391:int sortAndDedup(java.lang.Object[]) -> e
    396:401:int findSameItem(java.lang.Object,java.lang.Object[],int,int) -> a
    408:472:void merge(java.lang.Object[],int) -> a
    479:483:void throwIfInMutationOperation() -> f
    518:526:void beginBatchedUpdates() -> b
    532:539:void endBatchedUpdates() -> c
    542:563:int add(java.lang.Object,boolean) -> a
    574:575:boolean remove(java.lang.Object) -> b
    586:589:java.lang.Object removeItemAt(int) -> a
    593:598:boolean remove(java.lang.Object,boolean) -> b
    602:608:void removeItemAtIndex(int,boolean) -> a
    631:655:void updateItemAt(int,java.lang.Object) -> a
    685:693:void recalculatePositionOfItemAt(int) -> b
    705:716:java.lang.Object get(int) -> c
    728:739:int indexOf(java.lang.Object) -> c
    743:764:int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int) -> a
    769:789:int linearEqualitySearch(java.lang.Object,int,int,int) -> a
    793:810:void addToData(int,java.lang.Object) -> b
    813:815:java.lang.Object[] copyArray(java.lang.Object[]) -> f
    822:830:void clear() -> d
androidx.recyclerview.widget.SortedList$BatchedCallback -> androidx.recyclerview.widget.bv$a:
    androidx.recyclerview.widget.SortedList$Callback mWrappedCallback -> a
    androidx.recyclerview.widget.BatchingListUpdateCallback mBatchingListUpdateCallback -> b
    951:954:void <init>(androidx.recyclerview.widget.SortedList$Callback) -> <init>
    958:958:int compare(java.lang.Object,java.lang.Object) -> compare
    963:964:void onInserted(int,int) -> a
    968:969:void onRemoved(int,int) -> b
    973:974:void onMoved(int,int) -> c
    978:979:void onChanged(int,int) -> d
    983:984:void onChanged(int,int,java.lang.Object) -> a
    988:988:boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> a
    993:993:boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> b
    999:999:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> c
    1007:1008:void dispatchLastEvent() -> a
androidx.recyclerview.widget.SortedList$Callback -> androidx.recyclerview.widget.bv$b:
    840:840:void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    void onChanged(int,int) -> d
    866:867:void onChanged(int,int,java.lang.Object) -> a
    boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> a
    boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> b
    920:920:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> c
androidx.recyclerview.widget.SortedListAdapterCallback -> androidx.recyclerview.widget.bw:
    androidx.recyclerview.widget.RecyclerView$Adapter mAdapter -> a
    33:35:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    39:40:void onInserted(int,int) -> a
    44:45:void onRemoved(int,int) -> b
    49:50:void onMoved(int,int) -> c
    54:55:void onChanged(int,int) -> d
    59:60:void onChanged(int,int,java.lang.Object) -> a
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    java.lang.String TAG -> p
    boolean DEBUG -> a
    int HORIZONTAL -> b
    int VERTICAL -> c
    int GAP_HANDLING_NONE -> d
    int GAP_HANDLING_LAZY -> e
    int GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS -> f
    int INVALID_OFFSET -> g
    float MAX_SCROLL_FACTOR -> q
    int mSpanCount -> r
    androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[] mSpans -> h
    androidx.recyclerview.widget.OrientationHelper mPrimaryOrientation -> i
    androidx.recyclerview.widget.OrientationHelper mSecondaryOrientation -> j
    int mOrientation -> s
    int mSizePerSpan -> t
    androidx.recyclerview.widget.LayoutState mLayoutState -> E
    boolean mReverseLayout -> k
    boolean mShouldReverseLayout -> l
    java.util.BitSet mRemainingSpans -> F
    int mPendingScrollPosition -> m
    int mPendingScrollPositionOffset -> n
    androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup -> o
    int mGapStrategy -> G
    boolean mLastLayoutFromEnd -> H
    boolean mLastLayoutRTL -> I
    androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState -> J
    int mFullSizeSpec -> K
    android.graphics.Rect mTmpRect -> L
    androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo mAnchorInfo -> M
    boolean mLaidOutInvalidFullSpan -> N
    boolean mSmoothScrollbarEnabled -> O
    int[] mPrefetchDistances -> P
    java.lang.Runnable mCheckForGapsRunnable -> Q
    107:236:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    107:250:void <init>(int,int) -> <init>
    254:254:boolean isAutoMeasureEnabled() -> f
    258:261:void createOrientationHelpers() -> u
    270:311:boolean checkForGaps() -> b
    316:319:void onScrollStateChanged(int) -> m
    323:331:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    339:399:android.view.View hasGapsToFix() -> c
    403:416:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> a
    429:440:void setSpanCount(int) -> a
    449:461:void setOrientation(int) -> b
    477:483:void setReverseLayout(boolean) -> a
    500:500:int getGapStrategy() -> e
    513:524:void setGapStrategy(int) -> f
    528:531:void assertNotInLayoutOrScroll(java.lang.String) -> a
    539:539:int getSpanCount() -> g
    549:551:void invalidateSpanAssignments() -> k
    560:565:void resolveShouldLayoutReverse() -> v
    568:568:boolean isLayoutRTL() -> l
    580:580:boolean getReverseLayout() -> m
    587:601:void setMeasuredDimension(android.graphics.Rect,int,int) -> a
    605:606:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> c
    611:722:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> a
    726:731:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> a
    734:780:void repositionToWrapContentIfNecessary() -> w
    786:819:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> a
    822:833:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> a
    840:844:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> c
    849:923:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> b
    927:931:void updateMeasureSpecs(int) -> g
    935:935:boolean supportsPredictiveItemAnimations() -> d
    958:967:int[] findFirstVisibleItemPositions(int[]) -> a
    990:999:int[] findFirstCompletelyVisibleItemPositions(int[]) -> b
    1022:1031:int[] findLastVisibleItemPositions(int[]) -> c
    1054:1063:int[] findLastCompletelyVisibleItemPositions(int[]) -> d
    1068:1068:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> d
    1072:1077:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> f
    1083:1083:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> e
    1088:1088:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> g
    1092:1097:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> i
    1103:1103:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> h
    1108:1108:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> b
    1112:1117:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> j
    1123:1123:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> c
    1128:1189:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> a
    1193:1206:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> a
    1209:1217:int updateSpecWithExtra(int,int,int) -> b
    1222:1228:void onRestoreInstanceState(android.os.Parcelable) -> a
    1232:1277:android.os.Parcelable onSaveInstanceState() -> h
    1283:1298:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    1302:1319:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    1327:1329:int findFirstVisibleItemPositionInt() -> n
    1335:1338:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    1344:1347:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> b
    1357:1377:android.view.View findFirstVisibleItemClosestToStart(boolean) -> b
    1387:1406:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> c
    1411:1426:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> b
    1430:1445:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> c
    1448:1476:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> b
    1479:1482:void setLayoutStateDirection(int) -> n
    1486:1490:void offsetChildrenHorizontal(int) -> k
    1494:1498:void offsetChildrenVertical(int) -> l
    1502:1503:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> b
    1507:1508:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    1512:1514:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> a
    1518:1519:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> a
    1524:1525:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> a
    1531:1571:void handleUpdate(int,int,int) -> c
    1575:1728:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> a
    1732:1737:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> o
    1741:1746:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> p
    1750:1763:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> a
    1766:1802:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> a
    1806:1809:void appendViewToAllSpans(android.view.View) -> w
    1813:1816:void prependViewToAllSpans(android.view.View) -> x
    1819:1825:void updateAllRemainingSpans(int,int) -> b
    1828:1840:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> a
    1843:1850:int getMaxStart(int) -> q
    1854:1861:int getMinStart(int) -> r
    1865:1871:boolean areAllEndsEqual() -> o
    1875:1881:boolean areAllStartsEqual() -> p
    1885:1892:int getMaxEnd(int) -> s
    1896:1903:int getMinEnd(int) -> t
    1907:1933:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> a
    1936:1964:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> b
    1970:1973:boolean preferLastSpan(int) -> u
    1980:2016:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> a
    2022:2022:boolean canScrollVertically() -> j
    2027:2027:boolean canScrollHorizontally() -> i
    2033:2033:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    2039:2039:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> b
    2043:2047:int calculateScrollDirectionForPosition(int) -> v
    2052:2064:android.graphics.PointF computeScrollVectorForPosition(int) -> d
    2070:2073:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> a
    2077:2083:void scrollToPosition(int) -> e
    2099:2105:void scrollToPositionWithOffset(int,int) -> a
    2123:2155:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    2160:2172:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> a
    2175:2199:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> c
    2203:2204:int getLastChildPosition() -> q
    2208:2209:int getFirstChildPosition() -> r
    2218:2226:int findFirstReferenceChildPosition(int) -> w
    2235:2242:int findLastReferenceChildPosition(int) -> x
    2248:2252:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> a
    2259:2259:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> a
    2264:2267:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    2273:2273:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> a
    2277:2277:int getOrientation() -> s
    2284:2378:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    2392:2425:int convertFocusDirectionToLayoutDirection(int) -> y
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.bx:
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> a
    216:216:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    219:220:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$a:
    int mPosition -> a
    int mOffset -> b
    boolean mLayoutFromEnd -> c
    boolean mInvalidateOffsets -> d
    boolean mValid -> e
    int[] mSpanReferenceLines -> f
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> g
    3267:3269:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3272:3280:void reset() -> a
    3283:3291:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> a
    3294:3296:void assignCoordinateFromPadding() -> b
    3299:3304:void assignCoordinateFromPadding(int) -> a
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$b:
    int INVALID_SPAN_ID -> a
    androidx.recyclerview.widget.StaggeredGridLayoutManager$Span mSpan -> b
    boolean mFullSpan -> c
    2450:2451:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2454:2455:void <init>(int,int) -> <init>
    2458:2459:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2462:2463:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2466:2467:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    2478:2479:void setFullSpan(boolean) -> a
    2488:2488:boolean isFullSpan() -> a
    2498:2501:int getSpanIndex() -> b
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    int MIN_SIZE -> c
    int[] mData -> a
    java.util.List mFullSpanItems -> b
    2838:2838:void <init>() -> <init>
    2849:2857:int forceInvalidateAfter(int) -> a
    2864:2877:int invalidateAfter(int) -> b
    2882:2885:int getSpan(int) -> c
    2890:2892:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> a
    2895:2899:int sizeForPosition(int) -> d
    2903:2912:void ensureSize(int) -> e
    2915:2919:void clear() -> a
    2922:2931:void offsetForRemoval(int,int) -> a
    2934:2949:void offsetFullSpansForRemoval(int,int) -> c
    2952:2961:void offsetForAddition(int,int) -> b
    2964:2974:void offsetFullSpansForAddition(int,int) -> d
    2981:3003:int invalidateFullSpansAfter(int) -> g
    3007:3027:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> a
    3030:3039:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> f
    3051:3066:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> a
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    int mPosition -> a
    int mGapDir -> b
    int[] mGapPerSpan -> c
    boolean mHasUnwantedGapAfter -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    3083:3092:void <init>(android.os.Parcel) -> <init>
    3094:3095:void <init>() -> <init>
    3098:3098:int getGapForSpan(int) -> a
    3103:3103:int describeContents() -> describeContents
    3108:3117:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    3121:3125:java.lang.String toString() -> toString
    3129:3129:void <clinit>() -> <clinit>
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.by:
    3130:3130:void <init>() -> <init>
    3133:3133:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> a
    3138:3138:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> a
    3130:3130:java.lang.Object[] newArray(int) -> newArray
    3130:3130:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    int mAnchorPosition -> a
    int mVisibleAnchorPosition -> b
    int mSpanOffsetsSize -> c
    int[] mSpanOffsets -> d
    int mSpanLookupSize -> e
    int[] mSpanLookup -> f
    java.util.List mFullSpanItems -> g
    boolean mReverseLayout -> h
    boolean mAnchorLayoutFromEnd -> i
    boolean mLastLayoutRTL -> j
    android.os.Parcelable$Creator CREATOR -> CREATOR
    3162:3163:void <init>() -> <init>
    3165:3186:void <init>(android.os.Parcel) -> <init>
    3188:3199:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3202:3207:void invalidateSpanInfo() -> a
    3210:3214:void invalidateAnchorPositionInfo() -> b
    3218:3218:int describeContents() -> describeContents
    3223:3237:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    3239:3239:void <clinit>() -> <clinit>
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.bz:
    3240:3240:void <init>() -> <init>
    3243:3243:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> a
    3248:3248:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> a
    3240:3240:java.lang.Object[] newArray(int) -> newArray
    3240:3240:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$c:
    int INVALID_LINE -> a
    java.util.ArrayList mViews -> b
    int mCachedStart -> c
    int mCachedEnd -> d
    int mDeletedSize -> e
    int mIndex -> f
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> g
    2509:2517:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2520:2527:int getStartLine(int) -> a
    2531:2541:void calculateCachedStart() -> a
    2545:2549:int getStartLine() -> b
    2553:2561:int getEndLine(int) -> b
    2565:2575:void calculateCachedEnd() -> c
    2579:2583:int getEndLine() -> d
    2587:2597:void prependToSpan(android.view.View) -> a
    2600:2610:void appendToSpan(android.view.View) -> b
    2615:2632:void cacheReferenceLineAndClear(boolean,int) -> a
    2635:2638:void clear() -> e
    2641:2643:void invalidateCache() -> f
    2646:2647:void setLine(int) -> c
    2650:2661:void popEnd() -> g
    2664:2674:void popStart() -> h
    2677:2677:int getDeletedSize() -> i
    2681:2681:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> c
    2685:2691:void onOffset(int) -> d
    2694:2696:int findFirstVisibleItemPosition() -> j
    2700:2702:int findFirstPartiallyVisibleItemPosition() -> k
    2706:2708:int findFirstCompletelyVisibleItemPosition() -> l
    2712:2714:int findLastVisibleItemPosition() -> m
    2718:2720:int findLastPartiallyVisibleItemPosition() -> n
    2724:2726:int findLastCompletelyVisibleItemPosition() -> o
    2756:2783:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> a
    2787:2787:int findOneVisibleChild(int,int,boolean) -> a
    2793:2793:int findOnePartiallyVisibleChild(int,int,boolean) -> b
    2801:2830:android.view.View getFocusableViewAfter(int,int) -> a
androidx.recyclerview.widget.ThreadUtil -> androidx.recyclerview.widget.ca:
    androidx.recyclerview.widget.ThreadUtil$MainThreadCallback getMainThreadProxy(androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> a
    androidx.recyclerview.widget.ThreadUtil$BackgroundCallback getBackgroundProxy(androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> a
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback -> androidx.recyclerview.widget.ca$a:
    void refresh(int) -> a
    void updateRange(int,int,int,int,int) -> a
    void loadTile(int,int) -> a
    void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> a
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback -> androidx.recyclerview.widget.ca$b:
    void updateItemCount(int,int) -> a
    void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> a
    void removeTile(int,int) -> b
androidx.recyclerview.widget.TileList -> androidx.recyclerview.widget.cb:
    int mTileSize -> a
    android.util.SparseArray mTiles -> c
    androidx.recyclerview.widget.TileList$Tile mLastAccessedTile -> b
    31:37:void <init>(int) -> <init>
    40:48:java.lang.Object getItemAt(int) -> a
    52:52:int size() -> a
    56:57:void clear() -> b
    60:60:androidx.recyclerview.widget.TileList$Tile getAtIndex(int) -> b
    64:74:androidx.recyclerview.widget.TileList$Tile addOrReplace(androidx.recyclerview.widget.TileList$Tile) -> a
    78:83:androidx.recyclerview.widget.TileList$Tile removeAtPos(int) -> c
androidx.recyclerview.widget.TileList$Tile -> androidx.recyclerview.widget.cb$a:
    java.lang.Object[] mItems -> a
    int mStartPosition -> b
    int mItemCount -> c
    androidx.recyclerview.widget.TileList$Tile mNext -> d
    92:96:void <init>(java.lang.Class,int) -> <init>
    99:99:boolean containsPosition(int) -> a
    103:103:java.lang.Object getByPosition(int) -> b
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.cc:
    int GT -> a
    int EQ -> b
    int LT -> c
    int CVS_PVS_POS -> d
    int FLAG_CVS_GT_PVS -> e
    int FLAG_CVS_EQ_PVS -> f
    int FLAG_CVS_LT_PVS -> g
    int CVS_PVE_POS -> h
    int FLAG_CVS_GT_PVE -> i
    int FLAG_CVS_EQ_PVE -> j
    int FLAG_CVS_LT_PVE -> k
    int CVE_PVS_POS -> l
    int FLAG_CVE_GT_PVS -> m
    int FLAG_CVE_EQ_PVS -> n
    int FLAG_CVE_LT_PVS -> o
    int CVE_PVE_POS -> p
    int FLAG_CVE_GT_PVE -> q
    int FLAG_CVE_EQ_PVE -> r
    int FLAG_CVE_LT_PVE -> s
    int MASK -> t
    androidx.recyclerview.widget.ViewBoundsCheck$Callback mCallback -> u
    androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags mBoundFlags -> v
    131:134:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    213:238:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> a
    248:255:boolean isViewWithinBoundFlags(android.view.View,int) -> a
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.cc$a:
    int mBoundFlags -> a
    int mRvStart -> b
    int mRvEnd -> c
    int mChildStart -> d
    int mChildEnd -> e
    136:137:void <init>() -> <init>
    141:145:void setBounds(int,int,int,int) -> a
    148:149:void addFlags(int) -> a
    152:153:void resetFlags() -> a
    156:162:int compare(int,int) -> a
    166:189:boolean boundsMatch() -> b
androidx.recyclerview.widget.ViewBoundsCheck$Callback -> androidx.recyclerview.widget.cc$b:
    android.view.View getChildAt(int) -> a
    int getParentStart() -> a
    int getParentEnd() -> b
    int getChildStart(android.view.View) -> a
    int getChildEnd(android.view.View) -> b
androidx.recyclerview.widget.ViewBoundsCheck$ViewBounds -> androidx.recyclerview.widget.cc$c:
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.cd:
    boolean DEBUG -> c
    androidx.collection.SimpleArrayMap mLayoutHolderMap -> a
    androidx.collection.LongSparseArray mOldChangedHolders -> b
    36:47:void <init>() -> <init>
    54:56:void clear() -> a
    64:71:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    74:75:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    86:86:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    97:97:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    101:123:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    132:133:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    145:152:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    161:162:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    173:173:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> a
    182:189:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
    198:204:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    211:216:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> f
    219:253:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> a
    260:270:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> g
    273:274:void onDetach() -> b
    277:278:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> h
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.cd$a:
    int FLAG_DISAPPEARED -> a
    int FLAG_APPEAR -> b
    int FLAG_PRE -> c
    int FLAG_POST -> d
    int FLAG_APPEAR_AND_DISAPPEAR -> e
    int FLAG_PRE_AND_POST -> f
    int FLAG_APPEAR_PRE_AND_POST -> g
    int flags -> h
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo preInfo -> i
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo postInfo -> j
    androidx.core.util.Pools$Pool sPool -> k
    309:310:void <init>() -> <init>
    313:314:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> a
    318:322:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> a
    326:327:void drainCache() -> b
    307:307:void <clinit>() -> <clinit>
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback -> androidx.recyclerview.widget.cd$b:
    void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
    void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
com.StartStopDemo -> atakplugin.helloworld.bc:
    3:3:void <init>() -> <init>
com.atakmap.android.helloworld.CameraActivity -> com.atakmap.android.helloworld.CameraActivity:
    int CAMERA_REQUEST -> a
    java.lang.String CAMERA_INFO -> b
    12:12:void <init>() -> <init>
    18:22:void onCreate(android.os.Bundle) -> onCreate
    26:36:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.atakmap.android.helloworld.CameraActivity$CameraDataListener -> com.atakmap.android.helloworld.CameraActivity$a:
    boolean registered -> a
    com.atakmap.android.helloworld.CameraActivity$CameraDataReceiver cdr -> b
    46:48:void <init>() -> <init>
    52:57:void register(android.content.Context,com.atakmap.android.helloworld.CameraActivity$CameraDataReceiver) -> a
    61:76:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.atakmap.android.helloworld.CameraActivity$CameraDataReceiver -> com.atakmap.android.helloworld.CameraActivity$b:
    void onCameraDataReceived(android.graphics.Bitmap) -> a
com.atakmap.android.helloworld.GLSpecialMarker -> com.atakmap.android.helloworld.a:
    com.atakmap.coremap.maps.coords.GeoPointMetaData gpm -> c
    com.atakmap.android.maps.graphics.GLMapItemSpi3 SPI -> a
    com.atakmap.opengl.GLText text -> d
    com.atakmap.android.maps.MapItem subject -> e
    com.atakmap.android.maps.graphics.GLMarker2 markerRenderer -> b
    30:70:void <init>(com.atakmap.map.MapRenderer,com.atakmap.android.maps.PointMapItem) -> <init>
    77:136:void draw(com.atakmap.map.opengl.GLMapView,int) -> draw
    142:149:void batch(com.atakmap.map.opengl.GLMapView,com.atakmap.opengl.GLRenderBatch2,int) -> batch
    153:155:void onPointChanged(com.atakmap.android.maps.PointMapItem) -> onPointChanged
    32:58:void <clinit>() -> <clinit>
com.atakmap.android.helloworld.GLSpecialMarker$1 -> com.atakmap.android.helloworld.b:
    32:32:void <init>() -> <init>
    36:36:int getPriority() -> getPriority
    41:51:com.atakmap.android.maps.graphics.GLMapItem2 create(android.util.Pair) -> a
    32:32:java.lang.Object create(java.lang.Object) -> create
com.atakmap.android.helloworld.HelloWorldContactHandler -> com.atakmap.android.helloworld.c:
    java.lang.String TAG -> a
    android.content.Context pluginContext -> b
    25:27:void <init>(android.content.Context) -> <init>
    31:31:boolean isSupported(java.lang.String) -> isSupported
    37:37:boolean hasFeature(com.atakmap.android.contact.ContactConnectorManager$ConnectorFeature) -> hasFeature
    42:42:java.lang.String getName() -> getName
    52:58:boolean handleContact(java.lang.String,java.lang.String,java.lang.String) -> handleContact
    65:65:java.lang.Object getFeature(java.lang.String,com.atakmap.android.contact.ContactConnectorManager$ConnectorFeature,java.lang.String,java.lang.String) -> getFeature
    70:71:java.lang.String getDescription() -> getDescription
com.atakmap.android.helloworld.HelloWorldDropDownReceiver -> com.atakmap.android.helloworld.d:
    android.app.NotificationManager nm -> n
    java.lang.String TAG -> a
    java.lang.String SHOW_HELLO_WORLD -> b
    java.lang.String CHAT_HELLO_WORLD -> c
    java.lang.String SEND_HELLO_WORLD -> d
    java.lang.String LAYER_DELETE -> e
    java.lang.String LAYER_VISIBILITY -> f
    android.view.View helloView -> o
    android.content.Context pluginContext -> p
    com.atakmap.android.contact.Contact helloContact -> q
    com.atakmap.android.helloworld.RouteEventListener routeEventListener -> r
    com.atakmap.android.helloworld.HelloWorldMapOverlay mapOverlay -> s
    com.atakmap.android.helloworld.recyclerview.RecyclerViewDropDown recyclerView -> t
    com.atakmap.android.helloworld.TabViewDropDown tabView -> u
    com.atakmap.android.helloworld.menu.MenuFactory menuFactory -> g
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver$InspectionMapItemSelectionTool imis -> h
    java.util.Timer issTimer -> v
    com.atakmap.android.routes.Route r -> w
    com.atakmap.android.helloworld.samplelayer.ExampleLayer exampleLayer -> x
    java.util.Map exampleMultiLayers -> y
    com.atakmap.android.helloworld.CameraActivity$CameraDataListener cdl -> z
    com.atakmap.android.helloworld.CameraActivity$CameraDataReceiver cdr -> A
    com.atakmap.android.helloworld.SpeechToTextActivity$SpeechDataListener sd1 -> B
    com.atakmap.android.helloworld.SpeechToTextActivity$SpeechDataReceiver sdr -> C
    com.atakmap.android.helloworld.speechtotext.SpeechToActivity$SpeechDataListener sd1a -> D
    com.atakmap.android.helloworld.speechtotext.SpeechToActivity$SpeechDataReceiver sdra -> E
    com.atakmap.comms.CotServiceRemote csr -> F
    boolean connected -> G
    com.atakmap.comms.CotServiceRemote$ConnectionListener cl -> i
    com.atakmap.comms.CotStreamListener csl -> j
    com.atakmap.comms.CotServiceRemote$OutputsChangedListener _outputsChangedListener -> k
    android.content.BroadcastReceiver inspectionReceiver -> l
    android.content.BroadcastReceiver fordReceiver -> m
    198:2195:void <init>(com.atakmap.android.maps.MapView,android.content.Context,com.atakmap.android.helloworld.HelloWorldMapOverlay) -> <init>
    1759:1772:void spamNotification(int) -> a
    1776:1776:void test(android.view.View) -> a
    1862:1902:void runSim() -> a
    1908:1939:void createEllipse(com.atakmap.android.maps.Marker) -> a
    1945:1976:void createCircle(com.atakmap.android.maps.Marker) -> b
    1980:2002:void manipulateFakeContentProvider() -> h
    2009:2044:void disposeImpl() -> disposeImpl
    2051:2137:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    2140:2145:com.atakmap.comms.NetConnectString getIpAddress(com.atakmap.android.contact.IndividualContact) -> a
    2152:2152:void onDropDownSelectionRemoved() -> onDropDownSelectionRemoved
    2156:2156:void onDropDownVisible(boolean) -> onDropDownVisible
    2160:2160:void onDropDownSizeChanged(double,double) -> onDropDownSizeChanged
    2167:2176:void onDropDownClose() -> onDropDownClose
    2184:2192:com.atakmap.android.routes.RouteMapReceiver getRouteMapReceiver() -> i
    2204:2206:void toast(java.lang.String) -> b
    2211:2283:void createSpeechMarker(java.util.HashMap) -> a
    2286:2306:void createAircraftWithRotation() -> b
    2310:2352:void createOrModifySensorFOV() -> c
    2357:2387:void createUnit() -> d
    2396:2415:void printNetworks() -> e
    2419:2464:void drawShapes() -> f
    2475:2475:java.lang.String getMenu() -> j
    2484:2484:java.lang.String getMenu2() -> g
    2498:2524:com.atakmap.android.contact.Contact addPluginContact(java.lang.String) -> a
    2534:2535:void removeContact(com.atakmap.android.contact.Contact) -> a
    2538:2623:void plotISSLocation() -> k
    2627:2652:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    2656:2659:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    182:182:android.content.Context access$000(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> a
    182:182:boolean access$102(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,boolean) -> a
    182:182:void access$200(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,java.lang.String) -> a
    182:182:com.atakmap.android.routes.RouteMapReceiver access$300(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> b
    182:182:com.atakmap.android.helloworld.recyclerview.RecyclerViewDropDown access$400(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> c
    182:182:com.atakmap.android.helloworld.TabViewDropDown access$500(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> d
    182:182:com.atakmap.android.routes.Route access$602(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,com.atakmap.android.routes.Route) -> a
    182:182:com.atakmap.android.routes.Route access$600(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> e
    182:182:void access$700(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> f
    182:182:boolean access$100(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> g
    182:182:com.atakmap.comms.CotServiceRemote access$800(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> h
    182:182:com.atakmap.android.helloworld.CameraActivity$CameraDataReceiver access$900(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> i
    182:182:com.atakmap.android.helloworld.CameraActivity$CameraDataListener access$1000(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> j
    182:182:com.atakmap.android.helloworld.speechtotext.SpeechToActivity$SpeechDataReceiver access$1100(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> k
    182:182:com.atakmap.android.helloworld.speechtotext.SpeechToActivity$SpeechDataListener access$1200(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> l
    182:182:java.util.Timer access$1300(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> m
    182:182:java.util.Timer access$1302(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,java.util.Timer) -> a
    182:182:void access$1400(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> n
    182:182:com.atakmap.android.helloworld.samplelayer.ExampleLayer access$1500(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> o
    182:182:com.atakmap.android.helloworld.samplelayer.ExampleLayer access$1502(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,com.atakmap.android.helloworld.samplelayer.ExampleLayer) -> a
    182:182:java.util.Map access$1600(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> p
    182:182:com.atakmap.android.helloworld.RouteEventListener access$1700(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> q
    182:182:com.atakmap.android.helloworld.RouteEventListener access$1702(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,com.atakmap.android.helloworld.RouteEventListener) -> a
    182:182:android.view.View access$1800(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> r
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$1 -> com.atakmap.android.helloworld.e:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    217:217:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    219:221:void onCameraDataReceived(android.graphics.Bitmap) -> a
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$10 -> com.atakmap.android.helloworld.f:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    549:549:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    553:567:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$10$1 -> com.atakmap.android.helloworld.g:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver$10 this$1 -> a
    553:553:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver$10) -> <init>
    555:565:void run() -> run
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$11 -> com.atakmap.android.helloworld.h:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    580:580:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    583:585:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$12 -> com.atakmap.android.helloworld.i:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    590:590:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    593:594:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$13 -> com.atakmap.android.helloworld.j:
    com.atakmap.android.maps.MapView val$mapView -> a
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> b
    601:601:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,com.atakmap.android.maps.MapView) -> <init>
    604:629:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$13$1 -> com.atakmap.android.helloworld.k:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver$13 this$1 -> a
    619:619:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver$13) -> <init>
    624:625:void onClick(android.content.DialogInterface,int) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$14 -> com.atakmap.android.helloworld.l:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    637:637:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    640:645:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$15 -> com.atakmap.android.helloworld.m:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    650:650:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    653:655:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$16 -> com.atakmap.android.helloworld.n:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    660:660:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    663:665:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$17 -> com.atakmap.android.helloworld.o:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    673:673:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    676:705:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$18 -> com.atakmap.android.helloworld.p:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    709:709:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    712:741:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$19 -> com.atakmap.android.helloworld.q:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    746:746:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    749:764:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$19$1 -> com.atakmap.android.helloworld.r:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver$19 this$1 -> a
    757:757:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver$19) -> <init>
    760:761:void run() -> run
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$2 -> com.atakmap.android.helloworld.s:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    225:225:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    227:230:void onSpeechDataReceived(java.util.HashMap) -> a
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$20 -> com.atakmap.android.helloworld.t:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    769:769:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    772:774:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$21 -> com.atakmap.android.helloworld.u:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    779:779:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    782:784:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$22 -> com.atakmap.android.helloworld.v:
    com.atakmap.android.maps.MapView val$mapView -> a
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> b
    788:788:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,com.atakmap.android.maps.MapView) -> <init>
    792:818:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$23 -> com.atakmap.android.helloworld.w:
    com.atakmap.android.maps.MapView val$mapView -> a
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> b
    824:824:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,com.atakmap.android.maps.MapView) -> <init>
    828:860:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$24 -> com.atakmap.android.helloworld.x:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    865:865:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    868:869:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$25 -> com.atakmap.android.helloworld.y:
    com.atakmap.android.maps.MapView val$mapView -> a
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> b
    873:873:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,com.atakmap.android.maps.MapView) -> <init>
    876:919:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$26 -> com.atakmap.android.helloworld.z:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    924:924:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    927:933:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$26$1 -> com.atakmap.android.helloworld.aa:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver$26 this$1 -> a
    927:927:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver$26) -> <init>
    929:930:void run() -> run
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$27 -> com.atakmap.android.helloworld.ab:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    938:938:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    941:963:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$28 -> com.atakmap.android.helloworld.ac:
    com.atakmap.android.maps.MapView val$mapView -> a
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> b
    968:968:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,com.atakmap.android.maps.MapView) -> <init>
    972:998:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$29 -> com.atakmap.android.helloworld.ad:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1004:1004:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1008:1009:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$3 -> com.atakmap.android.helloworld.ae:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    240:240:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    246:302:void onSpeechDataReceived(android.os.Bundle) -> a
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$30 -> com.atakmap.android.helloworld.af:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1014:1014:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1017:1029:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$31 -> com.atakmap.android.helloworld.ag:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1034:1034:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1037:1078:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$32 -> com.atakmap.android.helloworld.ah:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1083:1083:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1086:1089:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$33 -> com.atakmap.android.helloworld.ai:
    android.widget.Button val$itemInspect -> a
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> b
    1094:1094:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,android.widget.Button) -> <init>
    1097:1111:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$34 -> com.atakmap.android.helloworld.aj:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1116:1116:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1119:1129:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$35 -> com.atakmap.android.helloworld.ak:
    android.widget.Button val$bumpControl -> a
    android.content.Context val$context -> b
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> c
    1134:1134:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,android.widget.Button,android.content.Context) -> <init>
    1137:1154:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$36 -> com.atakmap.android.helloworld.al:
    android.app.Activity val$parentActivity -> a
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> b
    1180:1180:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,android.app.Activity) -> <init>
    1183:1195:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$37 -> com.atakmap.android.helloworld.am:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1200:1200:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1203:1243:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$37$1 -> com.atakmap.android.helloworld.an:
    com.atakmap.android.maps.Marker val$m -> a
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver$37 this$1 -> b
    1230:1230:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver$37,com.atakmap.android.maps.Marker) -> <init>
    1233:1239:void run() -> run
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$38 -> com.atakmap.android.helloworld.ao:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1248:1248:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1251:1261:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$39 -> com.atakmap.android.helloworld.ap:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1267:1267:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1270:1278:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$4 -> com.atakmap.android.helloworld.aq:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    308:308:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    311:313:void onCotServiceConnected(android.os.Bundle) -> onCotServiceConnected
    317:319:void onCotServiceDisconnected() -> onCotServiceDisconnected
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$40 -> com.atakmap.android.helloworld.ar:
    android.widget.Button val$issLocation -> a
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> b
    1283:1283:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,android.widget.Button) -> <init>
    1286:1304:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$40$1 -> com.atakmap.android.helloworld.as:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver$40 this$1 -> a
    1295:1295:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver$40) -> <init>
    1299:1300:void run() -> run
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$41 -> com.atakmap.android.helloworld.at:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1320:1320:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1323:1324:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$42 -> com.atakmap.android.helloworld.au:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1337:1337:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1340:1360:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$43 -> com.atakmap.android.helloworld.av:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1365:1365:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1368:1375:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$44 -> com.atakmap.android.helloworld.aw:
    com.atakmap.android.tools.menu.ActionMenuData val$amd -> a
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> b
    1396:1396:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,com.atakmap.android.tools.menu.ActionMenuData) -> <init>
    1399:1413:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$45 -> com.atakmap.android.helloworld.ax:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1417:1417:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1420:1422:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$46 -> com.atakmap.android.helloworld.ay:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1428:1428:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1431:1448:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$47 -> com.atakmap.android.helloworld.az:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1453:1453:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1456:1463:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$48 -> com.atakmap.android.helloworld.ba:
    android.widget.Button val$addLayer -> a
    com.atakmap.android.maps.MapView val$mapView -> b
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> c
    1468:1468:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,android.widget.Button,com.atakmap.android.maps.MapView) -> <init>
    1471:1522:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$49 -> com.atakmap.android.helloworld.bb:
    android.widget.Button val$addMultiLayer -> a
    com.atakmap.android.maps.MapView val$mapView -> b
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> c
    1528:1528:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,android.widget.Button,com.atakmap.android.maps.MapView) -> <init>
    1531:1589:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$5 -> com.atakmap.android.helloworld.bc:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    324:324:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    327:328:void onCotOutputRemoved(android.os.Bundle) -> onCotOutputRemoved
    332:342:void onCotOutputUpdated(android.os.Bundle) -> onCotOutputUpdated
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$50 -> com.atakmap.android.helloworld.bd:
    android.widget.Button val$btnHookNavigationEvents -> a
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> b
    1616:1616:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,android.widget.Button) -> <init>
    1619:1650:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$51 -> com.atakmap.android.helloworld.be:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1655:1655:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1658:1702:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$51$1 -> com.atakmap.android.helloworld.bf:
    com.atakmap.android.gui.CoordDialogView val$coordView -> a
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver$51 this$1 -> b
    1669:1669:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver$51,com.atakmap.android.gui.CoordDialogView) -> <init>
    1673:1680:void onClick(android.content.DialogInterface,int) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$52 -> com.atakmap.android.helloworld.bg:
    android.widget.Button val$getimage -> a
    com.atakmap.android.helloworld.OffscreenMapCapture val$mc -> b
    android.widget.LinearLayout val$secondRender -> c
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> d
    1711:1711:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,android.widget.Button,com.atakmap.android.helloworld.OffscreenMapCapture,android.widget.LinearLayout) -> <init>
    1714:1722:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$53 -> com.atakmap.android.helloworld.bh:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1800:1800:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1803:1857:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$53$1 -> com.atakmap.android.helloworld.bi:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver$53 this$1 -> a
    1836:1836:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver$53) -> <init>
    1841:1847:boolean onLongClick(android.view.View) -> onLongClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$54 -> com.atakmap.android.helloworld.bj:
    com.atakmap.android.maps.Ellipse val$_accuracyEllipse -> a
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> b
    1919:1919:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,com.atakmap.android.maps.Ellipse) -> <init>
    1922:1924:void onPointChanged(com.atakmap.android.maps.PointMapItem) -> onPointChanged
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$55 -> com.atakmap.android.helloworld.bk:
    com.atakmap.android.maps.Marker val$marker -> a
    com.atakmap.android.maps.Ellipse val$_accuracyEllipse -> b
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> c
    1928:1928:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,com.atakmap.android.maps.Marker,com.atakmap.android.maps.Ellipse) -> <init>
    1930:1936:void onMapEvent(com.atakmap.android.maps.MapEvent) -> onMapEvent
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$56 -> com.atakmap.android.helloworld.bl:
    com.atakmap.android.util.Circle val$_accuracyCircle -> a
    com.atakmap.android.maps.Marker val$marker -> b
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> c
    1956:1956:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,com.atakmap.android.util.Circle,com.atakmap.android.maps.Marker) -> <init>
    1959:1961:void onPointChanged(com.atakmap.android.maps.PointMapItem) -> onPointChanged
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$57 -> com.atakmap.android.helloworld.bm:
    com.atakmap.android.maps.Marker val$marker -> a
    com.atakmap.android.util.Circle val$_accuracyCircle -> b
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> c
    1965:1965:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,com.atakmap.android.maps.Marker,com.atakmap.android.util.Circle) -> <init>
    1967:1973:void onMapEvent(com.atakmap.android.maps.MapEvent) -> onMapEvent
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$58 -> com.atakmap.android.helloworld.bn:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    2195:2195:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    2198:2200:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$59 -> com.atakmap.android.helloworld.bo:
    com.atakmap.coremap.maps.coords.GeoPoint val$mgrsPoint -> a
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> b
    2247:2247:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,com.atakmap.coremap.maps.coords.GeoPoint) -> <init>
    2249:2257:void run() -> run
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$6 -> com.atakmap.android.helloworld.bp:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    360:360:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,android.content.Context,java.lang.String,com.atakmap.comms.CotServiceRemote$CotEventListener) -> <init>
    363:364:void onCotOutputRemoved(android.os.Bundle) -> onCotOutputRemoved
    369:370:void enabled(com.atakmap.comms.app.CotPortListActivity$CotPort,boolean) -> enabled
    375:376:void connected(com.atakmap.comms.app.CotPortListActivity$CotPort,boolean) -> connected
    380:381:void onCotOutputUpdated(android.os.Bundle) -> onCotOutputUpdated
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$7 -> com.atakmap.android.helloworld.bq:
    android.content.Context val$context -> a
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> b
    397:397:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver,android.content.Context) -> <init>
    401:516:boolean onLongClick(android.view.View) -> onLongClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$8 -> com.atakmap.android.helloworld.br:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    524:524:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    528:529:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$9 -> com.atakmap.android.helloworld.bs:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    536:536:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    540:541:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldDropDownReceiver$InspectionMapItemSelectionTool -> com.atakmap.android.helloworld.d$a:
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver this$0 -> a
    1785:1790:void <init>(com.atakmap.android.helloworld.HelloWorldDropDownReceiver) -> <init>
    1794:1794:boolean isItem(com.atakmap.android.maps.MapItem) -> isItem
com.atakmap.android.helloworld.HelloWorldMapComponent -> com.atakmap.android.helloworld.bt:
    java.lang.String TAG -> a
    android.content.Context pluginContext -> b
    com.atakmap.android.helloworld.HelloWorldDropDownReceiver dropDown -> c
    com.atakmap.android.helloworld.WebViewDropDownReceiver wvdropDown -> d
    com.atakmap.android.helloworld.HelloWorldMapOverlay mapOverlay -> e
    android.view.View genericRadio -> f
    com.atakmap.android.helloworld.HelloWorldMapComponent$JoystickView _joystickView -> g
    com.atakmap.android.helloworld.SpecialDetailHandler sdh -> h
    com.atakmap.android.cot.detail.CotDetailHandler aaaDetailHandler -> i
    com.atakmap.android.contact.ContactLocationView$ExtendedSelfInfoFactory extendedselfinfo -> j
    com.atakmap.android.user.geocode.GeocodeManager$Geocoder fakeGeoCoder -> k
    com.atakmap.android.helloworld.HelloWorldMapComponent$SpiListener spiListener -> l
    92:461:void <init>() -> <init>
    134:135:void onStart(android.content.Context,com.atakmap.android.maps.MapView) -> onStart
    139:140:void onPause(android.content.Context,com.atakmap.android.maps.MapView) -> onPause
    145:146:void onResume(android.content.Context,com.atakmap.android.maps.MapView) -> onResume
    151:152:void onStop(android.content.Context,com.atakmap.android.maps.MapView) -> onStop
    161:185:void importFileExample(java.io.File) -> a
    195:459:void onCreate(android.content.Context,android.content.Intent,com.atakmap.android.maps.MapView) -> onCreate
    508:521:void registerSpisVisibilityListener(com.atakmap.android.maps.MapView) -> a
    562:583:void onDestroyImpl(android.content.Context,com.atakmap.android.maps.MapView) -> onDestroyImpl
    586:622:java.lang.String BuildExternalMunitionsQuery() -> a
    92:92:java.lang.String access$000(com.atakmap.android.helloworld.HelloWorldMapComponent) -> a
com.atakmap.android.helloworld.HelloWorldMapComponent$1 -> com.atakmap.android.helloworld.bu:
    java.lang.String TAG -> b
    com.atakmap.android.helloworld.HelloWorldMapComponent this$0 -> a
    213:214:void <init>(com.atakmap.android.helloworld.HelloWorldMapComponent,java.lang.String) -> <init>
    218:219:com.atakmap.comms.CommsMapComponent$ImportResult toItemMetadata(com.atakmap.android.maps.MapItem,com.atakmap.coremap.cot.event.CotEvent,com.atakmap.coremap.cot.event.CotDetail) -> toItemMetadata
    224:225:boolean toCotDetail(com.atakmap.android.maps.MapItem,com.atakmap.coremap.cot.event.CotEvent,com.atakmap.coremap.cot.event.CotDetail) -> toCotDetail
com.atakmap.android.helloworld.HelloWorldMapComponent$2 -> com.atakmap.android.helloworld.bv:
    com.atakmap.android.helloworld.HelloWorldMapComponent this$0 -> a
    294:294:void <init>(com.atakmap.android.helloworld.HelloWorldMapComponent) -> <init>
    297:300:void injectIntoDetail(com.atakmap.android.maps.Marker,com.atakmap.coremap.cot.event.CotDetail) -> injectIntoDetail
    304:309:void injectIntoMarker(com.atakmap.coremap.cot.event.CotDetail,com.atakmap.android.maps.Marker) -> injectIntoMarker
com.atakmap.android.helloworld.HelloWorldMapComponent$3 -> com.atakmap.android.helloworld.bw:
    com.atakmap.android.helloworld.HelloWorldMapComponent this$0 -> a
    322:322:void <init>(com.atakmap.android.helloworld.HelloWorldMapComponent) -> <init>
    325:325:java.lang.String queryMunitions() -> queryMunitions
com.atakmap.android.helloworld.HelloWorldMapComponent$4 -> com.atakmap.android.helloworld.bx:
    com.atakmap.android.maps.MapView val$view -> a
    com.atakmap.android.helloworld.HelloWorldMapComponent this$0 -> b
    353:353:void <init>(com.atakmap.android.helloworld.HelloWorldMapComponent,com.atakmap.android.maps.MapView) -> <init>
    356:356:com.atakmap.android.cotdetails.ExtendedInfoView createView() -> createView
com.atakmap.android.helloworld.HelloWorldMapComponent$4$1 -> com.atakmap.android.helloworld.by:
    com.atakmap.android.helloworld.HelloWorldMapComponent$4 this$1 -> a
    356:356:void <init>(com.atakmap.android.helloworld.HelloWorldMapComponent$4,android.content.Context) -> <init>
    359:365:void setMarker(com.atakmap.android.maps.PointMapItem) -> setMarker
com.atakmap.android.helloworld.HelloWorldMapComponent$5 -> com.atakmap.android.helloworld.bz:
    com.atakmap.android.helloworld.HelloWorldMapComponent this$0 -> a
    403:403:void <init>(com.atakmap.android.helloworld.HelloWorldMapComponent) -> <init>
    406:407:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.atakmap.android.helloworld.HelloWorldMapComponent$6 -> com.atakmap.android.helloworld.ca:
    com.atakmap.android.helloworld.HelloWorldMapComponent this$0 -> a
    425:425:void <init>(com.atakmap.android.helloworld.HelloWorldMapComponent) -> <init>
    427:428:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldMapComponent$7 -> com.atakmap.android.helloworld.cb:
    com.atakmap.android.helloworld.HelloWorldMapComponent this$0 -> a
    443:443:void <init>(com.atakmap.android.helloworld.HelloWorldMapComponent) -> <init>
    447:447:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.atakmap.android.helloworld.HelloWorldMapComponent$8 -> com.atakmap.android.helloworld.cc:
    com.atakmap.android.helloworld.HelloWorldMapComponent this$0 -> a
    461:461:void <init>(com.atakmap.android.helloworld.HelloWorldMapComponent) -> <init>
    464:464:java.lang.String getUniqueIdentifier() -> getUniqueIdentifier
    469:469:java.lang.String getTitle() -> getTitle
    474:474:java.lang.String getDescription() -> getDescription
    479:479:boolean testServiceAvailable() -> testServiceAvailable
    484:491:java.util.List getLocation(com.atakmap.coremap.maps.coords.GeoPoint) -> getLocation
    496:503:java.util.List getLocation(java.lang.String,com.atakmap.coremap.maps.coords.GeoBounds) -> getLocation
com.atakmap.android.helloworld.HelloWorldMapComponent$JoystickView -> com.atakmap.android.helloworld.bt$a:
    com.atakmap.android.helloworld.HelloWorldMapComponent this$0 -> a
    109:111:void <init>(com.atakmap.android.helloworld.HelloWorldMapComponent,android.content.Context,android.util.AttributeSet) -> <init>
    115:116:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    121:122:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    127:128:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.atakmap.android.helloworld.HelloWorldMapComponent$SpiListener -> com.atakmap.android.helloworld.bt$b:
    com.atakmap.android.maps.MapView view -> b
    com.atakmap.android.helloworld.HelloWorldMapComponent this$0 -> a
    529:531:void <init>(com.atakmap.android.helloworld.HelloWorldMapComponent,com.atakmap.android.maps.MapView) -> <init>
    535:550:void onMapEvent(com.atakmap.android.maps.MapEvent) -> onMapEvent
    554:556:void onVisibleChanged(com.atakmap.android.maps.MapItem) -> onVisibleChanged
com.atakmap.android.helloworld.HelloWorldMapOverlay -> com.atakmap.android.helloworld.cd:
    java.lang.String TAG -> a
    com.atakmap.android.maps.MapView _mapView -> b
    android.content.Context _plugin -> c
    com.atakmap.android.helloworld.HelloWorldMapOverlay$HelloWorldDeepMapItemQuery _query -> d
    com.atakmap.android.maps.DefaultMapGroup _group -> e
    com.atakmap.android.helloworld.HelloWorldMapOverlay$HelloWorldListModel _listModel -> f
    60:66:void <init>(com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    70:70:java.lang.String getIdentifier() -> getIdentifier
    75:75:java.lang.String getName() -> getName
    80:80:com.atakmap.android.maps.MapGroup getRootGroup() -> getRootGroup
    85:85:com.atakmap.android.maps.DeepMapItemQuery getQueryFunction() -> getQueryFunction
    91:94:com.atakmap.android.hierarchy.HierarchyListItem getListModel(android.widget.BaseAdapter,long,com.atakmap.android.hierarchy.HierarchyListFilter) -> getListModel
    98:110:java.util.List getLayers() -> a
    114:118:com.atakmap.android.helloworld.samplelayer.ExampleLayer findLayer(java.lang.String) -> a
    122:134:java.util.List getMultiLayers() -> b
    138:142:com.atakmap.android.helloworld.samplelayer.ExampleMultiLayer findMultiLayer(java.lang.String) -> b
    49:49:android.content.Context access$100(com.atakmap.android.helloworld.HelloWorldMapOverlay) -> a
    49:49:com.atakmap.android.maps.MapView access$200(com.atakmap.android.helloworld.HelloWorldMapOverlay) -> b
    49:49:java.util.List access$300(com.atakmap.android.helloworld.HelloWorldMapOverlay) -> c
    49:49:java.util.List access$400(com.atakmap.android.helloworld.HelloWorldMapOverlay) -> d
com.atakmap.android.helloworld.HelloWorldMapOverlay$1 -> com.atakmap.android.helloworld.ce:
com.atakmap.android.helloworld.HelloWorldMapOverlay$HelloWorldDeepMapItemQuery -> com.atakmap.android.helloworld.cd$a:
    com.atakmap.android.helloworld.HelloWorldMapOverlay this$0 -> a
    409:409:void <init>(com.atakmap.android.helloworld.HelloWorldMapOverlay) -> <init>
    413:413:com.atakmap.android.maps.MapItem deepFindItem(java.util.Map) -> deepFindItem
    418:418:java.util.List deepFindItems(java.util.Map) -> deepFindItems
    424:424:com.atakmap.android.maps.MapItem deepFindClosestItem(com.atakmap.coremap.maps.coords.GeoPoint,double,java.util.Map) -> deepFindClosestItem
    430:430:java.util.Collection deepFindItems(com.atakmap.coremap.maps.coords.GeoPoint,double,java.util.Map) -> deepFindItems
    436:444:com.atakmap.android.maps.MapItem deepHitTest(int,int,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.android.maps.MapView) -> deepHitTest
    450:460:java.util.SortedSet deepHitTestItems(int,int,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.android.maps.MapView) -> deepHitTestItems
    466:476:java.util.Collection deepFindItems(com.atakmap.coremap.maps.coords.GeoBounds,java.util.Map) -> deepFindItems
    409:409:void <init>(com.atakmap.android.helloworld.HelloWorldMapOverlay,com.atakmap.android.helloworld.HelloWorldMapOverlay$1) -> <init>
com.atakmap.android.helloworld.HelloWorldMapOverlay$HelloWorldListModel -> com.atakmap.android.helloworld.cd$b:
    java.lang.String TAG -> b
    android.view.View _header -> c
    android.view.View _footer -> d
    com.atakmap.android.helloworld.HelloWorldMapOverlay this$0 -> a
    152:154:void <init>(com.atakmap.android.helloworld.HelloWorldMapOverlay) -> <init>
    158:158:java.lang.String getTitle() -> getTitle
    163:163:java.lang.String getIconUri() -> getIconUri
    168:168:int getPreferredListIndex() -> getPreferredListIndex
    173:173:int getDescendantCount() -> getDescendantCount
    178:178:java.lang.Object getUserObject() -> getUserObject
    183:183:android.view.View getExtraView() -> getExtraView
    188:194:android.view.View getHeaderView() -> getHeaderView
    199:205:android.view.View getFooterView() -> getFooterView
    210:229:void refreshImpl() -> refreshImpl
    233:234:void dispose() -> dispose
    238:238:boolean hideIfEmpty() -> hideIfEmpty
    243:243:boolean isMultiSelectSupported() -> isMultiSelectSupported
    248:252:boolean setVisible(boolean) -> setVisible
    257:264:java.util.Set find(java.lang.String) -> find
    269:273:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.HelloWorldMapOverlay$LayerHierarchyListItem -> com.atakmap.android.helloworld.cd$c:
    com.atakmap.android.helloworld.samplelayer.ExampleLayer _layer -> b
    com.atakmap.android.helloworld.samplelayer.ExampleMultiLayer _multilayer -> c
    com.atakmap.android.helloworld.HelloWorldMapOverlay this$0 -> a
    282:285:void <init>(com.atakmap.android.helloworld.HelloWorldMapOverlay,com.atakmap.android.helloworld.samplelayer.ExampleLayer) -> <init>
    286:289:void <init>(com.atakmap.android.helloworld.HelloWorldMapOverlay,com.atakmap.android.helloworld.samplelayer.ExampleMultiLayer) -> <init>
    293:299:java.lang.String getTitle() -> getTitle
    304:304:java.lang.String getDescription() -> getDescription
    309:310:java.lang.String getIconUri() -> getIconUri
    316:322:java.lang.Object getUserObject() -> getUserObject
    327:327:boolean isChildSupported() -> isChildSupported
    332:332:int getDescendantCount() -> getDescendantCount
    337:337:void refreshImpl() -> refreshImpl
    341:341:boolean hideIfEmpty() -> hideIfEmpty
    346:358:boolean setVisible(boolean) -> setVisible
    363:369:boolean isVisible() -> isVisible
    374:380:com.atakmap.android.maps.MapItem getMapItem() -> getMapItem
    385:405:boolean goTo(boolean) -> goTo
com.atakmap.android.helloworld.HelloWorldPreferenceFragment -> com.atakmap.android.helloworld.cf:
    android.content.Context staticPluginContext -> b
    java.lang.String TAG -> a
    29:30:void <init>() -> <init>
    34:36:void <init>(android.content.Context) -> <init>
    40:81:void onCreate(android.os.Bundle) -> onCreate
    85:85:java.lang.String getSubTitle() -> getSubTitle
    19:19:android.content.Context access$000() -> a
    19:19:void access$100(com.atakmap.android.helloworld.HelloWorldPreferenceFragment,android.preference.PreferenceFragment) -> a
com.atakmap.android.helloworld.HelloWorldPreferenceFragment$1 -> com.atakmap.android.helloworld.cg:
    com.atakmap.android.helloworld.HelloWorldPreferenceFragment this$0 -> a
    47:47:void <init>(com.atakmap.android.helloworld.HelloWorldPreferenceFragment) -> <init>
    50:68:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.atakmap.android.helloworld.HelloWorldPreferenceFragment$1$1 -> com.atakmap.android.helloworld.ch:
    com.atakmap.android.helloworld.HelloWorldPreferenceFragment$1 this$1 -> a
    55:55:void <init>(com.atakmap.android.helloworld.HelloWorldPreferenceFragment$1) -> <init>
    58:61:void onFileSelected(java.io.File) -> onFileSelected
    65:65:void onDialogClosed() -> onDialogClosed
com.atakmap.android.helloworld.HelloWorldPreferenceFragment$2 -> com.atakmap.android.helloworld.ci:
    com.atakmap.android.helloworld.HelloWorldPreferenceFragment this$0 -> a
    74:74:void <init>(com.atakmap.android.helloworld.HelloWorldPreferenceFragment) -> <init>
    77:78:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.atakmap.android.helloworld.HelloWorldSubPreferenceFragment -> com.atakmap.android.helloworld.cj:
    android.content.Context staticPluginContext -> b
    java.lang.String TAG -> a
    20:21:void <init>() -> <init>
    25:27:void <init>(android.content.Context) -> <init>
    31:31:java.lang.String getSubTitle() -> getSubTitle
com.atakmap.android.helloworld.HelloWorldWidget -> com.atakmap.android.helloworld.ck:
    com.atakmap.android.maps.MapView mapView -> c
    int ICON_WIDTH -> d
    int ICON_HEIGHT -> e
    java.lang.String TAG -> a
    com.atakmap.android.widgets.MarkerIconWidget widget -> b
    android.content.BroadcastReceiver wacky -> f
    android.graphics.PointF pointDown -> g
    boolean dragging -> h
    24:86:void <init>() -> <init>
    37:44:void onCreateWidgets(android.content.Context,android.content.Intent,com.atakmap.android.maps.MapView) -> onCreateWidgets
    92:100:boolean onMapWidgetMove(com.atakmap.android.widgets.MapWidget,android.view.MotionEvent) -> onMapWidgetMove
    105:123:void onMapWidgetClick(com.atakmap.android.widgets.MapWidget,android.view.MotionEvent) -> onMapWidgetClick
    127:128:void onMapWidgetUnpress(com.atakmap.android.widgets.MapWidget,android.view.MotionEvent) -> onMapWidgetUnpress
    135:138:void onMapWidgetPress(com.atakmap.android.widgets.MapWidget,android.view.MotionEvent) -> onMapWidgetPress
    142:145:void onDestroyWidgets(android.content.Context,com.atakmap.android.maps.MapView) -> onDestroyWidgets
    150:150:void onStart(android.content.Context,com.atakmap.android.maps.MapView) -> onStart
    155:155:void onStop(android.content.Context,com.atakmap.android.maps.MapView) -> onStop
    159:159:void onPause(android.content.Context,com.atakmap.android.maps.MapView) -> onPause
    165:165:void onResume(android.content.Context,com.atakmap.android.maps.MapView) -> onResume
    24:24:com.atakmap.android.maps.MapView access$000(com.atakmap.android.helloworld.HelloWorldWidget) -> a
com.atakmap.android.helloworld.HelloWorldWidget$1 -> com.atakmap.android.helloworld.cl:
    com.atakmap.android.helloworld.HelloWorldWidget this$0 -> a
    48:48:void <init>(com.atakmap.android.helloworld.HelloWorldWidget) -> <init>
    51:83:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.atakmap.android.helloworld.HelloWorldWidget$2 -> com.atakmap.android.helloworld.cm:
    com.atakmap.android.helloworld.HelloWorldWidget this$0 -> a
    114:114:void <init>(com.atakmap.android.helloworld.HelloWorldWidget) -> <init>
    118:119:void onClick(android.content.DialogInterface,int) -> onClick
com.atakmap.android.helloworld.OffscreenMapCapture -> com.atakmap.android.helloworld.cn:
    float[] squareVertices -> a
    android.opengl.GLSurfaceView glView -> b
    int[] prevFrameBuffer -> c
    int[] colorRenderBuffer -> d
    int[] textureFrameBuffer -> e
    int[] textures -> f
    boolean isGettingAndSettingImages -> g
    java.nio.FloatBuffer imageVertexBuffer -> h
    com.atakmap.android.helloworld.OffscreenMapCapture$GLES20Renderer renderer -> i
    java.lang.Runnable stopGettingAndSettingImage -> j
    java.lang.Runnable getAndSetImage -> k
    java.lang.Thread offscreenRefreshThread -> l
    boolean refreshQueued -> m
    android.graphics.Bitmap img -> n
    int prog -> o
    int COORDS_PER_VERTEX -> p
    int vertexStride -> q
    27:361:void <init>(android.widget.LinearLayout) -> <init>
    364:406:void capture(boolean) -> a
    409:416:int _nextPowerOf2(int) -> b
    25:25:int access$000(int) -> a
com.atakmap.android.helloworld.OffscreenMapCapture$1 -> com.atakmap.android.helloworld.co:
    com.atakmap.android.helloworld.OffscreenMapCapture this$0 -> a
    44:44:void <init>(com.atakmap.android.helloworld.OffscreenMapCapture) -> <init>
    46:53:void run() -> run
com.atakmap.android.helloworld.OffscreenMapCapture$2 -> com.atakmap.android.helloworld.cp:
    com.atakmap.android.helloworld.OffscreenMapCapture this$0 -> a
    56:56:void <init>(com.atakmap.android.helloworld.OffscreenMapCapture) -> <init>
    59:70:boolean glFlushErrors(java.lang.String,boolean) -> a
    74:141:boolean initializeFBO(int,int) -> a
    145:189:void run() -> run
com.atakmap.android.helloworld.OffscreenMapCapture$3 -> com.atakmap.android.helloworld.cq:
    javax.microedition.khronos.egl.EGLContext[] val$shared_ctx -> a
    com.atakmap.android.helloworld.OffscreenMapCapture this$0 -> b
    308:308:void <init>(com.atakmap.android.helloworld.OffscreenMapCapture,javax.microedition.khronos.egl.EGLContext[]) -> <init>
    310:315:void run() -> run
com.atakmap.android.helloworld.OffscreenMapCapture$4 -> com.atakmap.android.helloworld.cr:
    javax.microedition.khronos.egl.EGLContext[] val$shared_ctx -> a
    com.atakmap.android.helloworld.OffscreenMapCapture this$0 -> b
    331:331:void <init>(com.atakmap.android.helloworld.OffscreenMapCapture,javax.microedition.khronos.egl.EGLContext[]) -> <init>
    335:336:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
    341:347:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
com.atakmap.android.helloworld.OffscreenMapCapture$5 -> com.atakmap.android.helloworld.cs:
    com.atakmap.android.helloworld.OffscreenMapCapture this$0 -> a
    373:373:void <init>(com.atakmap.android.helloworld.OffscreenMapCapture) -> <init>
    376:396:void run() -> run
com.atakmap.android.helloworld.OffscreenMapCapture$GLES20Renderer -> com.atakmap.android.helloworld.cn$a:
    com.atakmap.android.helloworld.OffscreenMapCapture this$0 -> a
    199:199:void <init>(com.atakmap.android.helloworld.OffscreenMapCapture) -> <init>
    205:205:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    209:209:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    213:301:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
com.atakmap.android.helloworld.PluginIconPallet -> com.atakmap.android.helloworld.ct:
    androidx.fragment.app.Fragment fragment -> b
    android.content.Context pContext -> a
    23:26:void <init>(android.content.Context) -> <init>
    30:30:java.lang.String getTitle() -> getTitle
    35:35:java.lang.String getUid() -> getUid
    40:40:androidx.fragment.app.Fragment getFragment() -> getFragment
    45:45:java.lang.String toString() -> toString
    56:56:com.atakmap.android.maps.MapItem getPointPlacedIntent(com.atakmap.coremap.maps.coords.GeoPointMetaData,java.lang.String) -> getPointPlacedIntent
    61:61:void select(int) -> select
    67:67:void clearSelection(boolean) -> clearSelection
    73:73:void refresh() -> refresh
    21:21:void <clinit>() -> <clinit>
com.atakmap.android.helloworld.PluginIconPallet$FooFragment -> com.atakmap.android.helloworld.ct$a:
    75:75:void <init>() -> <init>
    83:85:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    94:94:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
com.atakmap.android.helloworld.RouteEventListener -> com.atakmap.android.helloworld.cu:
    17:17:void <init>() -> <init>
    28:28:void onNavigationStarting(com.atakmap.android.routes.RouteNavigator) -> onNavigationStarting
    32:34:void onNavigationStarted(com.atakmap.android.routes.RouteNavigator,com.atakmap.android.routes.Route) -> onNavigationStarted
    38:39:void onNavigationStopping(com.atakmap.android.routes.RouteNavigator,com.atakmap.android.routes.Route) -> onNavigationStopping
    43:44:void onNavigationStopped(com.atakmap.android.routes.RouteNavigator) -> onNavigationStopped
    52:52:void onGpsStatusChanged(com.atakmap.android.routes.RouteNavigationManager,boolean) -> onGpsStatusChanged
    57:60:void onLocationChanged(com.atakmap.android.routes.RouteNavigationManager,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint) -> onLocationChanged
    66:67:void onNavigationObjectiveChanged(com.atakmap.android.routes.RouteNavigationManager,com.atakmap.android.maps.PointMapItem,boolean) -> onNavigationObjectiveChanged
    71:72:void onOffRoute(com.atakmap.android.routes.RouteNavigationManager) -> onOffRoute
    77:78:void onReturnedToRoute(com.atakmap.android.routes.RouteNavigationManager) -> onReturnedToRoute
    83:84:void onTriggerEntered(com.atakmap.android.routes.RouteNavigationManager,com.atakmap.android.maps.PointMapItem,int) -> onTriggerEntered
    89:90:void onArrivedAtPoint(com.atakmap.android.routes.RouteNavigationManager,com.atakmap.android.maps.PointMapItem) -> onArrivedAtPoint
    95:96:void onDepartedPoint(com.atakmap.android.routes.RouteNavigationManager,com.atakmap.android.maps.PointMapItem) -> onDepartedPoint
    103:111:void showToast(java.lang.String) -> a
com.atakmap.android.helloworld.RouteEventListener$1 -> com.atakmap.android.helloworld.cv:
    java.lang.String val$msg -> a
    com.atakmap.android.helloworld.RouteEventListener this$0 -> b
    103:103:void <init>(com.atakmap.android.helloworld.RouteEventListener,java.lang.String) -> <init>
    106:108:void run() -> run
com.atakmap.android.helloworld.ShaderInfo -> com.atakmap.android.helloworld.cw:
    java.lang.String imageVertexShaderString -> a
    java.lang.String imageFragmentShaderString -> b
    8:8:void <init>() -> <init>
    40:56:int loadShader(int,java.lang.String) -> a
    60:78:int loadImageShader() -> a
com.atakmap.android.helloworld.SpecialDetail -> com.atakmap.android.helloworld.cx:
    java.lang.String TAG -> a
    android.content.Context pluginContext -> b
    18:24:void <init>(com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    28:45:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    48:55:com.atakmap.android.maps.PointMapItem findTarget(java.lang.String) -> a
    60:62:boolean onBackButtonPressed() -> onBackButtonPressed
    69:70:void onDropDownSelectionRemoved() -> onDropDownSelectionRemoved
    74:75:void onDropDownVisible(boolean) -> onDropDownVisible
    79:80:void onDropDownSizeChanged(double,double) -> onDropDownSizeChanged
    84:85:void onDropDownClose() -> onDropDownClose
    88:89:void disposeImpl() -> disposeImpl
com.atakmap.android.helloworld.SpecialDetailHandler -> com.atakmap.android.helloworld.cy:
    java.lang.String TAG -> a
    10:10:void <init>() -> <init>
    15:20:void toCotDetail(com.atakmap.android.maps.Marker,com.atakmap.coremap.cot.event.CotDetail) -> toCotDetail
    25:28:void toMarkerMetadata(com.atakmap.android.maps.Marker,com.atakmap.coremap.cot.event.CotEvent,com.atakmap.coremap.cot.event.CotDetail) -> toMarkerMetadata
    32:34:int getInt(java.lang.String,int) -> a
com.atakmap.android.helloworld.SpeechToTextActivity -> com.atakmap.android.helloworld.cz:
    int NORTHING_INTENT -> a
    int EASTING_INTENT -> b
    int SQUAREID_INTENT -> c
    int ALPHA_GRID_INTENT -> d
    int NUMERIC_GRID_INTENT -> e
    int MARKER_TYPE_INTENT -> f
    int NO_INTENT -> g
    int NORTHING_LENGTH -> h
    int EASTING_LENGTH -> i
    int SQUAREID_LENGTH -> j
    int ALPHA_GRID_LENGTH -> k
    int NUMERIC_GRID_LENGTH -> l
    int MARKER_LENGTH -> m
    int REQ_CODE_SPEECH_INPUT -> n
    java.lang.String SPEECH_INFO -> o
    java.lang.String ALPHA_VALIDATOR -> p
    java.lang.String DIGIT_VALIDATOR -> q
    java.lang.String MARKER_VALIDATOR -> r
    java.util.HashMap mgrsData -> s
    android.widget.TextView txtSpeechInput -> t
    android.widget.TextView txtNorthing -> u
    android.widget.TextView txtEasting -> v
    android.widget.TextView txtSquareID -> w
    android.widget.TextView txtNumericGrid -> x
    android.widget.TextView txtAlphaGrid -> y
    android.widget.TextView txtMarkerType -> z
    android.widget.TextView txtMarker -> A
    int nextIntent -> B
    int currentIntent -> C
    boolean fullRun -> D
    android.widget.Button btnMGRS -> E
    android.widget.Button btnDropMarker -> F
    24:44:void <init>() -> <init>
    61:154:void onCreate(android.os.Bundle) -> onCreate
    158:162:void promptMarkerType() -> a
    165:172:void promptNorthing() -> b
    175:182:void promptEasting() -> c
    185:192:void promptSquareId() -> d
    195:202:void promptAlphaGridZone() -> e
    205:212:void promptNumericGridZone() -> f
    218:231:void promptSpeechInput(java.lang.String) -> a
    239:276:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    280:292:java.util.ArrayList speechVerifyLength(java.util.ArrayList,int) -> a
    299:344:void dataChecker(java.util.ArrayList) -> a
    352:405:java.lang.String dataValidator(java.util.ArrayList,java.lang.String) -> a
    412:429:void createMarker() -> g
    24:24:boolean access$002(com.atakmap.android.helloworld.SpeechToTextActivity,boolean) -> a
com.atakmap.android.helloworld.SpeechToTextActivity$1 -> com.atakmap.android.helloworld.da:
    com.atakmap.android.helloworld.SpeechToTextActivity this$0 -> a
    78:78:void <init>(com.atakmap.android.helloworld.SpeechToTextActivity) -> <init>
    83:86:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.SpeechToTextActivity$2 -> com.atakmap.android.helloworld.db:
    com.atakmap.android.helloworld.SpeechToTextActivity this$0 -> a
    89:89:void <init>(com.atakmap.android.helloworld.SpeechToTextActivity) -> <init>
    93:94:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.SpeechToTextActivity$3 -> com.atakmap.android.helloworld.dc:
    com.atakmap.android.helloworld.SpeechToTextActivity this$0 -> a
    96:96:void <init>(com.atakmap.android.helloworld.SpeechToTextActivity) -> <init>
    100:101:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.SpeechToTextActivity$4 -> com.atakmap.android.helloworld.dd:
    com.atakmap.android.helloworld.SpeechToTextActivity this$0 -> a
    104:104:void <init>(com.atakmap.android.helloworld.SpeechToTextActivity) -> <init>
    108:110:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.SpeechToTextActivity$5 -> com.atakmap.android.helloworld.de:
    com.atakmap.android.helloworld.SpeechToTextActivity this$0 -> a
    113:113:void <init>(com.atakmap.android.helloworld.SpeechToTextActivity) -> <init>
    117:118:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.SpeechToTextActivity$6 -> com.atakmap.android.helloworld.df:
    com.atakmap.android.helloworld.SpeechToTextActivity this$0 -> a
    121:121:void <init>(com.atakmap.android.helloworld.SpeechToTextActivity) -> <init>
    125:126:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.SpeechToTextActivity$7 -> com.atakmap.android.helloworld.dg:
    com.atakmap.android.helloworld.SpeechToTextActivity this$0 -> a
    129:129:void <init>(com.atakmap.android.helloworld.SpeechToTextActivity) -> <init>
    133:134:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.SpeechToTextActivity$8 -> com.atakmap.android.helloworld.dh:
    com.atakmap.android.helloworld.SpeechToTextActivity this$0 -> a
    137:137:void <init>(com.atakmap.android.helloworld.SpeechToTextActivity) -> <init>
    141:142:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.SpeechToTextActivity$9 -> com.atakmap.android.helloworld.di:
    com.atakmap.android.helloworld.SpeechToTextActivity this$0 -> a
    145:145:void <init>(com.atakmap.android.helloworld.SpeechToTextActivity) -> <init>
    149:150:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.SpeechToTextActivity$SpeechDataListener -> com.atakmap.android.helloworld.cz$a:
    boolean registered -> a
    com.atakmap.android.helloworld.SpeechToTextActivity$SpeechDataReceiver sdr -> b
    439:441:void <init>() -> <init>
    445:450:void register(android.content.Context,com.atakmap.android.helloworld.SpeechToTextActivity$SpeechDataReceiver) -> a
    454:470:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.atakmap.android.helloworld.SpeechToTextActivity$SpeechDataReceiver -> com.atakmap.android.helloworld.cz$b:
    void onSpeechDataReceived(java.util.HashMap) -> a
com.atakmap.android.helloworld.TabViewDropDown -> com.atakmap.android.helloworld.dj:
    android.content.Context _plugin -> a
    android.view.View _view -> b
    android.widget.TextView _title -> c
    android.view.View[] _tabDots -> d
    androidx.viewpager.widget.ViewPager _viewPager -> e
    38:60:void <init>(com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    64:64:void disposeImpl() -> disposeImpl
    68:68:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    72:72:void onClick(android.view.View) -> onClick
    75:76:void show() -> a
    80:83:void onPageSelected(int) -> onPageSelected
    87:87:void onPageScrolled(int,float,int) -> onPageScrolled
    91:91:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.atakmap.android.helloworld.TabViewDropDown$TestFragment -> com.atakmap.android.helloworld.dj$a:
    android.content.Context _plugin -> a
    int _tabNum -> b
    93:93:void <init>() -> <init>
    99:101:com.atakmap.android.helloworld.TabViewDropDown$TestFragment init(android.content.Context,int) -> a
    107:115:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.atakmap.android.helloworld.TabViewDropDown$TestPagerAdapter -> com.atakmap.android.helloworld.dj$b:
    java.util.List _fragments -> a
    124:126:void <init>(androidx.fragment.app.FragmentManager,java.util.List) -> <init>
    130:130:int getCount() -> getCount
    135:135:androidx.fragment.app.Fragment getItem(int) -> getItem
    140:140:int getItemPosition(java.lang.Object) -> getItemPosition
com.atakmap.android.helloworld.WebViewDropDownReceiver -> com.atakmap.android.helloworld.dk:
    java.lang.String SHOW_WEBVIEW -> a
    java.lang.String TAG -> b
    android.content.Context pluginContext -> c
    android.content.Context appContext -> d
    android.webkit.WebView htmlViewer -> e
    android.widget.LinearLayout ll -> f
    39:75:void <init>(com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    116:125:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    129:129:void disposeImpl() -> disposeImpl
    133:133:void onDropDownSelectionRemoved() -> onDropDownSelectionRemoved
    137:137:void onDropDownVisible(boolean) -> onDropDownVisible
    141:141:void onDropDownSizeChanged(double,double) -> onDropDownSizeChanged
    145:145:void onDropDownClose() -> onDropDownClose
com.atakmap.android.helloworld.WebViewDropDownReceiver$1 -> com.atakmap.android.helloworld.dl:
com.atakmap.android.helloworld.WebViewDropDownReceiver$ChromeClient -> com.atakmap.android.helloworld.dk$a:
    com.atakmap.android.helloworld.WebViewDropDownReceiver this$0 -> a
    98:98:void <init>(com.atakmap.android.helloworld.WebViewDropDownReceiver) -> <init>
    101:104:boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    109:111:void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    98:98:void <init>(com.atakmap.android.helloworld.WebViewDropDownReceiver,com.atakmap.android.helloworld.WebViewDropDownReceiver$1) -> <init>
com.atakmap.android.helloworld.WebViewDropDownReceiver$Client -> com.atakmap.android.helloworld.dk$b:
    com.atakmap.android.helloworld.WebViewDropDownReceiver this$0 -> a
    77:77:void <init>(com.atakmap.android.helloworld.WebViewDropDownReceiver) -> <init>
    80:82:void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    86:87:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    92:94:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.atakmap.android.helloworld.menu.CancelAction -> atakplugin.helloworld.bd:
    java.lang.String[] cancelIntents -> a
    android.content.DialogInterface$OnClickListener handler -> b
    12:20:void <init>() -> <init>
    34:43:void performAction(com.atakmap.android.maps.MapView,com.atakmap.android.maps.MapItem) -> performAction
    14:14:void <clinit>() -> <clinit>
com.atakmap.android.helloworld.menu.CancelAction$1 -> atakplugin.helloworld.be:
    com.atakmap.android.helloworld.menu.CancelAction this$0 -> a
    21:21:void <init>(com.atakmap.android.helloworld.menu.CancelAction) -> <init>
    24:28:void onClick(android.content.DialogInterface,int) -> onClick
com.atakmap.android.helloworld.menu.MenuFactory -> atakplugin.helloworld.bf:
    android.content.Context pluginContext -> a
    android.content.Context appContext -> b
    com.atakmap.android.menu.MenuResourceFactory resourceFactory -> c
    java.lang.String[] iconFiles -> d
    46:60:void <init>(android.content.Context) -> <init>
    64:73:com.atakmap.android.menu.MapMenuWidget create(com.atakmap.android.maps.MapItem) -> create
    80:95:com.atakmap.android.widgets.WidgetBackground createDarkWidget() -> a
    103:152:com.atakmap.android.menu.MapMenuWidget addedSubmenuButton(com.atakmap.android.maps.MapItem) -> a
    160:186:com.atakmap.android.menu.MapMenuWidget createHighlyCustom() -> b
    194:202:com.atakmap.android.menu.MapMenuWidget createSimpleDark() -> c
    209:220:com.atakmap.android.widgets.WidgetIcon createWidgetIcon(java.lang.String) -> a
    228:235:com.atakmap.android.menu.MapMenuButtonWidget createButton(java.lang.String,com.atakmap.android.menu.MapMenuWidget) -> a
    242:246:com.atakmap.android.menu.MapMenuButtonWidget createButton(java.lang.String) -> b
    35:35:void <clinit>() -> <clinit>
com.atakmap.android.helloworld.notification.NotificationService -> com.atakmap.android.helloworld.notification.NotificationService:
    java.lang.String TAG -> a
    31:31:void <init>() -> <init>
    37:37:android.os.IBinder onBind(android.content.Intent) -> onBind
    42:90:void onCreate() -> onCreate
com.atakmap.android.helloworld.plugin.BuildConfig -> com.atakmap.android.helloworld.plugin.a:
    boolean DEBUG -> a
    java.lang.String APPLICATION_ID -> b
    java.lang.String BUILD_TYPE -> c
    java.lang.String FLAVOR -> d
    int VERSION_CODE -> e
    java.lang.String VERSION_NAME -> f
    java.lang.String ATAK_PACKAGE_NAME -> g
    6:6:void <init>() -> <init>
com.atakmap.android.helloworld.plugin.HelloWorldLifecycle -> com.atakmap.android.helloworld.plugin.HelloWorldLifecycle:
    android.content.Context pluginContext -> a
    java.util.Collection overlays -> b
    com.atakmap.android.maps.MapView mapView -> c
    java.lang.String TAG -> d
    39:43:void <init>(android.content.Context) -> <init>
    47:49:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    54:79:void onCreate(android.app.Activity,transapps.mapi.MapView) -> onCreate
    83:85:void onDestroy() -> onDestroy
    90:90:void onFinish() -> onFinish
    94:96:void onPause() -> onPause
    100:102:void onResume() -> onResume
    106:108:void onStart() -> onStart
    112:114:void onStop() -> onStop
com.atakmap.android.helloworld.plugin.HelloWorldTool -> com.atakmap.android.helloworld.plugin.HelloWorldTool:
    java.lang.String TAG -> a
    android.content.Context context -> b
    android.graphics.drawable.LayerDrawable _icon -> c
    android.content.BroadcastReceiver br -> d
    37:73:void <init>(android.content.Context) -> <init>
    58:68:void setBadgeCount(android.content.Context,android.graphics.drawable.LayerDrawable,int) -> b
    92:92:java.lang.String getDescription() -> getDescription
    97:97:android.graphics.drawable.Drawable getIcon() -> getIcon
    102:102:transapps.maps.plugin.tool.Group[] getGroups() -> getGroups
    110:110:java.lang.String getShortDescription() -> getShortDescription
    115:115:transapps.maps.plugin.tool.Tool getTool() -> getTool
    125:136:void onActivate(android.app.Activity,transapps.mapi.MapView,android.view.ViewGroup,android.os.Bundle,transapps.maps.plugin.tool.Tool$ToolCallback) -> onActivate
    140:142:void onDeactivate(transapps.maps.plugin.tool.Tool$ToolCallback) -> onDeactivate
    29:29:android.content.Context access$000(com.atakmap.android.helloworld.plugin.HelloWorldTool) -> a
    29:29:android.graphics.drawable.LayerDrawable access$100(com.atakmap.android.helloworld.plugin.HelloWorldTool) -> b
    29:29:void access$200(android.content.Context,android.graphics.drawable.LayerDrawable,int) -> a
com.atakmap.android.helloworld.plugin.HelloWorldTool$1 -> com.atakmap.android.helloworld.plugin.b:
    int count -> b
    com.atakmap.android.helloworld.plugin.HelloWorldTool this$0 -> a
    73:74:void <init>(com.atakmap.android.helloworld.plugin.HelloWorldTool) -> <init>
    80:85:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.atakmap.android.helloworld.plugin.R -> com.atakmap.android.helloworld.plugin.c:
    void <init>() -> <init>
com.atakmap.android.helloworld.plugin.R$array -> com.atakmap.android.helloworld.plugin.c$a:
    int Cancel_Array -> Cancel_Array
    int NineOneOne_Array -> NineOneOne_Array
    int RingTheBell_Array -> RingTheBell_Array
    int TroopsInContact -> TroopsInContact
    int a_array -> a_array
    int at_array -> at_array
    int bloodhound_array -> bloodhound_array
    int brightness_array -> brightness_array
    int callsign_array -> callsign_array
    int camera_array -> camera_array
    int cardinal_array -> cardinal_array
    int compass_array -> compass_array
    int country_arrays -> country_arrays
    int delete_array -> delete_array
    int details_array -> details_array
    int drawing_objects_array -> drawing_objects_array
    int drop_a_array -> drop_a_array
    int emergency_array -> emergency_array
    int friendly_array -> friendly_array
    int from_array -> from_array
    int high_array -> high_array
    int hostile_array -> hostile_array
    int letter_array -> letter_array
    int link_array -> link_array
    int link_preposition_position1 -> link_preposition_position1
    int link_preposition_position2 -> link_preposition_position2
    int low_array -> low_array
    int medium_array -> medium_array
    int navigate_array -> navigate_array
    int neutral_array -> neutral_array
    int nine_line_array -> nine_line_array
    int open_array -> open_array
    int pairing_array -> pairing_array
    int quick_array -> quick_array
    int range_units_abbreviation -> range_units_abbreviation
    int range_units_array -> range_units_array
    int route_array -> route_array
    int self_array -> self_array
    int spotmap_array -> spotmap_array
    int unit_tag_array -> unit_tag_array
    int unit_types_array -> unit_types_array
    int unknown_array -> unknown_array
    int word_number_array -> word_number_array
    void <init>() -> <init>
com.atakmap.android.helloworld.plugin.R$attr -> com.atakmap.android.helloworld.plugin.c$b:
    int fastScrollEnabled -> fastScrollEnabled
    int fastScrollHorizontalThumbDrawable -> fastScrollHorizontalThumbDrawable
    int fastScrollHorizontalTrackDrawable -> fastScrollHorizontalTrackDrawable
    int fastScrollVerticalThumbDrawable -> fastScrollVerticalThumbDrawable
    int fastScrollVerticalTrackDrawable -> fastScrollVerticalTrackDrawable
    int layoutManager -> layoutManager
    int recyclerViewStyle -> recyclerViewStyle
    int reverseLayout -> reverseLayout
    int spanCount -> spanCount
    int stackFromEnd -> stackFromEnd
    void <init>() -> <init>
com.atakmap.android.helloworld.plugin.R$color -> com.atakmap.android.helloworld.plugin.c$c:
    int darker_gray -> darker_gray
    int light_blue -> light_blue
    int light_gray -> light_gray
    int transparent -> transparent
    int white -> white
    void <init>() -> <init>
com.atakmap.android.helloworld.plugin.R$dimen -> com.atakmap.android.helloworld.plugin.c$d:
    int fastscroll_default_thickness -> fastscroll_default_thickness
    int fastscroll_margin -> fastscroll_margin
    int fastscroll_minimum_range -> fastscroll_minimum_range
    int fontSize -> fontSize
    int item_touch_helper_max_drag_scroll_per_frame -> item_touch_helper_max_drag_scroll_per_frame
    int item_touch_helper_swipe_escape_max_velocity -> item_touch_helper_swipe_escape_max_velocity
    int item_touch_helper_swipe_escape_velocity -> item_touch_helper_swipe_escape_velocity
    void <init>() -> <init>
com.atakmap.android.helloworld.plugin.R$drawable -> com.atakmap.android.helloworld.plugin.c$e:
    int abc -> abc
    int arrowright -> arrowright
    int btn_gray -> btn_gray
    int dot_selected -> dot_selected
    int dot_selector -> dot_selector
    int dot_unselected -> dot_unselected
    int ic_launcher -> ic_launcher
    int ic_launcher_badge -> ic_launcher_badge
    int ic_route -> ic_route
    int new_dark_button_bg -> new_dark_button_bg
    int new_dark_button_disabled -> new_dark_button_disabled
    int new_dark_button_selected -> new_dark_button_selected
    int node_icon -> node_icon
    int radio_icon -> radio_icon
    int rv_grid -> rv_grid
    int rv_horizontal -> rv_horizontal
    int rv_vertical -> rv_vertical
    void <init>() -> <init>
com.atakmap.android.helloworld.plugin.R$id -> com.atakmap.android.helloworld.plugin.c$f:
    int addAnAircraft -> addAnAircraft
    int addCountToIcon -> addCountToIcon
    int addLayer -> addLayer
    int addMultiLayer -> addMultiLayer
    int addRectangle -> addRectangle
    int addStream -> addStream
    int addToolbarItem -> addToolbarItem
    int addXRoute -> addXRoute
    int alphaGrid_txt -> alphaGrid_txt
    int btnHookNavigationEvents -> btnHookNavigationEvents
    int bumpControl -> bumpControl
    int button1 -> button1
    int callsign -> callsign
    int cameraLauncher -> cameraLauncher
    int coordinateEntry -> coordinateEntry
    int customMenuDefault -> customMenuDefault
    int customMenuFactory -> customMenuFactory
    int customType -> customType
    int details_base -> details_base
    int drawShapes -> drawShapes
    int drawingExamples -> drawingExamples
    int dropMarker_btn -> dropMarker_btn
    int dropRoute -> dropRoute
    int easting_txt -> easting_txt
    int elevationExamples -> elevationExamples
    int emergency -> emergency
    int emergencyExamples -> emergencyExamples
    int externalGps -> externalGps
    int fakeArrow -> fakeArrow
    int fakeContentProvider -> fakeContentProvider
    int fly -> fly
    int footer_button -> footer_button
    int getImage -> getImage
    int gpsExamples -> gpsExamples
    int grid -> grid
    int groupAdd -> groupAdd
    int header_button -> header_button
    int horizontal -> horizontal
    int ic_badge -> ic_badge
    int icon -> icon
    int imageAndCamera2 -> imageAndCamera2
    int imageAttach -> imageAttach
    int issLocation -> issLocation
    int itemInspect -> itemInspect
    int item_touch_helper_previous_elevation -> item_touch_helper_previous_elevation
    int largerButton -> largerButton
    int last_update -> last_update
    int layoutExamples -> layoutExamples
    int listRoutes -> listRoutes
    int markerManipulation -> markerManipulation
    int marker_txt -> marker_txt
    int marker_type -> marker_type
    int mgrs_txt -> mgrs_txt
    int no_emergency -> no_emergency
    int node_info -> node_info
    int northing_txt -> northing_txt
    int notificationExamples -> notificationExamples
    int notificationSpammer -> notificationSpammer
    int numericGrid_txt -> numericGrid_txt
    int pluginNotification -> pluginNotification
    int rView -> rView
    int radio_info -> radio_info
    int radio_state -> radio_state
    int radio_subtitle -> radio_subtitle
    int radio_title -> radio_title
    int rbcircle -> rbcircle
    int reXRoute -> reXRoute
    int recyclerViewBtn -> recyclerViewBtn
    int removeStream -> removeStream
    int routeExamples -> routeExamples
    int secondRender -> secondRender
    int sensorFOV -> sensorFOV
    int showSearchIcon -> showSearchIcon
    int smallerButton -> smallerButton
    int speakMGRS_btn -> speakMGRS_btn
    int specialWheelMarker -> specialWheelMarker
    int speechToActivity -> speechToActivity
    int speechToText_TV -> speechToText_TV
    int spinner1 -> spinner1
    int squareID_txt -> squareID_txt
    int staleoutMarker -> staleoutMarker
    int surfaceAtCenter -> surfaceAtCenter
    int tabViewBtn -> tabViewBtn
    int tab_left_dot -> tab_left_dot
    int tab_middle_dot -> tab_middle_dot
    int tab_pager -> tab_pager
    int tab_right_dot -> tab_right_dot
    int tab_title -> tab_title
    int textView -> textView
    int textView1 -> textView1
    int text_container -> text_container
    int vertical -> vertical
    int videoLauncher -> videoLauncher
    int webView -> webView
    void <init>() -> <init>
com.atakmap.android.helloworld.plugin.R$layout -> com.atakmap.android.helloworld.plugin.c$g:
    int blank_linearlayout -> blank_linearlayout
    int fragment_foo -> fragment_foo
    int hello_world_layout -> hello_world_layout
    int marker_callsign_row -> marker_callsign_row
    int marker_callsign_tile -> marker_callsign_tile
    int overlay_footer -> overlay_footer
    int overlay_header -> overlay_header
    int radio_item_generic -> radio_item_generic
    int recycler_view -> recycler_view
    int specialdetail -> specialdetail
    int speech_to_text -> speech_to_text
    int tab_swipe_view -> tab_swipe_view
    void <init>() -> <init>
com.atakmap.android.helloworld.plugin.R$string -> com.atakmap.android.helloworld.plugin.c$h:
    int Manual_mode -> Manual_mode
    int Remove_item_warn -> Remove_item_warn
    int action_settings -> action_settings
    int activity_found -> activity_found
    int activity_not_found -> activity_not_found
    int addAnAircraft -> addAnAircraft
    int addLayer -> addLayer
    int addRectangle -> addRectangle
    int addStream -> addStream
    int addToolbarItem -> addToolbarItem
    int addXRoute -> addXRoute
    int app_desc -> app_desc
    int app_name -> app_name
    int bumpControl -> bumpControl
    int cameraLauncher -> cameraLauncher
    int cancel_btn -> cancel_btn
    int confirm_btn -> confirm_btn
    int country_prompt -> country_prompt
    int customMenuDefault -> customMenuDefault
    int customType -> customType
    int drawShapes -> drawShapes
    int dropRoute -> dropRoute
    int drop_marker -> drop_marker
    int emergency -> emergency
    int example_footer -> example_footer
    int example_header -> example_header
    int example_layer_description -> example_layer_description
    int externalGps -> externalGps
    int fakeContentProvider -> fakeContentProvider
    int fly -> fly
    int full_example_summary -> full_example_summary
    int full_example_title -> full_example_title
    int hello_world -> hello_world
    int hookNavigation -> hookNavigation
    int imageAttach -> imageAttach
    int issLocation -> issLocation
    int itemInspect -> itemInspect
    int largerButton -> largerButton
    int listRoutes -> listRoutes
    int marker_type -> marker_type
    int mgrs -> mgrs
    int no_emergency -> no_emergency
    int notificationSpammer -> notificationSpammer
    int pluginNotification -> pluginNotification
    int rbcircle -> rbcircle
    int reXRoute -> reXRoute
    int removeStream -> removeStream
    int route_exporter_name -> route_exporter_name
    int sensorFOV -> sensorFOV
    int showSeachIcon -> showSeachIcon
    int smallerButton -> smallerButton
    int specialWheelMarker -> specialWheelMarker
    int speechToActivity -> speechToActivity
    int speechToText -> speechToText
    int speech_hint_12345 -> speech_hint_12345
    int speech_hint_47 -> speech_hint_47
    int speech_hint_AA -> speech_hint_AA
    int speech_hint_hostile -> speech_hint_hostile
    int speech_hint_u -> speech_hint_u
    int speech_not_supported -> speech_not_supported
    int speech_prompt_Activity -> speech_prompt_Activity
    int speech_prompt_alpha_grid_zone -> speech_prompt_alpha_grid_zone
    int speech_prompt_easting -> speech_prompt_easting
    int speech_prompt_northing -> speech_prompt_northing
    int speech_prompt_numeric_grid_zone -> speech_prompt_numeric_grid_zone
    int speech_prompt_square_id -> speech_prompt_square_id
    int staleoutMarker -> staleoutMarker
    int summary -> summary
    int surfaceAtCenter -> surfaceAtCenter
    int tap_on_mic -> tap_on_mic
    int tap_to_speak_marker_type -> tap_to_speak_marker_type
    int tap_to_speak_mgrs -> tap_to_speak_mgrs
    int tap_to_speak_mgrs_loc -> tap_to_speak_mgrs_loc
    int versionName -> versionName
    int videoLauncher -> videoLauncher
    int webView -> webView
    void <init>() -> <init>
com.atakmap.android.helloworld.plugin.R$style -> com.atakmap.android.helloworld.plugin.c$i:
    int ATAKEditText -> ATAKEditText
    int ATAKPluginTheme -> ATAKPluginTheme
    int ATAKSpinner -> ATAKSpinner
    int ATAKSpinnerItem -> ATAKSpinnerItem
    int ATAKTheme -> ATAKTheme
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int FullDropdownStyle -> FullDropdownStyle
    int RadioState -> RadioState
    int RadioSubTitle -> RadioSubTitle
    int RadioTitle -> RadioTitle
    int Theme_Transparent -> Theme_Transparent
    int darkButton -> darkButton
    int unpaddedButton -> unpaddedButton
    void <init>() -> <init>
com.atakmap.android.helloworld.plugin.R$styleable -> com.atakmap.android.helloworld.plugin.c$j:
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_orientation -> RecyclerView_android_orientation
    int RecyclerView_android_clipToPadding -> RecyclerView_android_clipToPadding
    int RecyclerView_android_descendantFocusability -> RecyclerView_android_descendantFocusability
    int RecyclerView_fastScrollEnabled -> RecyclerView_fastScrollEnabled
    int RecyclerView_fastScrollHorizontalThumbDrawable -> RecyclerView_fastScrollHorizontalThumbDrawable
    int RecyclerView_fastScrollHorizontalTrackDrawable -> RecyclerView_fastScrollHorizontalTrackDrawable
    int RecyclerView_fastScrollVerticalThumbDrawable -> RecyclerView_fastScrollVerticalThumbDrawable
    int RecyclerView_fastScrollVerticalTrackDrawable -> RecyclerView_fastScrollVerticalTrackDrawable
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int RecyclerView_reverseLayout -> RecyclerView_reverseLayout
    int RecyclerView_spanCount -> RecyclerView_spanCount
    int RecyclerView_stackFromEnd -> RecyclerView_stackFromEnd
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.atakmap.android.helloworld.plugin.R$xml -> com.atakmap.android.helloworld.plugin.c$k:
    int preferences -> preferences
    int subpreferences -> subpreferences
    void <init>() -> <init>
com.atakmap.android.helloworld.recyclerview.RecyclerView -> com.atakmap.android.helloworld.recyclerview.RecyclerView:
    java.lang.String TAG -> al
    14:15:void <init>(android.content.Context) -> <init>
    18:19:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    22:23:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    30:30:void scrollTo(int,int) -> scrollTo
com.atakmap.android.helloworld.recyclerview.RecyclerViewAdapter -> com.atakmap.android.helloworld.recyclerview.a:
    java.lang.String TAG -> a
    com.atakmap.android.maps.MapView _mapView -> b
    android.view.LayoutInflater _inflater -> c
    java.util.List _items -> d
    boolean _listMode -> e
    32:40:void <init>(com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    43:44:void addItem(com.atakmap.android.maps.MapItem) -> a
    47:48:void removeItem(com.atakmap.android.maps.MapItem) -> b
    51:57:void addItems(com.atakmap.android.maps.MapGroup) -> a
    60:61:void setListMode(boolean) -> b
    65:67:com.atakmap.android.helloworld.recyclerview.RecyclerViewAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> c
    72:84:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    88:88:int getItemCount() -> a
    26:26:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> a
    26:26:java.util.List access$000(com.atakmap.android.helloworld.recyclerview.RecyclerViewAdapter) -> a
com.atakmap.android.helloworld.recyclerview.RecyclerViewAdapter$ViewHolder -> com.atakmap.android.helloworld.recyclerview.a$a:
    android.widget.ImageView icon -> E
    android.widget.TextView callsign -> F
    android.widget.TextView lastUpdate -> G
    com.atakmap.android.helloworld.recyclerview.RecyclerViewAdapter this$0 -> H
    98:104:void <init>(com.atakmap.android.helloworld.recyclerview.RecyclerViewAdapter,android.view.View) -> <init>
    108:113:void onClick(android.view.View) -> onClick
com.atakmap.android.helloworld.recyclerview.RecyclerViewDropDown -> com.atakmap.android.helloworld.recyclerview.b:
    com.atakmap.android.maps.MapView _mapView -> a
    android.content.Context _plugin -> b
    com.atakmap.android.util.time.TimeViewUpdater _timeUpdater -> c
    android.view.View _view -> d
    com.atakmap.android.helloworld.recyclerview.RecyclerView _rView -> e
    com.atakmap.android.helloworld.recyclerview.RecyclerViewAdapter _adapter -> f
    android.view.View _vBtn -> g
    android.view.View _hBtn -> h
    android.view.View _gBtn -> i
    37:66:void <init>(com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    71:76:void disposeImpl() -> disposeImpl
    80:82:void onTimeChanged(com.atakmap.coremap.maps.time.CoordinatedTime,com.atakmap.coremap.maps.time.CoordinatedTime) -> onTimeChanged
    86:86:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    91:109:void onClick(android.view.View) -> onClick
    113:130:void onMapEvent(com.atakmap.android.maps.MapEvent) -> onMapEvent
    133:134:void show() -> a
    24:24:com.atakmap.android.helloworld.recyclerview.RecyclerViewAdapter access$000(com.atakmap.android.helloworld.recyclerview.RecyclerViewDropDown) -> a
com.atakmap.android.helloworld.recyclerview.RecyclerViewDropDown$1 -> com.atakmap.android.helloworld.recyclerview.c:
    com.atakmap.android.helloworld.recyclerview.RecyclerViewDropDown this$0 -> a
    123:123:void <init>(com.atakmap.android.helloworld.recyclerview.RecyclerViewDropDown) -> <init>
    126:128:void run() -> run
com.atakmap.android.helloworld.routes.RouteExportMarshal -> atakplugin.helloworld.bg:
    java.lang.String TAG -> a
    android.content.Context context -> b
    29:31:void <init>(android.content.Context) -> <init>
    39:64:void execute(java.util.List) -> execute
    69:69:boolean filterItem(com.atakmap.android.maps.MapItem) -> filterItem
    74:74:boolean filterListItemImpl(com.atakmap.android.hierarchy.HierarchyListItem) -> filterListItemImpl
    79:79:boolean filterGroup(com.atakmap.android.maps.MapGroup) -> filterGroup
    86:86:java.lang.String getContentType() -> getContentType
    91:91:java.lang.String getMIMEType() -> getMIMEType
    96:96:int getIconId() -> getIconId
    101:101:java.lang.Class getTargetClass() -> getTargetClass
    106:106:void beginMarshal(android.content.Context,java.util.List) -> beginMarshal
    110:110:boolean marshal(java.util.Collection) -> marshal
    115:115:void finalizeMarshal() -> finalizeMarshal
    119:119:void postMarshal() -> postMarshal
    123:123:void cancelMarshal() -> cancelMarshal
com.atakmap.android.helloworld.samplelayer.ExampleLayer -> atakplugin.helloworld.bh:
    java.lang.String TAG -> a
    int[] layerARGB -> b
    int layerWidth -> c
    int layerHeight -> d
    com.atakmap.coremap.maps.coords.GeoPoint upperLeft -> e
    com.atakmap.coremap.maps.coords.GeoPoint upperRight -> f
    com.atakmap.coremap.maps.coords.GeoPoint lowerRight -> g
    com.atakmap.coremap.maps.coords.GeoPoint lowerLeft -> h
    android.content.Context pluginContext -> i
    com.atakmap.android.maps.MetaShape metaShape -> j
    37:82:void <init>(android.content.Context,java.lang.String,java.lang.String) -> <init>
    85:85:com.atakmap.coremap.maps.coords.GeoBounds getBounds() -> a
    89:89:com.atakmap.coremap.maps.coords.GeoPoint[] getPoints() -> b
    95:95:com.atakmap.android.maps.MetaShape getMetaShape() -> c
com.atakmap.android.helloworld.samplelayer.ExampleLayer$1 -> atakplugin.helloworld.bi:
    com.atakmap.android.helloworld.samplelayer.ExampleLayer this$0 -> a
    61:61:void <init>(com.atakmap.android.helloworld.samplelayer.ExampleLayer,java.lang.String) -> <init>
    64:64:com.atakmap.coremap.maps.coords.GeoPointMetaData[] getMetaDataPoints() -> getMetaDataPoints
    68:68:com.atakmap.coremap.maps.coords.GeoPoint[] getPoints() -> getPoints
    73:73:com.atakmap.coremap.maps.coords.GeoBounds getBounds(com.atakmap.coremap.maps.coords.MutableGeoBounds) -> getBounds
com.atakmap.android.helloworld.samplelayer.ExampleMultiLayer -> atakplugin.helloworld.bj:
    java.lang.String TAG -> a
    int[] layerARGB -> b
    int layerWidth -> c
    int layerHeight -> d
    com.atakmap.coremap.maps.coords.GeoPoint upperLeft -> e
    com.atakmap.coremap.maps.coords.GeoPoint upperRight -> f
    com.atakmap.coremap.maps.coords.GeoPoint lowerRight -> g
    com.atakmap.coremap.maps.coords.GeoPoint lowerLeft -> h
    android.content.Context pluginContext -> i
    com.atakmap.android.maps.MetaShape metaShape -> j
    39:84:void <init>(android.content.Context,java.lang.String,java.lang.String,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint) -> <init>
    87:87:com.atakmap.coremap.maps.coords.GeoBounds getBounds() -> a
    91:91:com.atakmap.coremap.maps.coords.GeoPoint[] getPoints() -> b
    97:97:com.atakmap.android.maps.MetaShape getMetaShape() -> c
com.atakmap.android.helloworld.samplelayer.ExampleMultiLayer$1 -> atakplugin.helloworld.bk:
    com.atakmap.android.helloworld.samplelayer.ExampleMultiLayer this$0 -> a
    63:63:void <init>(com.atakmap.android.helloworld.samplelayer.ExampleMultiLayer,java.lang.String) -> <init>
    66:66:com.atakmap.coremap.maps.coords.GeoPointMetaData[] getMetaDataPoints() -> getMetaDataPoints
    70:70:com.atakmap.coremap.maps.coords.GeoPoint[] getPoints() -> getPoints
    75:75:com.atakmap.coremap.maps.coords.GeoBounds getBounds(com.atakmap.coremap.maps.coords.MutableGeoBounds) -> getBounds
com.atakmap.android.helloworld.samplelayer.GLExampleLayer -> atakplugin.helloworld.bl:
    com.atakmap.map.layer.opengl.GLLayerSpi2 SPI -> a
    com.atakmap.android.helloworld.samplelayer.GLExampleLayer$Data frame -> b
    com.atakmap.android.helloworld.samplelayer.ExampleLayer subject -> c
    49:51:void <init>(com.atakmap.map.MapRenderer,com.atakmap.android.helloworld.samplelayer.ExampleLayer) -> <init>
    55:61:void init() -> init
    67:75:void drawImpl(com.atakmap.map.opengl.GLMapView) -> drawImpl
    80:84:void release() -> release
    93:114:void setData(int[],int,int,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint) -> a
    22:22:com.atakmap.android.helloworld.samplelayer.GLExampleLayer$Data access$000(com.atakmap.android.helloworld.samplelayer.GLExampleLayer) -> a
    27:27:void <clinit>() -> <clinit>
com.atakmap.android.helloworld.samplelayer.GLExampleLayer$1 -> atakplugin.helloworld.bm:
    27:27:void <init>() -> <init>
    31:31:int getPriority() -> getPriority
    36:38:com.atakmap.map.layer.opengl.GLLayer2 create(android.util.Pair) -> a
    27:27:java.lang.Object create(java.lang.Object) -> create
com.atakmap.android.helloworld.samplelayer.GLExampleLayer$2 -> atakplugin.helloworld.bn:
    android.graphics.Bitmap val$bitmap -> a
    int val$width -> b
    int val$height -> c
    com.atakmap.coremap.maps.coords.GeoPoint val$ul -> d
    com.atakmap.coremap.maps.coords.GeoPoint val$ur -> e
    com.atakmap.coremap.maps.coords.GeoPoint val$lr -> f
    com.atakmap.coremap.maps.coords.GeoPoint val$ll -> g
    com.atakmap.android.helloworld.samplelayer.GLExampleLayer this$0 -> h
    102:102:void <init>(com.atakmap.android.helloworld.samplelayer.GLExampleLayer,android.graphics.Bitmap,int,int,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint) -> <init>
    105:112:void run() -> run
com.atakmap.android.helloworld.samplelayer.GLExampleLayer$Data -> atakplugin.helloworld.bl$a:
    com.atakmap.opengl.GLTexture texture -> a
    java.nio.DoubleBuffer points -> b
    java.nio.FloatBuffer vertexCoordinates -> c
    java.nio.ByteBuffer textureCoordinates -> d
    124:132:void <init>() -> <init>
    148:193:void update(android.graphics.Bitmap,int,int,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint) -> a
com.atakmap.android.helloworld.samplelayer.GLExampleMultiLayer -> atakplugin.helloworld.bo:
    com.atakmap.map.layer.opengl.GLLayerSpi2 SPI -> a
    com.atakmap.android.helloworld.samplelayer.GLExampleMultiLayer$Data frame -> b
    com.atakmap.android.helloworld.samplelayer.ExampleMultiLayer subject -> c
    51:53:void <init>(com.atakmap.map.MapRenderer,com.atakmap.android.helloworld.samplelayer.ExampleMultiLayer) -> <init>
    57:63:void init() -> init
    67:79:void drawImpl(com.atakmap.map.opengl.GLMapView,int) -> drawImpl
    84:88:void release() -> release
    97:118:void setData(int[],int,int,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint) -> a
    24:24:com.atakmap.android.helloworld.samplelayer.GLExampleMultiLayer$Data access$000(com.atakmap.android.helloworld.samplelayer.GLExampleMultiLayer) -> a
    29:29:void <clinit>() -> <clinit>
com.atakmap.android.helloworld.samplelayer.GLExampleMultiLayer$1 -> atakplugin.helloworld.bp:
    29:29:void <init>() -> <init>
    33:33:int getPriority() -> getPriority
    38:40:com.atakmap.map.layer.opengl.GLLayer2 create(android.util.Pair) -> a
    29:29:java.lang.Object create(java.lang.Object) -> create
com.atakmap.android.helloworld.samplelayer.GLExampleMultiLayer$2 -> atakplugin.helloworld.bq:
    android.graphics.Bitmap val$bitmap -> a
    int val$width -> b
    int val$height -> c
    com.atakmap.coremap.maps.coords.GeoPoint val$ul -> d
    com.atakmap.coremap.maps.coords.GeoPoint val$ur -> e
    com.atakmap.coremap.maps.coords.GeoPoint val$lr -> f
    com.atakmap.coremap.maps.coords.GeoPoint val$ll -> g
    com.atakmap.android.helloworld.samplelayer.GLExampleMultiLayer this$0 -> h
    106:106:void <init>(com.atakmap.android.helloworld.samplelayer.GLExampleMultiLayer,android.graphics.Bitmap,int,int,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint) -> <init>
    109:116:void run() -> run
com.atakmap.android.helloworld.samplelayer.GLExampleMultiLayer$Data -> atakplugin.helloworld.bo$a:
    com.atakmap.opengl.GLTexture texture -> a
    java.nio.DoubleBuffer points -> b
    java.nio.FloatBuffer vertexCoordinates -> c
    java.nio.ByteBuffer textureCoordinates -> d
    com.atakmap.android.helloworld.samplelayer.GLExampleMultiLayer this$0 -> e
    128:136:void <init>(com.atakmap.android.helloworld.samplelayer.GLExampleMultiLayer) -> <init>
    152:201:void update(android.graphics.Bitmap,int,int,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint,com.atakmap.coremap.maps.coords.GeoPoint) -> a
com.atakmap.android.helloworld.speechtotext.SpeechActivity -> com.atakmap.android.helloworld.speechtotext.a:
    com.atakmap.android.maps.MapView view -> a
    android.content.Context pluginContext -> b
    16:19:void <init>(com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    void analyzeSpeech(java.lang.String) -> a
    void startActivity() -> a
    38:38:com.atakmap.android.maps.MapView getView() -> b
    49:49:android.content.Context getPluginContext() -> c
com.atakmap.android.helloworld.speechtotext.SpeechBloodHound -> com.atakmap.android.helloworld.speechtotext.b:
    java.lang.String TAG -> a
    java.lang.String[] routeArray -> b
    java.lang.String[] callsignArray -> c
    28:46:void <init>(com.atakmap.android.maps.MapView,java.lang.String,android.content.Context) -> <init>
    60:115:void analyzeSpeech(java.lang.String) -> a
    122:126:void startActivity(java.lang.String) -> b
    133:133:void startActivity() -> a
    141:159:void UIDFinder(java.lang.String,java.lang.String) -> a
    27:27:void access$000(com.atakmap.android.helloworld.speechtotext.SpeechBloodHound,java.lang.String) -> a
com.atakmap.android.helloworld.speechtotext.SpeechBloodHound$1 -> com.atakmap.android.helloworld.speechtotext.c:
    com.atakmap.android.user.geocode.GeocodingTask val$gt -> a
    java.lang.String val$input -> b
    com.atakmap.android.helloworld.speechtotext.SpeechBloodHound this$0 -> c
    98:98:void <init>(com.atakmap.android.helloworld.speechtotext.SpeechBloodHound,com.atakmap.android.user.geocode.GeocodingTask,java.lang.String) -> <init>
    101:111:void onResult() -> onResult
com.atakmap.android.helloworld.speechtotext.SpeechBrightness -> com.atakmap.android.helloworld.speechtotext.d:
    java.lang.String[] highArray -> a
    java.lang.String[] mediumArray -> b
    java.lang.String[] lowArray -> c
    int value -> d
    android.content.Intent returnIntent -> e
    22:31:void <init>(com.atakmap.android.maps.MapView,android.content.Context,java.lang.String) -> <init>
    43:78:void analyzeSpeech(java.lang.String) -> a
    88:91:void startActivity() -> a
com.atakmap.android.helloworld.speechtotext.SpeechDetailOpener -> com.atakmap.android.helloworld.speechtotext.e:
    25:42:void <init>(java.lang.String,com.atakmap.android.maps.MapView) -> <init>
com.atakmap.android.helloworld.speechtotext.SpeechItemRemover -> com.atakmap.android.helloworld.speechtotext.f:
    java.lang.String TAG -> a
    java.lang.String[] callsignArray -> b
    java.lang.String[] drawingObjectArray -> c
    java.lang.String[] routeArray -> d
    java.lang.String[] wordNumberArray -> e
    com.atakmap.android.maps.MapGroup mapGroup -> f
    com.atakmap.android.maps.MapItem targetItem -> g
    java.lang.String target -> h
    java.lang.String mapGroupType -> i
    24:43:void <init>(java.lang.String,com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    54:83:void analyzeSpeech(java.lang.String) -> a
    94:144:void startActivity() -> a
    153:167:void targetGetter(java.lang.String) -> b
    23:23:com.atakmap.android.maps.MapItem access$000(com.atakmap.android.helloworld.speechtotext.SpeechItemRemover) -> a
    23:23:com.atakmap.android.maps.MapItem access$002(com.atakmap.android.helloworld.speechtotext.SpeechItemRemover,com.atakmap.android.maps.MapItem) -> a
    23:23:com.atakmap.android.maps.MapGroup access$100(com.atakmap.android.helloworld.speechtotext.SpeechItemRemover) -> b
com.atakmap.android.helloworld.speechtotext.SpeechItemRemover$1 -> com.atakmap.android.helloworld.speechtotext.g:
    com.atakmap.android.helloworld.speechtotext.SpeechItemRemover this$0 -> a
    102:102:void <init>(com.atakmap.android.helloworld.speechtotext.SpeechItemRemover) -> <init>
    105:110:void onClick(android.content.DialogInterface,int) -> onClick
com.atakmap.android.helloworld.speechtotext.SpeechItemRemover$2 -> com.atakmap.android.helloworld.speechtotext.h:
    com.atakmap.android.gui.EditText val$input -> a
    com.atakmap.android.helloworld.speechtotext.SpeechItemRemover this$0 -> b
    123:123:void <init>(com.atakmap.android.helloworld.speechtotext.SpeechItemRemover,com.atakmap.android.gui.EditText) -> <init>
    126:138:void onClick(android.content.DialogInterface,int) -> onClick
com.atakmap.android.helloworld.speechtotext.SpeechLinker -> com.atakmap.android.helloworld.speechtotext.i:
    com.atakmap.android.maps.PointMapItem[] items -> a
    java.lang.String[] selfArray -> b
    22:31:void <init>(java.lang.String,com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    42:72:void analyzeSpeech(java.lang.String) -> a
    81:92:void startActivity() -> a
    102:118:void itemFinder(java.lang.String[]) -> a
com.atakmap.android.helloworld.speechtotext.SpeechNavigator -> com.atakmap.android.helloworld.speechtotext.j:
    java.lang.String TAG -> a
    java.lang.String geoAddress -> b
    com.atakmap.coremap.maps.coords.GeoPoint destination -> c
    com.atakmap.coremap.maps.coords.GeoPoint source -> d
    com.atakmap.android.routes.Route route -> e
    java.lang.String inputDestination -> f
    java.lang.String inputOrigin -> g
    boolean navFlag -> h
    33:36:void <init>(com.atakmap.android.maps.MapView,java.lang.String,java.lang.Boolean) -> <init>
    47:82:void analyzeSpeech(java.lang.String) -> a
    92:125:void startActivity() -> a
    133:149:void originFinder(java.lang.String) -> b
    20:20:com.atakmap.coremap.maps.coords.GeoPoint access$002(com.atakmap.android.helloworld.speechtotext.SpeechNavigator,com.atakmap.coremap.maps.coords.GeoPoint) -> a
    20:20:boolean access$100(com.atakmap.android.helloworld.speechtotext.SpeechNavigator) -> a
    20:20:com.atakmap.android.routes.Route access$202(com.atakmap.android.helloworld.speechtotext.SpeechNavigator,com.atakmap.android.routes.Route) -> a
    20:20:com.atakmap.coremap.maps.coords.GeoPoint access$300(com.atakmap.android.helloworld.speechtotext.SpeechNavigator) -> b
    20:20:com.atakmap.coremap.maps.coords.GeoPoint access$000(com.atakmap.android.helloworld.speechtotext.SpeechNavigator) -> c
    20:20:java.lang.String access$400(com.atakmap.android.helloworld.speechtotext.SpeechNavigator) -> d
    20:20:com.atakmap.android.routes.Route access$200(com.atakmap.android.helloworld.speechtotext.SpeechNavigator) -> e
    20:20:com.atakmap.coremap.maps.coords.GeoPoint access$302(com.atakmap.android.helloworld.speechtotext.SpeechNavigator,com.atakmap.coremap.maps.coords.GeoPoint) -> b
com.atakmap.android.helloworld.speechtotext.SpeechNavigator$1 -> com.atakmap.android.helloworld.speechtotext.k:
    com.atakmap.android.user.geocode.GeocodingTask val$gt -> a
    com.atakmap.android.helloworld.speechtotext.SpeechNavigator this$0 -> b
    100:100:void <init>(com.atakmap.android.helloworld.speechtotext.SpeechNavigator,com.atakmap.android.user.geocode.GeocodingTask) -> <init>
    103:122:void onResult() -> onResult
com.atakmap.android.helloworld.speechtotext.SpeechNavigator$2 -> com.atakmap.android.helloworld.speechtotext.l:
    com.atakmap.android.user.geocode.GeocodingTask val$gt -> a
    com.atakmap.android.helloworld.speechtotext.SpeechNavigator this$0 -> b
    137:137:void <init>(com.atakmap.android.helloworld.speechtotext.SpeechNavigator,com.atakmap.android.user.geocode.GeocodingTask) -> <init>
    140:146:void onResult() -> onResult
com.atakmap.android.helloworld.speechtotext.SpeechNineLine -> com.atakmap.android.helloworld.speechtotext.m:
    java.lang.String TAG -> a
    java.lang.String target -> b
    com.atakmap.android.maps.MapGroup cotGroup -> c
    21:34:void <init>(java.lang.String,com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    43:60:void analyzeSpeech(java.lang.String) -> a
    69:79:void startActivity() -> a
com.atakmap.android.helloworld.speechtotext.SpeechPointDropper -> com.atakmap.android.helloworld.speechtotext.n:
    java.lang.String TAG -> a
    java.lang.String CHAR_DEG -> b
    java.lang.String[] atArray -> c
    java.lang.String[] aArray -> d
    java.lang.String[] friendlyArray -> e
    java.lang.String[] hostileArray -> f
    java.lang.String[] unknownArray -> g
    java.lang.String[] neutralArray -> h
    java.lang.String[] spotMapArray -> i
    java.lang.String[] wordLetterArray -> j
    java.lang.String[] wordNumberArray -> k
    java.lang.String[] rangeUnitsArray -> l
    java.lang.String[] cardinalArray -> m
    java.lang.String[] unitTypesArray -> n
    java.lang.String[] unitTagsArray -> o
    java.lang.String markerType -> p
    java.lang.String rawCoordInfo -> q
    com.atakmap.android.user.PlacePointTool$MarkerCreator marker -> r
    com.atakmap.coremap.conversions.CoordinateFormat coordinateFormat -> s
    double bearing -> t
    boolean polarDrop -> u
    com.atakmap.coremap.conversions.Span span -> v
    30:70:void <init>(java.lang.String,com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    80:142:void analyzeSpeech(java.lang.String) -> a
    146:147:void startActivity() -> a
    155:194:void markerValidator() -> d
    204:227:void coordTypeDiscoverer() -> e
    236:275:void coordFormatter() -> f
    283:290:void pointPlotter(com.atakmap.coremap.maps.coords.GeoPoint) -> a
    300:314:java.lang.String mgrsAndUTMCleaner(java.lang.String) -> b
    327:346:java.lang.String degreeCleaner(java.lang.String) -> c
    353:366:void loadResources() -> g
    373:430:void polar() -> h
    28:28:void access$000(com.atakmap.android.helloworld.speechtotext.SpeechPointDropper,com.atakmap.coremap.maps.coords.GeoPoint) -> a
com.atakmap.android.helloworld.speechtotext.SpeechPointDropper$1 -> com.atakmap.android.helloworld.speechtotext.o:
    com.atakmap.android.user.geocode.GeocodingTask val$gt -> a
    com.atakmap.android.helloworld.speechtotext.SpeechPointDropper this$0 -> b
    261:261:void <init>(com.atakmap.android.helloworld.speechtotext.SpeechPointDropper,com.atakmap.android.user.geocode.GeocodingTask) -> <init>
    264:271:void onResult() -> onResult
com.atakmap.android.helloworld.speechtotext.SpeechToActivity -> com.atakmap.android.helloworld.speechtotext.SpeechToActivity:
    int NAVIGATE_INTENT -> a
    int PLOT_INTENT -> b
    int BLOODHOUND_INTENT -> c
    int NINE_LINE_INTENT -> d
    int COMPASS_INTENT -> e
    int BRIGHTNESS_INTENT -> f
    int DELETE_INTENT -> g
    int LINK_INTENT -> h
    int SHOW_HOSTILES_INTENT -> i
    int OPEN_DETAILS_INTENT -> j
    int EMERGENCY_INTENT -> k
    int CAMERA_INTENT -> l
    java.lang.String QUICK_INTENT -> m
    java.lang.String NAVIGATE_SPEECH_INFO -> n
    java.lang.String ACTIVITY_INFO_BUNDLE -> o
    java.lang.String DESTINATION -> p
    java.lang.String EMERGENCY_TYPE -> q
    java.lang.String ACTIVITY_INTENT -> r
    int REQ_CODE_SPEECH_INPUT -> s
    java.lang.String TAG -> t
    java.lang.String[] dropArray -> u
    java.lang.String[] quickArray -> v
    java.lang.String[] navArray -> w
    java.lang.String[] bloodHoundArray -> x
    java.lang.String[] nineLineArray -> y
    java.lang.String[] compassArray -> z
    java.lang.String[] brightnessArray -> A
    java.lang.String[] deleteArray -> B
    java.lang.String[] hostileSynonyms -> C
    java.lang.String[] openArray -> D
    java.lang.String[] detailsArray -> E
    java.lang.String[] emergencyArray -> F
    java.lang.String[] nineOneOneArray -> G
    java.lang.String[] cancelArray -> H
    java.lang.String[] ringTheBellArray -> I
    java.lang.String[] troopsInContactArray -> J
    java.lang.String[] linkArray -> K
    java.lang.String[] cameraArray -> L
    android.content.Intent returnIntent -> M
    android.os.Bundle activities -> N
    26:73:void <init>() -> <init>
    82:105:void onCreate(android.os.Bundle) -> onCreate
    111:125:void promptSpeechInput() -> a
    137:156:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    166:303:void activityDecider(java.lang.String) -> a
    309:311:void broadcast() -> b
com.atakmap.android.helloworld.speechtotext.SpeechToActivity$SpeechDataListener -> com.atakmap.android.helloworld.speechtotext.SpeechToActivity$a:
    boolean registered -> a
    com.atakmap.android.helloworld.speechtotext.SpeechToActivity$SpeechDataReceiver sdra -> b
    324:326:void <init>() -> <init>
    330:335:void register(android.content.Context,com.atakmap.android.helloworld.speechtotext.SpeechToActivity$SpeechDataReceiver) -> a
    339:352:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.atakmap.android.helloworld.speechtotext.SpeechToActivity$SpeechDataReceiver -> com.atakmap.android.helloworld.speechtotext.SpeechToActivity$b:
    void onSpeechDataReceived(android.os.Bundle) -> a
com.atakmap.android.helloworld.utils.PluginRecyclerView -> atakplugin.helloworld.br:
    android.content.Context appContext -> al
    18:19:void <init>(android.content.Context) -> <init>
    22:23:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    26:27:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    36:37:void setAppContext(android.content.Context) -> a
    45:45:android.content.res.Resources getResources() -> getResources
com.javacodegeeks.android.contentprovidertest.BirthProvider -> com.javacodegeeks.android.contentprovidertest.BirthProvider:
    java.lang.String PROVIDER_NAME -> a
    java.lang.String URL -> b
    android.net.Uri CONTENT_URI -> c
    java.lang.String ID -> d
    java.lang.String NAME -> e
    java.lang.String BIRTHDAY -> f
    int FRIENDS -> g
    int FRIENDS_ID -> h
    com.javacodegeeks.android.contentprovidertest.BirthProvider$DBHelper dbHelper -> i
    java.util.HashMap BirthMap -> o
    android.content.UriMatcher uriMatcher -> j
    android.database.sqlite.SQLiteDatabase database -> p
    java.lang.String DATABASE_NAME -> k
    java.lang.String TABLE_NAME -> l
    int DATABASE_VERSION -> m
    java.lang.String CREATE_TABLE -> n
    21:21:void <init>() -> <init>
    89:97:boolean onCreate() -> onCreate
    104:130:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    136:144:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    151:169:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    175:194:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    201:209:java.lang.String getType(android.net.Uri) -> getType
    25:47:void <clinit>() -> <clinit>
com.javacodegeeks.android.contentprovidertest.BirthProvider$DBHelper -> com.javacodegeeks.android.contentprovidertest.BirthProvider$a:
    63:65:void <init>(android.content.Context) -> <init>
    70:71:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    77:82:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
